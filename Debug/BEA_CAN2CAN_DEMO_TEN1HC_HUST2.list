
BEA_CAN2CAN_DEMO_TEN1HC_HUST2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005acc  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  08005c5c  08005c5c  00006c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005cd0  08005cd0  00007064  2**0
                  CONTENTS
  4 .ARM          00000008  08005cd0  08005cd0  00006cd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005cd8  08005cd8  00007064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005cd8  08005cd8  00006cd8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005cdc  08005cdc  00006cdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08005ce0  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00007064  2**0
                  CONTENTS
 10 .bss          0000131c  20000064  20000064  00007064  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20001380  20001380  00007064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00007064  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000d11b  00000000  00000000  00007094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000236c  00000000  00000000  000141af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000a48  00000000  00000000  00016520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000007d2  00000000  00000000  00016f68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000211f2  00000000  00000000  0001773a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000e5f0  00000000  00000000  0003892c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000c7672  00000000  00000000  00046f1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0010e58e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002e04  00000000  00000000  0010e5d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000069  00000000  00000000  001113d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08005c44 	.word	0x08005c44

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	08005c44 	.word	0x08005c44

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_uldivmod>:
 8000270:	b953      	cbnz	r3, 8000288 <__aeabi_uldivmod+0x18>
 8000272:	b94a      	cbnz	r2, 8000288 <__aeabi_uldivmod+0x18>
 8000274:	2900      	cmp	r1, #0
 8000276:	bf08      	it	eq
 8000278:	2800      	cmpeq	r0, #0
 800027a:	bf1c      	itt	ne
 800027c:	f04f 31ff 	movne.w	r1, #4294967295
 8000280:	f04f 30ff 	movne.w	r0, #4294967295
 8000284:	f000 b988 	b.w	8000598 <__aeabi_idiv0>
 8000288:	f1ad 0c08 	sub.w	ip, sp, #8
 800028c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000290:	f000 f806 	bl	80002a0 <__udivmoddi4>
 8000294:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800029c:	b004      	add	sp, #16
 800029e:	4770      	bx	lr

080002a0 <__udivmoddi4>:
 80002a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002a4:	9d08      	ldr	r5, [sp, #32]
 80002a6:	468e      	mov	lr, r1
 80002a8:	4604      	mov	r4, r0
 80002aa:	4688      	mov	r8, r1
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d14a      	bne.n	8000346 <__udivmoddi4+0xa6>
 80002b0:	428a      	cmp	r2, r1
 80002b2:	4617      	mov	r7, r2
 80002b4:	d962      	bls.n	800037c <__udivmoddi4+0xdc>
 80002b6:	fab2 f682 	clz	r6, r2
 80002ba:	b14e      	cbz	r6, 80002d0 <__udivmoddi4+0x30>
 80002bc:	f1c6 0320 	rsb	r3, r6, #32
 80002c0:	fa01 f806 	lsl.w	r8, r1, r6
 80002c4:	fa20 f303 	lsr.w	r3, r0, r3
 80002c8:	40b7      	lsls	r7, r6
 80002ca:	ea43 0808 	orr.w	r8, r3, r8
 80002ce:	40b4      	lsls	r4, r6
 80002d0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002d4:	fa1f fc87 	uxth.w	ip, r7
 80002d8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002dc:	0c23      	lsrs	r3, r4, #16
 80002de:	fb0e 8811 	mls	r8, lr, r1, r8
 80002e2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80002e6:	fb01 f20c 	mul.w	r2, r1, ip
 80002ea:	429a      	cmp	r2, r3
 80002ec:	d909      	bls.n	8000302 <__udivmoddi4+0x62>
 80002ee:	18fb      	adds	r3, r7, r3
 80002f0:	f101 30ff 	add.w	r0, r1, #4294967295
 80002f4:	f080 80ea 	bcs.w	80004cc <__udivmoddi4+0x22c>
 80002f8:	429a      	cmp	r2, r3
 80002fa:	f240 80e7 	bls.w	80004cc <__udivmoddi4+0x22c>
 80002fe:	3902      	subs	r1, #2
 8000300:	443b      	add	r3, r7
 8000302:	1a9a      	subs	r2, r3, r2
 8000304:	b2a3      	uxth	r3, r4
 8000306:	fbb2 f0fe 	udiv	r0, r2, lr
 800030a:	fb0e 2210 	mls	r2, lr, r0, r2
 800030e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000312:	fb00 fc0c 	mul.w	ip, r0, ip
 8000316:	459c      	cmp	ip, r3
 8000318:	d909      	bls.n	800032e <__udivmoddi4+0x8e>
 800031a:	18fb      	adds	r3, r7, r3
 800031c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000320:	f080 80d6 	bcs.w	80004d0 <__udivmoddi4+0x230>
 8000324:	459c      	cmp	ip, r3
 8000326:	f240 80d3 	bls.w	80004d0 <__udivmoddi4+0x230>
 800032a:	443b      	add	r3, r7
 800032c:	3802      	subs	r0, #2
 800032e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000332:	eba3 030c 	sub.w	r3, r3, ip
 8000336:	2100      	movs	r1, #0
 8000338:	b11d      	cbz	r5, 8000342 <__udivmoddi4+0xa2>
 800033a:	40f3      	lsrs	r3, r6
 800033c:	2200      	movs	r2, #0
 800033e:	e9c5 3200 	strd	r3, r2, [r5]
 8000342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000346:	428b      	cmp	r3, r1
 8000348:	d905      	bls.n	8000356 <__udivmoddi4+0xb6>
 800034a:	b10d      	cbz	r5, 8000350 <__udivmoddi4+0xb0>
 800034c:	e9c5 0100 	strd	r0, r1, [r5]
 8000350:	2100      	movs	r1, #0
 8000352:	4608      	mov	r0, r1
 8000354:	e7f5      	b.n	8000342 <__udivmoddi4+0xa2>
 8000356:	fab3 f183 	clz	r1, r3
 800035a:	2900      	cmp	r1, #0
 800035c:	d146      	bne.n	80003ec <__udivmoddi4+0x14c>
 800035e:	4573      	cmp	r3, lr
 8000360:	d302      	bcc.n	8000368 <__udivmoddi4+0xc8>
 8000362:	4282      	cmp	r2, r0
 8000364:	f200 8105 	bhi.w	8000572 <__udivmoddi4+0x2d2>
 8000368:	1a84      	subs	r4, r0, r2
 800036a:	eb6e 0203 	sbc.w	r2, lr, r3
 800036e:	2001      	movs	r0, #1
 8000370:	4690      	mov	r8, r2
 8000372:	2d00      	cmp	r5, #0
 8000374:	d0e5      	beq.n	8000342 <__udivmoddi4+0xa2>
 8000376:	e9c5 4800 	strd	r4, r8, [r5]
 800037a:	e7e2      	b.n	8000342 <__udivmoddi4+0xa2>
 800037c:	2a00      	cmp	r2, #0
 800037e:	f000 8090 	beq.w	80004a2 <__udivmoddi4+0x202>
 8000382:	fab2 f682 	clz	r6, r2
 8000386:	2e00      	cmp	r6, #0
 8000388:	f040 80a4 	bne.w	80004d4 <__udivmoddi4+0x234>
 800038c:	1a8a      	subs	r2, r1, r2
 800038e:	0c03      	lsrs	r3, r0, #16
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	b280      	uxth	r0, r0
 8000396:	b2bc      	uxth	r4, r7
 8000398:	2101      	movs	r1, #1
 800039a:	fbb2 fcfe 	udiv	ip, r2, lr
 800039e:	fb0e 221c 	mls	r2, lr, ip, r2
 80003a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003a6:	fb04 f20c 	mul.w	r2, r4, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d907      	bls.n	80003be <__udivmoddi4+0x11e>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003b4:	d202      	bcs.n	80003bc <__udivmoddi4+0x11c>
 80003b6:	429a      	cmp	r2, r3
 80003b8:	f200 80e0 	bhi.w	800057c <__udivmoddi4+0x2dc>
 80003bc:	46c4      	mov	ip, r8
 80003be:	1a9b      	subs	r3, r3, r2
 80003c0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003c4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003c8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003cc:	fb02 f404 	mul.w	r4, r2, r4
 80003d0:	429c      	cmp	r4, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x144>
 80003d4:	18fb      	adds	r3, r7, r3
 80003d6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x142>
 80003dc:	429c      	cmp	r4, r3
 80003de:	f200 80ca 	bhi.w	8000576 <__udivmoddi4+0x2d6>
 80003e2:	4602      	mov	r2, r0
 80003e4:	1b1b      	subs	r3, r3, r4
 80003e6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80003ea:	e7a5      	b.n	8000338 <__udivmoddi4+0x98>
 80003ec:	f1c1 0620 	rsb	r6, r1, #32
 80003f0:	408b      	lsls	r3, r1
 80003f2:	fa22 f706 	lsr.w	r7, r2, r6
 80003f6:	431f      	orrs	r7, r3
 80003f8:	fa0e f401 	lsl.w	r4, lr, r1
 80003fc:	fa20 f306 	lsr.w	r3, r0, r6
 8000400:	fa2e fe06 	lsr.w	lr, lr, r6
 8000404:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000408:	4323      	orrs	r3, r4
 800040a:	fa00 f801 	lsl.w	r8, r0, r1
 800040e:	fa1f fc87 	uxth.w	ip, r7
 8000412:	fbbe f0f9 	udiv	r0, lr, r9
 8000416:	0c1c      	lsrs	r4, r3, #16
 8000418:	fb09 ee10 	mls	lr, r9, r0, lr
 800041c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000420:	fb00 fe0c 	mul.w	lr, r0, ip
 8000424:	45a6      	cmp	lr, r4
 8000426:	fa02 f201 	lsl.w	r2, r2, r1
 800042a:	d909      	bls.n	8000440 <__udivmoddi4+0x1a0>
 800042c:	193c      	adds	r4, r7, r4
 800042e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000432:	f080 809c 	bcs.w	800056e <__udivmoddi4+0x2ce>
 8000436:	45a6      	cmp	lr, r4
 8000438:	f240 8099 	bls.w	800056e <__udivmoddi4+0x2ce>
 800043c:	3802      	subs	r0, #2
 800043e:	443c      	add	r4, r7
 8000440:	eba4 040e 	sub.w	r4, r4, lr
 8000444:	fa1f fe83 	uxth.w	lr, r3
 8000448:	fbb4 f3f9 	udiv	r3, r4, r9
 800044c:	fb09 4413 	mls	r4, r9, r3, r4
 8000450:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000454:	fb03 fc0c 	mul.w	ip, r3, ip
 8000458:	45a4      	cmp	ip, r4
 800045a:	d908      	bls.n	800046e <__udivmoddi4+0x1ce>
 800045c:	193c      	adds	r4, r7, r4
 800045e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000462:	f080 8082 	bcs.w	800056a <__udivmoddi4+0x2ca>
 8000466:	45a4      	cmp	ip, r4
 8000468:	d97f      	bls.n	800056a <__udivmoddi4+0x2ca>
 800046a:	3b02      	subs	r3, #2
 800046c:	443c      	add	r4, r7
 800046e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000472:	eba4 040c 	sub.w	r4, r4, ip
 8000476:	fba0 ec02 	umull	lr, ip, r0, r2
 800047a:	4564      	cmp	r4, ip
 800047c:	4673      	mov	r3, lr
 800047e:	46e1      	mov	r9, ip
 8000480:	d362      	bcc.n	8000548 <__udivmoddi4+0x2a8>
 8000482:	d05f      	beq.n	8000544 <__udivmoddi4+0x2a4>
 8000484:	b15d      	cbz	r5, 800049e <__udivmoddi4+0x1fe>
 8000486:	ebb8 0203 	subs.w	r2, r8, r3
 800048a:	eb64 0409 	sbc.w	r4, r4, r9
 800048e:	fa04 f606 	lsl.w	r6, r4, r6
 8000492:	fa22 f301 	lsr.w	r3, r2, r1
 8000496:	431e      	orrs	r6, r3
 8000498:	40cc      	lsrs	r4, r1
 800049a:	e9c5 6400 	strd	r6, r4, [r5]
 800049e:	2100      	movs	r1, #0
 80004a0:	e74f      	b.n	8000342 <__udivmoddi4+0xa2>
 80004a2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004a6:	0c01      	lsrs	r1, r0, #16
 80004a8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004ac:	b280      	uxth	r0, r0
 80004ae:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004b2:	463b      	mov	r3, r7
 80004b4:	4638      	mov	r0, r7
 80004b6:	463c      	mov	r4, r7
 80004b8:	46b8      	mov	r8, r7
 80004ba:	46be      	mov	lr, r7
 80004bc:	2620      	movs	r6, #32
 80004be:	fbb1 f1f7 	udiv	r1, r1, r7
 80004c2:	eba2 0208 	sub.w	r2, r2, r8
 80004c6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004ca:	e766      	b.n	800039a <__udivmoddi4+0xfa>
 80004cc:	4601      	mov	r1, r0
 80004ce:	e718      	b.n	8000302 <__udivmoddi4+0x62>
 80004d0:	4610      	mov	r0, r2
 80004d2:	e72c      	b.n	800032e <__udivmoddi4+0x8e>
 80004d4:	f1c6 0220 	rsb	r2, r6, #32
 80004d8:	fa2e f302 	lsr.w	r3, lr, r2
 80004dc:	40b7      	lsls	r7, r6
 80004de:	40b1      	lsls	r1, r6
 80004e0:	fa20 f202 	lsr.w	r2, r0, r2
 80004e4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80004e8:	430a      	orrs	r2, r1
 80004ea:	fbb3 f8fe 	udiv	r8, r3, lr
 80004ee:	b2bc      	uxth	r4, r7
 80004f0:	fb0e 3318 	mls	r3, lr, r8, r3
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb08 f904 	mul.w	r9, r8, r4
 80004fe:	40b0      	lsls	r0, r6
 8000500:	4589      	cmp	r9, r1
 8000502:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000506:	b280      	uxth	r0, r0
 8000508:	d93e      	bls.n	8000588 <__udivmoddi4+0x2e8>
 800050a:	1879      	adds	r1, r7, r1
 800050c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000510:	d201      	bcs.n	8000516 <__udivmoddi4+0x276>
 8000512:	4589      	cmp	r9, r1
 8000514:	d81f      	bhi.n	8000556 <__udivmoddi4+0x2b6>
 8000516:	eba1 0109 	sub.w	r1, r1, r9
 800051a:	fbb1 f9fe 	udiv	r9, r1, lr
 800051e:	fb09 f804 	mul.w	r8, r9, r4
 8000522:	fb0e 1119 	mls	r1, lr, r9, r1
 8000526:	b292      	uxth	r2, r2
 8000528:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800052c:	4542      	cmp	r2, r8
 800052e:	d229      	bcs.n	8000584 <__udivmoddi4+0x2e4>
 8000530:	18ba      	adds	r2, r7, r2
 8000532:	f109 31ff 	add.w	r1, r9, #4294967295
 8000536:	d2c4      	bcs.n	80004c2 <__udivmoddi4+0x222>
 8000538:	4542      	cmp	r2, r8
 800053a:	d2c2      	bcs.n	80004c2 <__udivmoddi4+0x222>
 800053c:	f1a9 0102 	sub.w	r1, r9, #2
 8000540:	443a      	add	r2, r7
 8000542:	e7be      	b.n	80004c2 <__udivmoddi4+0x222>
 8000544:	45f0      	cmp	r8, lr
 8000546:	d29d      	bcs.n	8000484 <__udivmoddi4+0x1e4>
 8000548:	ebbe 0302 	subs.w	r3, lr, r2
 800054c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000550:	3801      	subs	r0, #1
 8000552:	46e1      	mov	r9, ip
 8000554:	e796      	b.n	8000484 <__udivmoddi4+0x1e4>
 8000556:	eba7 0909 	sub.w	r9, r7, r9
 800055a:	4449      	add	r1, r9
 800055c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000560:	fbb1 f9fe 	udiv	r9, r1, lr
 8000564:	fb09 f804 	mul.w	r8, r9, r4
 8000568:	e7db      	b.n	8000522 <__udivmoddi4+0x282>
 800056a:	4673      	mov	r3, lr
 800056c:	e77f      	b.n	800046e <__udivmoddi4+0x1ce>
 800056e:	4650      	mov	r0, sl
 8000570:	e766      	b.n	8000440 <__udivmoddi4+0x1a0>
 8000572:	4608      	mov	r0, r1
 8000574:	e6fd      	b.n	8000372 <__udivmoddi4+0xd2>
 8000576:	443b      	add	r3, r7
 8000578:	3a02      	subs	r2, #2
 800057a:	e733      	b.n	80003e4 <__udivmoddi4+0x144>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	443b      	add	r3, r7
 8000582:	e71c      	b.n	80003be <__udivmoddi4+0x11e>
 8000584:	4649      	mov	r1, r9
 8000586:	e79c      	b.n	80004c2 <__udivmoddi4+0x222>
 8000588:	eba1 0109 	sub.w	r1, r1, r9
 800058c:	46c4      	mov	ip, r8
 800058e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000592:	fb09 f804 	mul.w	r8, r9, r4
 8000596:	e7c4      	b.n	8000522 <__udivmoddi4+0x282>

08000598 <__aeabi_idiv0>:
 8000598:	4770      	bx	lr
 800059a:	bf00      	nop

0800059c <prepare_CAN_TX_frame>:
 800059c:	b480      	push	{r7}
 800059e:	b087      	sub	sp, #28
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	60f8      	str	r0, [r7, #12]
 80005a4:	60b9      	str	r1, [r7, #8]
 80005a6:	4613      	mov	r3, r2
 80005a8:	71fb      	strb	r3, [r7, #7]
 80005aa:	68fb      	ldr	r3, [r7, #12]
 80005ac:	79fa      	ldrb	r2, [r7, #7]
 80005ae:	701a      	strb	r2, [r3, #0]
 80005b0:	2301      	movs	r3, #1
 80005b2:	75fb      	strb	r3, [r7, #23]
 80005b4:	e00b      	b.n	80005ce <prepare_CAN_TX_frame+0x32>
 80005b6:	7dfb      	ldrb	r3, [r7, #23]
 80005b8:	3b01      	subs	r3, #1
 80005ba:	68ba      	ldr	r2, [r7, #8]
 80005bc:	441a      	add	r2, r3
 80005be:	7dfb      	ldrb	r3, [r7, #23]
 80005c0:	68f9      	ldr	r1, [r7, #12]
 80005c2:	440b      	add	r3, r1
 80005c4:	7812      	ldrb	r2, [r2, #0]
 80005c6:	701a      	strb	r2, [r3, #0]
 80005c8:	7dfb      	ldrb	r3, [r7, #23]
 80005ca:	3301      	adds	r3, #1
 80005cc:	75fb      	strb	r3, [r7, #23]
 80005ce:	7dfa      	ldrb	r2, [r7, #23]
 80005d0:	79fb      	ldrb	r3, [r7, #7]
 80005d2:	429a      	cmp	r2, r3
 80005d4:	d9ef      	bls.n	80005b6 <prepare_CAN_TX_frame+0x1a>
 80005d6:	2301      	movs	r3, #1
 80005d8:	75bb      	strb	r3, [r7, #22]
 80005da:	e00a      	b.n	80005f2 <prepare_CAN_TX_frame+0x56>
 80005dc:	79fa      	ldrb	r2, [r7, #7]
 80005de:	7dbb      	ldrb	r3, [r7, #22]
 80005e0:	4413      	add	r3, r2
 80005e2:	461a      	mov	r2, r3
 80005e4:	68fb      	ldr	r3, [r7, #12]
 80005e6:	4413      	add	r3, r2
 80005e8:	2255      	movs	r2, #85	@ 0x55
 80005ea:	701a      	strb	r2, [r3, #0]
 80005ec:	7dbb      	ldrb	r3, [r7, #22]
 80005ee:	3301      	adds	r3, #1
 80005f0:	75bb      	strb	r3, [r7, #22]
 80005f2:	7dba      	ldrb	r2, [r7, #22]
 80005f4:	79fb      	ldrb	r3, [r7, #7]
 80005f6:	f1c3 0308 	rsb	r3, r3, #8
 80005fa:	429a      	cmp	r2, r3
 80005fc:	dbee      	blt.n	80005dc <prepare_CAN_TX_frame+0x40>
 80005fe:	bf00      	nop
 8000600:	bf00      	nop
 8000602:	371c      	adds	r7, #28
 8000604:	46bd      	mov	sp, r7
 8000606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060a:	4770      	bx	lr

0800060c <prepare_CAN_First_Frame>:
 800060c:	b580      	push	{r7, lr}
 800060e:	b086      	sub	sp, #24
 8000610:	af00      	add	r7, sp, #0
 8000612:	60f8      	str	r0, [r7, #12]
 8000614:	60b9      	str	r1, [r7, #8]
 8000616:	4613      	mov	r3, r2
 8000618:	80fb      	strh	r3, [r7, #6]
 800061a:	88fb      	ldrh	r3, [r7, #6]
 800061c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8000620:	d30d      	bcc.n	800063e <prepare_CAN_First_Frame+0x32>
 8000622:	68bb      	ldr	r3, [r7, #8]
 8000624:	781b      	ldrb	r3, [r3, #0]
 8000626:	3b40      	subs	r3, #64	@ 0x40
 8000628:	b2da      	uxtb	r2, r3
 800062a:	68bb      	ldr	r3, [r7, #8]
 800062c:	701a      	strb	r2, [r3, #0]
 800062e:	68bb      	ldr	r3, [r7, #8]
 8000630:	781a      	ldrb	r2, [r3, #0]
 8000632:	2310      	movs	r3, #16
 8000634:	68b9      	ldr	r1, [r7, #8]
 8000636:	68f8      	ldr	r0, [r7, #12]
 8000638:	f000 f926 	bl	8000888 <prepare_negative_response_buffer>
 800063c:	e023      	b.n	8000686 <prepare_CAN_First_Frame+0x7a>
 800063e:	88fb      	ldrh	r3, [r7, #6]
 8000640:	0a1b      	lsrs	r3, r3, #8
 8000642:	b29b      	uxth	r3, r3
 8000644:	b25b      	sxtb	r3, r3
 8000646:	f003 030f 	and.w	r3, r3, #15
 800064a:	b25b      	sxtb	r3, r3
 800064c:	f043 0310 	orr.w	r3, r3, #16
 8000650:	b25b      	sxtb	r3, r3
 8000652:	b2da      	uxtb	r2, r3
 8000654:	68fb      	ldr	r3, [r7, #12]
 8000656:	701a      	strb	r2, [r3, #0]
 8000658:	68fb      	ldr	r3, [r7, #12]
 800065a:	3301      	adds	r3, #1
 800065c:	88fa      	ldrh	r2, [r7, #6]
 800065e:	b2d2      	uxtb	r2, r2
 8000660:	701a      	strb	r2, [r3, #0]
 8000662:	2302      	movs	r3, #2
 8000664:	75fb      	strb	r3, [r7, #23]
 8000666:	e00b      	b.n	8000680 <prepare_CAN_First_Frame+0x74>
 8000668:	7dfb      	ldrb	r3, [r7, #23]
 800066a:	3b02      	subs	r3, #2
 800066c:	68ba      	ldr	r2, [r7, #8]
 800066e:	441a      	add	r2, r3
 8000670:	7dfb      	ldrb	r3, [r7, #23]
 8000672:	68f9      	ldr	r1, [r7, #12]
 8000674:	440b      	add	r3, r1
 8000676:	7812      	ldrb	r2, [r2, #0]
 8000678:	701a      	strb	r2, [r3, #0]
 800067a:	7dfb      	ldrb	r3, [r7, #23]
 800067c:	3301      	adds	r3, #1
 800067e:	75fb      	strb	r3, [r7, #23]
 8000680:	7dfb      	ldrb	r3, [r7, #23]
 8000682:	2b07      	cmp	r3, #7
 8000684:	d9f0      	bls.n	8000668 <prepare_CAN_First_Frame+0x5c>
 8000686:	3718      	adds	r7, #24
 8000688:	46bd      	mov	sp, r7
 800068a:	bd80      	pop	{r7, pc}

0800068c <prepare_CAN_Flow_Control_Frame>:
 800068c:	b480      	push	{r7}
 800068e:	b085      	sub	sp, #20
 8000690:	af00      	add	r7, sp, #0
 8000692:	6078      	str	r0, [r7, #4]
 8000694:	4b16      	ldr	r3, [pc, #88]	@ (80006f0 <prepare_CAN_Flow_Control_Frame+0x64>)
 8000696:	781a      	ldrb	r2, [r3, #0]
 8000698:	4b16      	ldr	r3, [pc, #88]	@ (80006f4 <prepare_CAN_Flow_Control_Frame+0x68>)
 800069a:	781b      	ldrb	r3, [r3, #0]
 800069c:	429a      	cmp	r2, r3
 800069e:	d903      	bls.n	80006a8 <prepare_CAN_Flow_Control_Frame+0x1c>
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	2232      	movs	r2, #50	@ 0x32
 80006a4:	701a      	strb	r2, [r3, #0]
 80006a6:	e002      	b.n	80006ae <prepare_CAN_Flow_Control_Frame+0x22>
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	2230      	movs	r2, #48	@ 0x30
 80006ac:	701a      	strb	r2, [r3, #0]
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	3301      	adds	r3, #1
 80006b2:	4a10      	ldr	r2, [pc, #64]	@ (80006f4 <prepare_CAN_Flow_Control_Frame+0x68>)
 80006b4:	7812      	ldrb	r2, [r2, #0]
 80006b6:	701a      	strb	r2, [r3, #0]
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	3302      	adds	r3, #2
 80006bc:	4a0e      	ldr	r2, [pc, #56]	@ (80006f8 <prepare_CAN_Flow_Control_Frame+0x6c>)
 80006be:	7812      	ldrb	r2, [r2, #0]
 80006c0:	701a      	strb	r2, [r3, #0]
 80006c2:	2303      	movs	r3, #3
 80006c4:	73fb      	strb	r3, [r7, #15]
 80006c6:	e007      	b.n	80006d8 <prepare_CAN_Flow_Control_Frame+0x4c>
 80006c8:	7bfb      	ldrb	r3, [r7, #15]
 80006ca:	687a      	ldr	r2, [r7, #4]
 80006cc:	4413      	add	r3, r2
 80006ce:	2255      	movs	r2, #85	@ 0x55
 80006d0:	701a      	strb	r2, [r3, #0]
 80006d2:	7bfb      	ldrb	r3, [r7, #15]
 80006d4:	3301      	adds	r3, #1
 80006d6:	73fb      	strb	r3, [r7, #15]
 80006d8:	7bfb      	ldrb	r3, [r7, #15]
 80006da:	2b07      	cmp	r3, #7
 80006dc:	d9f4      	bls.n	80006c8 <prepare_CAN_Flow_Control_Frame+0x3c>
 80006de:	4b04      	ldr	r3, [pc, #16]	@ (80006f0 <prepare_CAN_Flow_Control_Frame+0x64>)
 80006e0:	2201      	movs	r2, #1
 80006e2:	701a      	strb	r2, [r3, #0]
 80006e4:	bf00      	nop
 80006e6:	3714      	adds	r7, #20
 80006e8:	46bd      	mov	sp, r7
 80006ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ee:	4770      	bx	lr
 80006f0:	20001204 	.word	0x20001204
 80006f4:	20000004 	.word	0x20000004
 80006f8:	20000005 	.word	0x20000005

080006fc <prepare_One_CAN_Consecutive_Frame>:
 80006fc:	b480      	push	{r7}
 80006fe:	b087      	sub	sp, #28
 8000700:	af00      	add	r7, sp, #0
 8000702:	60f8      	str	r0, [r7, #12]
 8000704:	60b9      	str	r1, [r7, #8]
 8000706:	4613      	mov	r3, r2
 8000708:	71fb      	strb	r3, [r7, #7]
 800070a:	4b1f      	ldr	r3, [pc, #124]	@ (8000788 <prepare_One_CAN_Consecutive_Frame+0x8c>)
 800070c:	781b      	ldrb	r3, [r3, #0]
 800070e:	b25b      	sxtb	r3, r3
 8000710:	f003 030f 	and.w	r3, r3, #15
 8000714:	b25b      	sxtb	r3, r3
 8000716:	f043 0320 	orr.w	r3, r3, #32
 800071a:	b25b      	sxtb	r3, r3
 800071c:	b2da      	uxtb	r2, r3
 800071e:	68fb      	ldr	r3, [r7, #12]
 8000720:	701a      	strb	r2, [r3, #0]
 8000722:	2301      	movs	r3, #1
 8000724:	75fb      	strb	r3, [r7, #23]
 8000726:	e00b      	b.n	8000740 <prepare_One_CAN_Consecutive_Frame+0x44>
 8000728:	7dfb      	ldrb	r3, [r7, #23]
 800072a:	3b01      	subs	r3, #1
 800072c:	68ba      	ldr	r2, [r7, #8]
 800072e:	441a      	add	r2, r3
 8000730:	7dfb      	ldrb	r3, [r7, #23]
 8000732:	68f9      	ldr	r1, [r7, #12]
 8000734:	440b      	add	r3, r1
 8000736:	7812      	ldrb	r2, [r2, #0]
 8000738:	701a      	strb	r2, [r3, #0]
 800073a:	7dfb      	ldrb	r3, [r7, #23]
 800073c:	3301      	adds	r3, #1
 800073e:	75fb      	strb	r3, [r7, #23]
 8000740:	7dfa      	ldrb	r2, [r7, #23]
 8000742:	79fb      	ldrb	r3, [r7, #7]
 8000744:	429a      	cmp	r2, r3
 8000746:	d9ef      	bls.n	8000728 <prepare_One_CAN_Consecutive_Frame+0x2c>
 8000748:	2301      	movs	r3, #1
 800074a:	75bb      	strb	r3, [r7, #22]
 800074c:	e00a      	b.n	8000764 <prepare_One_CAN_Consecutive_Frame+0x68>
 800074e:	79fa      	ldrb	r2, [r7, #7]
 8000750:	7dbb      	ldrb	r3, [r7, #22]
 8000752:	4413      	add	r3, r2
 8000754:	461a      	mov	r2, r3
 8000756:	68fb      	ldr	r3, [r7, #12]
 8000758:	4413      	add	r3, r2
 800075a:	2255      	movs	r2, #85	@ 0x55
 800075c:	701a      	strb	r2, [r3, #0]
 800075e:	7dbb      	ldrb	r3, [r7, #22]
 8000760:	3301      	adds	r3, #1
 8000762:	75bb      	strb	r3, [r7, #22]
 8000764:	7dba      	ldrb	r2, [r7, #22]
 8000766:	79fb      	ldrb	r3, [r7, #7]
 8000768:	f1c3 0308 	rsb	r3, r3, #8
 800076c:	429a      	cmp	r2, r3
 800076e:	dbee      	blt.n	800074e <prepare_One_CAN_Consecutive_Frame+0x52>
 8000770:	4b05      	ldr	r3, [pc, #20]	@ (8000788 <prepare_One_CAN_Consecutive_Frame+0x8c>)
 8000772:	781b      	ldrb	r3, [r3, #0]
 8000774:	3301      	adds	r3, #1
 8000776:	b2da      	uxtb	r2, r3
 8000778:	4b03      	ldr	r3, [pc, #12]	@ (8000788 <prepare_One_CAN_Consecutive_Frame+0x8c>)
 800077a:	701a      	strb	r2, [r3, #0]
 800077c:	bf00      	nop
 800077e:	371c      	adds	r7, #28
 8000780:	46bd      	mov	sp, r7
 8000782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000786:	4770      	bx	lr
 8000788:	20001204 	.word	0x20001204

0800078c <prepare_CAN_Consecutive_Frames>:
 800078c:	b580      	push	{r7, lr}
 800078e:	b086      	sub	sp, #24
 8000790:	af00      	add	r7, sp, #0
 8000792:	60f8      	str	r0, [r7, #12]
 8000794:	60b9      	str	r1, [r7, #8]
 8000796:	4613      	mov	r3, r2
 8000798:	80fb      	strh	r3, [r7, #6]
 800079a:	2300      	movs	r3, #0
 800079c:	82fb      	strh	r3, [r7, #22]
 800079e:	e034      	b.n	800080a <prepare_CAN_Consecutive_Frames+0x7e>
 80007a0:	88fa      	ldrh	r2, [r7, #6]
 80007a2:	8afb      	ldrh	r3, [r7, #22]
 80007a4:	1ad3      	subs	r3, r2, r3
 80007a6:	2b07      	cmp	r3, #7
 80007a8:	bfa8      	it	ge
 80007aa:	2307      	movge	r3, #7
 80007ac:	757b      	strb	r3, [r7, #21]
 80007ae:	8afb      	ldrh	r3, [r7, #22]
 80007b0:	68ba      	ldr	r2, [r7, #8]
 80007b2:	4413      	add	r3, r2
 80007b4:	7d7a      	ldrb	r2, [r7, #21]
 80007b6:	4619      	mov	r1, r3
 80007b8:	68f8      	ldr	r0, [r7, #12]
 80007ba:	f7ff ff9f 	bl	80006fc <prepare_One_CAN_Consecutive_Frame>
 80007be:	68fb      	ldr	r3, [r7, #12]
 80007c0:	4a16      	ldr	r2, [pc, #88]	@ (800081c <prepare_CAN_Consecutive_Frames+0x90>)
 80007c2:	4293      	cmp	r3, r2
 80007c4:	d109      	bne.n	80007da <prepare_CAN_Consecutive_Frames+0x4e>
 80007c6:	68f8      	ldr	r0, [r7, #12]
 80007c8:	f000 f848 	bl	800085c <CAN1_SendMessage>
 80007cc:	4b14      	ldr	r3, [pc, #80]	@ (8000820 <prepare_CAN_Consecutive_Frames+0x94>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	b29b      	uxth	r3, r3
 80007d2:	68f9      	ldr	r1, [r7, #12]
 80007d4:	4618      	mov	r0, r3
 80007d6:	f000 ff6f 	bl	80016b8 <PrintCANLog>
 80007da:	68fb      	ldr	r3, [r7, #12]
 80007dc:	4a11      	ldr	r2, [pc, #68]	@ (8000824 <prepare_CAN_Consecutive_Frames+0x98>)
 80007de:	4293      	cmp	r3, r2
 80007e0:	d109      	bne.n	80007f6 <prepare_CAN_Consecutive_Frames+0x6a>
 80007e2:	68f8      	ldr	r0, [r7, #12]
 80007e4:	f000 f824 	bl	8000830 <CAN2_SendMessage>
 80007e8:	4b0f      	ldr	r3, [pc, #60]	@ (8000828 <prepare_CAN_Consecutive_Frames+0x9c>)
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	b29b      	uxth	r3, r3
 80007ee:	68f9      	ldr	r1, [r7, #12]
 80007f0:	4618      	mov	r0, r3
 80007f2:	f000 ff61 	bl	80016b8 <PrintCANLog>
 80007f6:	7d7b      	ldrb	r3, [r7, #21]
 80007f8:	b29a      	uxth	r2, r3
 80007fa:	8afb      	ldrh	r3, [r7, #22]
 80007fc:	4413      	add	r3, r2
 80007fe:	82fb      	strh	r3, [r7, #22]
 8000800:	4b0a      	ldr	r3, [pc, #40]	@ (800082c <prepare_CAN_Consecutive_Frames+0xa0>)
 8000802:	781b      	ldrb	r3, [r3, #0]
 8000804:	4618      	mov	r0, r3
 8000806:	f001 fa99 	bl	8001d3c <HAL_Delay>
 800080a:	8afa      	ldrh	r2, [r7, #22]
 800080c:	88fb      	ldrh	r3, [r7, #6]
 800080e:	429a      	cmp	r2, r3
 8000810:	d3c6      	bcc.n	80007a0 <prepare_CAN_Consecutive_Frames+0x14>
 8000812:	bf00      	nop
 8000814:	bf00      	nop
 8000816:	3718      	adds	r7, #24
 8000818:	46bd      	mov	sp, r7
 800081a:	bd80      	pop	{r7, pc}
 800081c:	200011e4 	.word	0x200011e4
 8000820:	2000015c 	.word	0x2000015c
 8000824:	200011f4 	.word	0x200011f4
 8000828:	2000019c 	.word	0x2000019c
 800082c:	20000005 	.word	0x20000005

08000830 <CAN2_SendMessage>:
 8000830:	b580      	push	{r7, lr}
 8000832:	b084      	sub	sp, #16
 8000834:	af00      	add	r7, sp, #0
 8000836:	6078      	str	r0, [r7, #4]
 8000838:	f107 030c 	add.w	r3, r7, #12
 800083c:	4a04      	ldr	r2, [pc, #16]	@ (8000850 <CAN2_SendMessage+0x20>)
 800083e:	4905      	ldr	r1, [pc, #20]	@ (8000854 <CAN2_SendMessage+0x24>)
 8000840:	4805      	ldr	r0, [pc, #20]	@ (8000858 <CAN2_SendMessage+0x28>)
 8000842:	f002 f88b 	bl	800295c <HAL_CAN_AddTxMessage>
 8000846:	bf00      	nop
 8000848:	3710      	adds	r7, #16
 800084a:	46bd      	mov	sp, r7
 800084c:	bd80      	pop	{r7, pc}
 800084e:	bf00      	nop
 8000850:	200011f4 	.word	0x200011f4
 8000854:	2000019c 	.word	0x2000019c
 8000858:	200000f0 	.word	0x200000f0

0800085c <CAN1_SendMessage>:
 800085c:	b580      	push	{r7, lr}
 800085e:	b084      	sub	sp, #16
 8000860:	af00      	add	r7, sp, #0
 8000862:	6078      	str	r0, [r7, #4]
 8000864:	f107 030c 	add.w	r3, r7, #12
 8000868:	4a04      	ldr	r2, [pc, #16]	@ (800087c <CAN1_SendMessage+0x20>)
 800086a:	4905      	ldr	r1, [pc, #20]	@ (8000880 <CAN1_SendMessage+0x24>)
 800086c:	4805      	ldr	r0, [pc, #20]	@ (8000884 <CAN1_SendMessage+0x28>)
 800086e:	f002 f875 	bl	800295c <HAL_CAN_AddTxMessage>
 8000872:	bf00      	nop
 8000874:	3710      	adds	r7, #16
 8000876:	46bd      	mov	sp, r7
 8000878:	bd80      	pop	{r7, pc}
 800087a:	bf00      	nop
 800087c:	200011e4 	.word	0x200011e4
 8000880:	2000015c 	.word	0x2000015c
 8000884:	200000c8 	.word	0x200000c8

08000888 <prepare_negative_response_buffer>:
 8000888:	b580      	push	{r7, lr}
 800088a:	b084      	sub	sp, #16
 800088c:	af00      	add	r7, sp, #0
 800088e:	60f8      	str	r0, [r7, #12]
 8000890:	60b9      	str	r1, [r7, #8]
 8000892:	4611      	mov	r1, r2
 8000894:	461a      	mov	r2, r3
 8000896:	460b      	mov	r3, r1
 8000898:	71fb      	strb	r3, [r7, #7]
 800089a:	4613      	mov	r3, r2
 800089c:	71bb      	strb	r3, [r7, #6]
 800089e:	68bb      	ldr	r3, [r7, #8]
 80008a0:	227f      	movs	r2, #127	@ 0x7f
 80008a2:	701a      	strb	r2, [r3, #0]
 80008a4:	68bb      	ldr	r3, [r7, #8]
 80008a6:	3301      	adds	r3, #1
 80008a8:	79fa      	ldrb	r2, [r7, #7]
 80008aa:	701a      	strb	r2, [r3, #0]
 80008ac:	68bb      	ldr	r3, [r7, #8]
 80008ae:	3302      	adds	r3, #2
 80008b0:	79ba      	ldrb	r2, [r7, #6]
 80008b2:	701a      	strb	r2, [r3, #0]
 80008b4:	2203      	movs	r2, #3
 80008b6:	68b9      	ldr	r1, [r7, #8]
 80008b8:	68f8      	ldr	r0, [r7, #12]
 80008ba:	f7ff fe6f 	bl	800059c <prepare_CAN_TX_frame>
 80008be:	bf00      	nop
 80008c0:	3710      	adds	r7, #16
 80008c2:	46bd      	mov	sp, r7
 80008c4:	bd80      	pop	{r7, pc}
	...

080008c8 <SID_22_Practice>:
 80008c8:	b580      	push	{r7, lr}
 80008ca:	b084      	sub	sp, #16
 80008cc:	af00      	add	r7, sp, #0
 80008ce:	4b1f      	ldr	r3, [pc, #124]	@ (800094c <SID_22_Practice+0x84>)
 80008d0:	785b      	ldrb	r3, [r3, #1]
 80008d2:	73fb      	strb	r3, [r7, #15]
 80008d4:	4b1d      	ldr	r3, [pc, #116]	@ (800094c <SID_22_Practice+0x84>)
 80008d6:	789b      	ldrb	r3, [r3, #2]
 80008d8:	73bb      	strb	r3, [r7, #14]
 80008da:	4b1c      	ldr	r3, [pc, #112]	@ (800094c <SID_22_Practice+0x84>)
 80008dc:	78db      	ldrb	r3, [r3, #3]
 80008de:	737b      	strb	r3, [r7, #13]
 80008e0:	4b1a      	ldr	r3, [pc, #104]	@ (800094c <SID_22_Practice+0x84>)
 80008e2:	781b      	ldrb	r3, [r3, #0]
 80008e4:	733b      	strb	r3, [r7, #12]
 80008e6:	7b3b      	ldrb	r3, [r7, #12]
 80008e8:	2b03      	cmp	r3, #3
 80008ea:	d006      	beq.n	80008fa <SID_22_Practice+0x32>
 80008ec:	7bfa      	ldrb	r2, [r7, #15]
 80008ee:	1d39      	adds	r1, r7, #4
 80008f0:	2313      	movs	r3, #19
 80008f2:	4817      	ldr	r0, [pc, #92]	@ (8000950 <SID_22_Practice+0x88>)
 80008f4:	f7ff ffc8 	bl	8000888 <prepare_negative_response_buffer>
 80008f8:	e024      	b.n	8000944 <SID_22_Practice+0x7c>
 80008fa:	7bbb      	ldrb	r3, [r7, #14]
 80008fc:	2b01      	cmp	r3, #1
 80008fe:	d11b      	bne.n	8000938 <SID_22_Practice+0x70>
 8000900:	7b7b      	ldrb	r3, [r7, #13]
 8000902:	2b23      	cmp	r3, #35	@ 0x23
 8000904:	d118      	bne.n	8000938 <SID_22_Practice+0x70>
 8000906:	7bfb      	ldrb	r3, [r7, #15]
 8000908:	3340      	adds	r3, #64	@ 0x40
 800090a:	b2db      	uxtb	r3, r3
 800090c:	713b      	strb	r3, [r7, #4]
 800090e:	2301      	movs	r3, #1
 8000910:	717b      	strb	r3, [r7, #5]
 8000912:	2323      	movs	r3, #35	@ 0x23
 8000914:	71bb      	strb	r3, [r7, #6]
 8000916:	4b0f      	ldr	r3, [pc, #60]	@ (8000954 <SID_22_Practice+0x8c>)
 8000918:	881b      	ldrh	r3, [r3, #0]
 800091a:	0a1b      	lsrs	r3, r3, #8
 800091c:	b29b      	uxth	r3, r3
 800091e:	b2db      	uxtb	r3, r3
 8000920:	71fb      	strb	r3, [r7, #7]
 8000922:	4b0c      	ldr	r3, [pc, #48]	@ (8000954 <SID_22_Practice+0x8c>)
 8000924:	881b      	ldrh	r3, [r3, #0]
 8000926:	b2db      	uxtb	r3, r3
 8000928:	723b      	strb	r3, [r7, #8]
 800092a:	1d3b      	adds	r3, r7, #4
 800092c:	2205      	movs	r2, #5
 800092e:	4619      	mov	r1, r3
 8000930:	4807      	ldr	r0, [pc, #28]	@ (8000950 <SID_22_Practice+0x88>)
 8000932:	f7ff fe33 	bl	800059c <prepare_CAN_TX_frame>
 8000936:	e005      	b.n	8000944 <SID_22_Practice+0x7c>
 8000938:	7bfa      	ldrb	r2, [r7, #15]
 800093a:	1d39      	adds	r1, r7, #4
 800093c:	2331      	movs	r3, #49	@ 0x31
 800093e:	4804      	ldr	r0, [pc, #16]	@ (8000950 <SID_22_Practice+0x88>)
 8000940:	f7ff ffa2 	bl	8000888 <prepare_negative_response_buffer>
 8000944:	3710      	adds	r7, #16
 8000946:	46bd      	mov	sp, r7
 8000948:	bd80      	pop	{r7, pc}
 800094a:	bf00      	nop
 800094c:	200011ec 	.word	0x200011ec
 8000950:	200011e4 	.word	0x200011e4
 8000954:	20000000 	.word	0x20000000

08000958 <generate_seed>:
/*********BOSCH BEA PROGRAM SKELETON DEMO CODE************/
/*********************************************************/

#include "dcm_seca.h"

void generate_seed(){
 8000958:	b580      	push	{r7, lr}
 800095a:	b082      	sub	sp, #8
 800095c:	af00      	add	r7, sp, #0
	for (int i = 0; i < 6; i++){
 800095e:	2300      	movs	r3, #0
 8000960:	607b      	str	r3, [r7, #4]
 8000962:	e020      	b.n	80009a6 <generate_seed+0x4e>
        HAL_ADC_Start(&hadc1);
 8000964:	482a      	ldr	r0, [pc, #168]	@ (8000a10 <generate_seed+0xb8>)
 8000966:	f001 fa51 	bl	8001e0c <HAL_ADC_Start>
        HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 800096a:	f04f 31ff 	mov.w	r1, #4294967295
 800096e:	4828      	ldr	r0, [pc, #160]	@ (8000a10 <generate_seed+0xb8>)
 8000970:	f001 fb1e 	bl	8001fb0 <HAL_ADC_PollForConversion>
        uint32_t adc_val = HAL_ADC_GetValue(&hadc1);
 8000974:	4826      	ldr	r0, [pc, #152]	@ (8000a10 <generate_seed+0xb8>)
 8000976:	f001 fba6 	bl	80020c6 <HAL_ADC_GetValue>
 800097a:	6038      	str	r0, [r7, #0]

        seed[i] = (uint8_t)((adc_val ^ (TimeStamp << i)) & 0xFF);
 800097c:	683b      	ldr	r3, [r7, #0]
 800097e:	b2da      	uxtb	r2, r3
 8000980:	4b24      	ldr	r3, [pc, #144]	@ (8000a14 <generate_seed+0xbc>)
 8000982:	6819      	ldr	r1, [r3, #0]
 8000984:	687b      	ldr	r3, [r7, #4]
 8000986:	fa01 f303 	lsl.w	r3, r1, r3
 800098a:	b2db      	uxtb	r3, r3
 800098c:	4053      	eors	r3, r2
 800098e:	b2d9      	uxtb	r1, r3
 8000990:	4a21      	ldr	r2, [pc, #132]	@ (8000a18 <generate_seed+0xc0>)
 8000992:	687b      	ldr	r3, [r7, #4]
 8000994:	4413      	add	r3, r2
 8000996:	460a      	mov	r2, r1
 8000998:	701a      	strb	r2, [r3, #0]
        HAL_Delay(1);
 800099a:	2001      	movs	r0, #1
 800099c:	f001 f9ce 	bl	8001d3c <HAL_Delay>
	for (int i = 0; i < 6; i++){
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	3301      	adds	r3, #1
 80009a4:	607b      	str	r3, [r7, #4]
 80009a6:	687b      	ldr	r3, [r7, #4]
 80009a8:	2b05      	cmp	r3, #5
 80009aa:	dddb      	ble.n	8000964 <generate_seed+0xc>
	}

	key[0] = seed[0] ^ seed[1];
 80009ac:	4b1a      	ldr	r3, [pc, #104]	@ (8000a18 <generate_seed+0xc0>)
 80009ae:	781a      	ldrb	r2, [r3, #0]
 80009b0:	4b19      	ldr	r3, [pc, #100]	@ (8000a18 <generate_seed+0xc0>)
 80009b2:	785b      	ldrb	r3, [r3, #1]
 80009b4:	4053      	eors	r3, r2
 80009b6:	b2da      	uxtb	r2, r3
 80009b8:	4b18      	ldr	r3, [pc, #96]	@ (8000a1c <generate_seed+0xc4>)
 80009ba:	701a      	strb	r2, [r3, #0]
	key[1] = seed[1] + seed[2];
 80009bc:	4b16      	ldr	r3, [pc, #88]	@ (8000a18 <generate_seed+0xc0>)
 80009be:	785a      	ldrb	r2, [r3, #1]
 80009c0:	4b15      	ldr	r3, [pc, #84]	@ (8000a18 <generate_seed+0xc0>)
 80009c2:	789b      	ldrb	r3, [r3, #2]
 80009c4:	4413      	add	r3, r2
 80009c6:	b2da      	uxtb	r2, r3
 80009c8:	4b14      	ldr	r3, [pc, #80]	@ (8000a1c <generate_seed+0xc4>)
 80009ca:	705a      	strb	r2, [r3, #1]
	key[2] = seed[2] ^ seed[3];
 80009cc:	4b12      	ldr	r3, [pc, #72]	@ (8000a18 <generate_seed+0xc0>)
 80009ce:	789a      	ldrb	r2, [r3, #2]
 80009d0:	4b11      	ldr	r3, [pc, #68]	@ (8000a18 <generate_seed+0xc0>)
 80009d2:	78db      	ldrb	r3, [r3, #3]
 80009d4:	4053      	eors	r3, r2
 80009d6:	b2da      	uxtb	r2, r3
 80009d8:	4b10      	ldr	r3, [pc, #64]	@ (8000a1c <generate_seed+0xc4>)
 80009da:	709a      	strb	r2, [r3, #2]
	key[3] = seed[3] + seed[0];
 80009dc:	4b0e      	ldr	r3, [pc, #56]	@ (8000a18 <generate_seed+0xc0>)
 80009de:	78da      	ldrb	r2, [r3, #3]
 80009e0:	4b0d      	ldr	r3, [pc, #52]	@ (8000a18 <generate_seed+0xc0>)
 80009e2:	781b      	ldrb	r3, [r3, #0]
 80009e4:	4413      	add	r3, r2
 80009e6:	b2da      	uxtb	r2, r3
 80009e8:	4b0c      	ldr	r3, [pc, #48]	@ (8000a1c <generate_seed+0xc4>)
 80009ea:	70da      	strb	r2, [r3, #3]
	key[4] = seed[4] & 0xF0;
 80009ec:	4b0a      	ldr	r3, [pc, #40]	@ (8000a18 <generate_seed+0xc0>)
 80009ee:	791b      	ldrb	r3, [r3, #4]
 80009f0:	f023 030f 	bic.w	r3, r3, #15
 80009f4:	b2da      	uxtb	r2, r3
 80009f6:	4b09      	ldr	r3, [pc, #36]	@ (8000a1c <generate_seed+0xc4>)
 80009f8:	711a      	strb	r2, [r3, #4]
	key[5] = seed[5] & 0x0F;
 80009fa:	4b07      	ldr	r3, [pc, #28]	@ (8000a18 <generate_seed+0xc0>)
 80009fc:	795b      	ldrb	r3, [r3, #5]
 80009fe:	f003 030f 	and.w	r3, r3, #15
 8000a02:	b2da      	uxtb	r2, r3
 8000a04:	4b05      	ldr	r3, [pc, #20]	@ (8000a1c <generate_seed+0xc4>)
 8000a06:	715a      	strb	r2, [r3, #5]
}
 8000a08:	bf00      	nop
 8000a0a:	3708      	adds	r7, #8
 8000a0c:	46bd      	mov	sp, r7
 8000a0e:	bd80      	pop	{r7, pc}
 8000a10:	20000080 	.word	0x20000080
 8000a14:	20001208 	.word	0x20001208
 8000a18:	2000120c 	.word	0x2000120c
 8000a1c:	20001214 	.word	0x20001214

08000a20 <validate_key>:


bool validate_key(uint8_t key_from_user[6]){
 8000a20:	b580      	push	{r7, lr}
 8000a22:	b082      	sub	sp, #8
 8000a24:	af00      	add	r7, sp, #0
 8000a26:	6078      	str	r0, [r7, #4]

	if (memcmp(key_from_user, key, 6) == 0) return true;
 8000a28:	2206      	movs	r2, #6
 8000a2a:	4907      	ldr	r1, [pc, #28]	@ (8000a48 <validate_key+0x28>)
 8000a2c:	6878      	ldr	r0, [r7, #4]
 8000a2e:	f004 fc7b 	bl	8005328 <memcmp>
 8000a32:	4603      	mov	r3, r0
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	d101      	bne.n	8000a3c <validate_key+0x1c>
 8000a38:	2301      	movs	r3, #1
 8000a3a:	e000      	b.n	8000a3e <validate_key+0x1e>
	else return false;
 8000a3c:	2300      	movs	r3, #0
}
 8000a3e:	4618      	mov	r0, r3
 8000a40:	3708      	adds	r7, #8
 8000a42:	46bd      	mov	sp, r7
 8000a44:	bd80      	pop	{r7, pc}
 8000a46:	bf00      	nop
 8000a48:	20001214 	.word	0x20001214

08000a4c <SID_27_Practice>:
void SID_27_Practice(){
 8000a4c:	b580      	push	{r7, lr}
 8000a4e:	b084      	sub	sp, #16
 8000a50:	af00      	add	r7, sp, #0
	uint8_t data_buffer[8];
	if (((CAN1_DATA_RX[0] >> 4) & 0xFF) == 0x00) {
 8000a52:	4b83      	ldr	r3, [pc, #524]	@ (8000c60 <SID_27_Practice+0x214>)
 8000a54:	781b      	ldrb	r3, [r3, #0]
 8000a56:	091b      	lsrs	r3, r3, #4
 8000a58:	b2db      	uxtb	r3, r3
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d14f      	bne.n	8000afe <SID_27_Practice+0xb2>

		SID = CAN1_DATA_RX[1];
 8000a5e:	4b80      	ldr	r3, [pc, #512]	@ (8000c60 <SID_27_Practice+0x214>)
 8000a60:	785a      	ldrb	r2, [r3, #1]
 8000a62:	4b80      	ldr	r3, [pc, #512]	@ (8000c64 <SID_27_Practice+0x218>)
 8000a64:	701a      	strb	r2, [r3, #0]
		uint8_t	sub_func = CAN1_DATA_RX[2];
 8000a66:	4b7e      	ldr	r3, [pc, #504]	@ (8000c60 <SID_27_Practice+0x214>)
 8000a68:	789b      	ldrb	r3, [r3, #2]
 8000a6a:	72fb      	strb	r3, [r7, #11]
		uint8_t	len = CAN1_DATA_RX[0];
 8000a6c:	4b7c      	ldr	r3, [pc, #496]	@ (8000c60 <SID_27_Practice+0x214>)
 8000a6e:	781b      	ldrb	r3, [r3, #0]
 8000a70:	72bb      	strb	r3, [r7, #10]

		if (sub_func == 1){
 8000a72:	7afb      	ldrb	r3, [r7, #11]
 8000a74:	2b01      	cmp	r3, #1
 8000a76:	d12f      	bne.n	8000ad8 <SID_27_Practice+0x8c>
			if (len != 2){
 8000a78:	7abb      	ldrb	r3, [r7, #10]
 8000a7a:	2b02      	cmp	r3, #2
 8000a7c:	d007      	beq.n	8000a8e <SID_27_Practice+0x42>
				//Loi 0x13: sai format
				prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x13);
 8000a7e:	4b79      	ldr	r3, [pc, #484]	@ (8000c64 <SID_27_Practice+0x218>)
 8000a80:	781a      	ldrb	r2, [r3, #0]
 8000a82:	4639      	mov	r1, r7
 8000a84:	2313      	movs	r3, #19
 8000a86:	4878      	ldr	r0, [pc, #480]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000a88:	f7ff fefe 	bl	8000888 <prepare_negative_response_buffer>
				return;
 8000a8c:	e0e4      	b.n	8000c58 <SID_27_Practice+0x20c>
			}

			if (security_access_granted){
 8000a8e:	4b77      	ldr	r3, [pc, #476]	@ (8000c6c <SID_27_Practice+0x220>)
 8000a90:	781b      	ldrb	r3, [r3, #0]
 8000a92:	2b00      	cmp	r3, #0
 8000a94:	d007      	beq.n	8000aa6 <SID_27_Practice+0x5a>
				//goi seed khi he thong da mo roi -> loi 0x10
				prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x10);
 8000a96:	4b73      	ldr	r3, [pc, #460]	@ (8000c64 <SID_27_Practice+0x218>)
 8000a98:	781a      	ldrb	r2, [r3, #0]
 8000a9a:	4639      	mov	r1, r7
 8000a9c:	2310      	movs	r3, #16
 8000a9e:	4872      	ldr	r0, [pc, #456]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000aa0:	f7ff fef2 	bl	8000888 <prepare_negative_response_buffer>
				return;
 8000aa4:	e0d8      	b.n	8000c58 <SID_27_Practice+0x20c>
			}

			seed_sent = true;
 8000aa6:	4b72      	ldr	r3, [pc, #456]	@ (8000c70 <SID_27_Practice+0x224>)
 8000aa8:	2201      	movs	r2, #1
 8000aaa:	701a      	strb	r2, [r3, #0]
			generate_seed();
 8000aac:	f7ff ff54 	bl	8000958 <generate_seed>
			data_buffer[0] = SID + 0x40;
 8000ab0:	4b6c      	ldr	r3, [pc, #432]	@ (8000c64 <SID_27_Practice+0x218>)
 8000ab2:	781b      	ldrb	r3, [r3, #0]
 8000ab4:	3340      	adds	r3, #64	@ 0x40
 8000ab6:	b2db      	uxtb	r3, r3
 8000ab8:	703b      	strb	r3, [r7, #0]
			data_buffer[1] = 0x01;
 8000aba:	2301      	movs	r3, #1
 8000abc:	707b      	strb	r3, [r7, #1]
			memcpy(&data_buffer[2],seed, 6);
 8000abe:	4a6d      	ldr	r2, [pc, #436]	@ (8000c74 <SID_27_Practice+0x228>)
 8000ac0:	1cbb      	adds	r3, r7, #2
 8000ac2:	6811      	ldr	r1, [r2, #0]
 8000ac4:	6019      	str	r1, [r3, #0]
 8000ac6:	8892      	ldrh	r2, [r2, #4]
 8000ac8:	809a      	strh	r2, [r3, #4]
			prepare_CAN_First_Frame(CAN1_DATA_TX, data_buffer, 8);
 8000aca:	463b      	mov	r3, r7
 8000acc:	2208      	movs	r2, #8
 8000ace:	4619      	mov	r1, r3
 8000ad0:	4865      	ldr	r0, [pc, #404]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000ad2:	f7ff fd9b 	bl	800060c <prepare_CAN_First_Frame>
			return;
 8000ad6:	e0bf      	b.n	8000c58 <SID_27_Practice+0x20c>
		}
		else if (sub_func ==2){
 8000ad8:	7afb      	ldrb	r3, [r7, #11]
 8000ada:	2b02      	cmp	r3, #2
 8000adc:	d107      	bne.n	8000aee <SID_27_Practice+0xa2>
			prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x13);
 8000ade:	4b61      	ldr	r3, [pc, #388]	@ (8000c64 <SID_27_Practice+0x218>)
 8000ae0:	781a      	ldrb	r2, [r3, #0]
 8000ae2:	4639      	mov	r1, r7
 8000ae4:	2313      	movs	r3, #19
 8000ae6:	4860      	ldr	r0, [pc, #384]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000ae8:	f7ff fece 	bl	8000888 <prepare_negative_response_buffer>
			return;
 8000aec:	e0b4      	b.n	8000c58 <SID_27_Practice+0x20c>
		}
		else{
			prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x10);
 8000aee:	4b5d      	ldr	r3, [pc, #372]	@ (8000c64 <SID_27_Practice+0x218>)
 8000af0:	781a      	ldrb	r2, [r3, #0]
 8000af2:	4639      	mov	r1, r7
 8000af4:	2310      	movs	r3, #16
 8000af6:	485c      	ldr	r0, [pc, #368]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000af8:	f7ff fec6 	bl	8000888 <prepare_negative_response_buffer>
			return;
 8000afc:	e0ac      	b.n	8000c58 <SID_27_Practice+0x20c>
		}
	}

	if (((CAN1_DATA_RX[0] >> 4) & 0xFF) == 0x01) {
 8000afe:	4b58      	ldr	r3, [pc, #352]	@ (8000c60 <SID_27_Practice+0x214>)
 8000b00:	781b      	ldrb	r3, [r3, #0]
 8000b02:	091b      	lsrs	r3, r3, #4
 8000b04:	b2db      	uxtb	r3, r3
 8000b06:	2b01      	cmp	r3, #1
 8000b08:	d14d      	bne.n	8000ba6 <SID_27_Practice+0x15a>
			uint16_t len = ((CAN1_DATA_RX[0] & 0x0F) << 8) | CAN1_DATA_RX[1];
 8000b0a:	4b55      	ldr	r3, [pc, #340]	@ (8000c60 <SID_27_Practice+0x214>)
 8000b0c:	781b      	ldrb	r3, [r3, #0]
 8000b0e:	b21b      	sxth	r3, r3
 8000b10:	021b      	lsls	r3, r3, #8
 8000b12:	b21b      	sxth	r3, r3
 8000b14:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8000b18:	b21a      	sxth	r2, r3
 8000b1a:	4b51      	ldr	r3, [pc, #324]	@ (8000c60 <SID_27_Practice+0x214>)
 8000b1c:	785b      	ldrb	r3, [r3, #1]
 8000b1e:	b21b      	sxth	r3, r3
 8000b20:	4313      	orrs	r3, r2
 8000b22:	b21b      	sxth	r3, r3
 8000b24:	81fb      	strh	r3, [r7, #14]
			uint8_t SID = CAN1_DATA_RX[2];
 8000b26:	4b4e      	ldr	r3, [pc, #312]	@ (8000c60 <SID_27_Practice+0x214>)
 8000b28:	789b      	ldrb	r3, [r3, #2]
 8000b2a:	737b      	strb	r3, [r7, #13]
			uint8_t sub_func = CAN1_DATA_RX[3];
 8000b2c:	4b4c      	ldr	r3, [pc, #304]	@ (8000c60 <SID_27_Practice+0x214>)
 8000b2e:	78db      	ldrb	r3, [r3, #3]
 8000b30:	733b      	strb	r3, [r7, #12]

			if (sub_func == 2){
 8000b32:	7b3b      	ldrb	r3, [r7, #12]
 8000b34:	2b02      	cmp	r3, #2
 8000b36:	d12f      	bne.n	8000b98 <SID_27_Practice+0x14c>

				if (len != 8){
 8000b38:	89fb      	ldrh	r3, [r7, #14]
 8000b3a:	2b08      	cmp	r3, #8
 8000b3c:	d015      	beq.n	8000b6a <SID_27_Practice+0x11e>
					//Loi 0x13: sai format
					prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x13);
 8000b3e:	7b7a      	ldrb	r2, [r7, #13]
 8000b40:	4639      	mov	r1, r7
 8000b42:	2313      	movs	r3, #19
 8000b44:	4848      	ldr	r0, [pc, #288]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000b46:	f7ff fe9f 	bl	8000888 <prepare_negative_response_buffer>
					seed_sent = !seed_sent;
 8000b4a:	4b49      	ldr	r3, [pc, #292]	@ (8000c70 <SID_27_Practice+0x224>)
 8000b4c:	781b      	ldrb	r3, [r3, #0]
 8000b4e:	2b00      	cmp	r3, #0
 8000b50:	bf14      	ite	ne
 8000b52:	2301      	movne	r3, #1
 8000b54:	2300      	moveq	r3, #0
 8000b56:	b2db      	uxtb	r3, r3
 8000b58:	f083 0301 	eor.w	r3, r3, #1
 8000b5c:	b2db      	uxtb	r3, r3
 8000b5e:	f003 0301 	and.w	r3, r3, #1
 8000b62:	b2da      	uxtb	r2, r3
 8000b64:	4b42      	ldr	r3, [pc, #264]	@ (8000c70 <SID_27_Practice+0x224>)
 8000b66:	701a      	strb	r2, [r3, #0]
					return;
 8000b68:	e076      	b.n	8000c58 <SID_27_Practice+0x20c>
				}

				if (!seed_sent){
 8000b6a:	4b41      	ldr	r3, [pc, #260]	@ (8000c70 <SID_27_Practice+0x224>)
 8000b6c:	781b      	ldrb	r3, [r3, #0]
 8000b6e:	f083 0301 	eor.w	r3, r3, #1
 8000b72:	b2db      	uxtb	r3, r3
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	d006      	beq.n	8000b86 <SID_27_Practice+0x13a>
					//Chua gui 27 01 de lay seed ma da gui 27 02 voi key -> loi 0x10
					prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x10);
 8000b78:	7b7a      	ldrb	r2, [r7, #13]
 8000b7a:	4639      	mov	r1, r7
 8000b7c:	2310      	movs	r3, #16
 8000b7e:	483a      	ldr	r0, [pc, #232]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000b80:	f7ff fe82 	bl	8000888 <prepare_negative_response_buffer>
					return;
 8000b84:	e068      	b.n	8000c58 <SID_27_Practice+0x20c>
				}

			memcpy(key_from_user, &CAN1_DATA_RX[4], 4);
 8000b86:	4b36      	ldr	r3, [pc, #216]	@ (8000c60 <SID_27_Practice+0x214>)
 8000b88:	685b      	ldr	r3, [r3, #4]
 8000b8a:	461a      	mov	r2, r3
 8000b8c:	4b3a      	ldr	r3, [pc, #232]	@ (8000c78 <SID_27_Practice+0x22c>)
 8000b8e:	601a      	str	r2, [r3, #0]
			prepare_CAN_Flow_Control_Frame(CAN1_DATA_TX);
 8000b90:	4835      	ldr	r0, [pc, #212]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000b92:	f7ff fd7b 	bl	800068c <prepare_CAN_Flow_Control_Frame>
 8000b96:	e006      	b.n	8000ba6 <SID_27_Practice+0x15a>
			}

			else {
				prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x10);
 8000b98:	7b7a      	ldrb	r2, [r7, #13]
 8000b9a:	4639      	mov	r1, r7
 8000b9c:	2310      	movs	r3, #16
 8000b9e:	4832      	ldr	r0, [pc, #200]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000ba0:	f7ff fe72 	bl	8000888 <prepare_negative_response_buffer>
				return;
 8000ba4:	e058      	b.n	8000c58 <SID_27_Practice+0x20c>
			}
	}

	if (((CAN1_DATA_RX[0] >> 4) & 0xFF) == 0x02) {
 8000ba6:	4b2e      	ldr	r3, [pc, #184]	@ (8000c60 <SID_27_Practice+0x214>)
 8000ba8:	781b      	ldrb	r3, [r3, #0]
 8000baa:	091b      	lsrs	r3, r3, #4
 8000bac:	b2db      	uxtb	r3, r3
 8000bae:	2b02      	cmp	r3, #2
 8000bb0:	d142      	bne.n	8000c38 <SID_27_Practice+0x1ec>
		memcpy(&key_from_user[4], &CAN1_DATA_RX[1], 2);
 8000bb2:	4b2b      	ldr	r3, [pc, #172]	@ (8000c60 <SID_27_Practice+0x214>)
 8000bb4:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8000bb8:	b29b      	uxth	r3, r3
 8000bba:	4a2f      	ldr	r2, [pc, #188]	@ (8000c78 <SID_27_Practice+0x22c>)
 8000bbc:	8093      	strh	r3, [r2, #4]
		if (security_access_granted) {
 8000bbe:	4b2b      	ldr	r3, [pc, #172]	@ (8000c6c <SID_27_Practice+0x220>)
 8000bc0:	781b      	ldrb	r3, [r3, #0]
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d007      	beq.n	8000bd6 <SID_27_Practice+0x18a>
			prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x10);
 8000bc6:	4b27      	ldr	r3, [pc, #156]	@ (8000c64 <SID_27_Practice+0x218>)
 8000bc8:	781a      	ldrb	r2, [r3, #0]
 8000bca:	4639      	mov	r1, r7
 8000bcc:	2310      	movs	r3, #16
 8000bce:	4826      	ldr	r0, [pc, #152]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000bd0:	f7ff fe5a 	bl	8000888 <prepare_negative_response_buffer>
			return;
 8000bd4:	e040      	b.n	8000c58 <SID_27_Practice+0x20c>
		}
		if (!validate_key(key_from_user)){
 8000bd6:	4828      	ldr	r0, [pc, #160]	@ (8000c78 <SID_27_Practice+0x22c>)
 8000bd8:	f7ff ff22 	bl	8000a20 <validate_key>
 8000bdc:	4603      	mov	r3, r0
 8000bde:	f083 0301 	eor.w	r3, r3, #1
 8000be2:	b2db      	uxtb	r3, r3
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	d016      	beq.n	8000c16 <SID_27_Practice+0x1ca>
			//key khong dung voi seed -> loi 0x35
			prepare_negative_response_buffer(CAN1_DATA_TX, data_buffer, SID, 0x35);
 8000be8:	4b1e      	ldr	r3, [pc, #120]	@ (8000c64 <SID_27_Practice+0x218>)
 8000bea:	781a      	ldrb	r2, [r3, #0]
 8000bec:	4639      	mov	r1, r7
 8000bee:	2335      	movs	r3, #53	@ 0x35
 8000bf0:	481d      	ldr	r0, [pc, #116]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000bf2:	f7ff fe49 	bl	8000888 <prepare_negative_response_buffer>
			seed_sent = !seed_sent;
 8000bf6:	4b1e      	ldr	r3, [pc, #120]	@ (8000c70 <SID_27_Practice+0x224>)
 8000bf8:	781b      	ldrb	r3, [r3, #0]
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	bf14      	ite	ne
 8000bfe:	2301      	movne	r3, #1
 8000c00:	2300      	moveq	r3, #0
 8000c02:	b2db      	uxtb	r3, r3
 8000c04:	f083 0301 	eor.w	r3, r3, #1
 8000c08:	b2db      	uxtb	r3, r3
 8000c0a:	f003 0301 	and.w	r3, r3, #1
 8000c0e:	b2da      	uxtb	r2, r3
 8000c10:	4b17      	ldr	r3, [pc, #92]	@ (8000c70 <SID_27_Practice+0x224>)
 8000c12:	701a      	strb	r2, [r3, #0]
			return;
 8000c14:	e020      	b.n	8000c58 <SID_27_Practice+0x20c>
		}


		//Dung key -> positive response
	    data_buffer[0] = SID + 0x40;
 8000c16:	4b13      	ldr	r3, [pc, #76]	@ (8000c64 <SID_27_Practice+0x218>)
 8000c18:	781b      	ldrb	r3, [r3, #0]
 8000c1a:	3340      	adds	r3, #64	@ 0x40
 8000c1c:	b2db      	uxtb	r3, r3
 8000c1e:	703b      	strb	r3, [r7, #0]
	    data_buffer[1] = 0x02;
 8000c20:	2302      	movs	r3, #2
 8000c22:	707b      	strb	r3, [r7, #1]
	    prepare_CAN_TX_frame(CAN1_DATA_TX, data_buffer, 2);
 8000c24:	463b      	mov	r3, r7
 8000c26:	2202      	movs	r2, #2
 8000c28:	4619      	mov	r1, r3
 8000c2a:	480f      	ldr	r0, [pc, #60]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000c2c:	f7ff fcb6 	bl	800059c <prepare_CAN_TX_frame>
		security_access_granted = true;
 8000c30:	4b0e      	ldr	r3, [pc, #56]	@ (8000c6c <SID_27_Practice+0x220>)
 8000c32:	2201      	movs	r2, #1
 8000c34:	701a      	strb	r2, [r3, #0]
		return;
 8000c36:	e00f      	b.n	8000c58 <SID_27_Practice+0x20c>
	}

	if (((CAN1_DATA_RX[0] >> 4) & 0xFF) == 0x03) {
 8000c38:	4b09      	ldr	r3, [pc, #36]	@ (8000c60 <SID_27_Practice+0x214>)
 8000c3a:	781b      	ldrb	r3, [r3, #0]
 8000c3c:	091b      	lsrs	r3, r3, #4
 8000c3e:	b2db      	uxtb	r3, r3
 8000c40:	2b03      	cmp	r3, #3
 8000c42:	d109      	bne.n	8000c58 <SID_27_Practice+0x20c>
		memcpy(&data_buffer[0], &seed[4], 2);
 8000c44:	4b0b      	ldr	r3, [pc, #44]	@ (8000c74 <SID_27_Practice+0x228>)
 8000c46:	889b      	ldrh	r3, [r3, #4]
 8000c48:	b29b      	uxth	r3, r3
 8000c4a:	803b      	strh	r3, [r7, #0]
		prepare_CAN_Consecutive_Frames (CAN1_DATA_TX, data_buffer, 2);
 8000c4c:	463b      	mov	r3, r7
 8000c4e:	2202      	movs	r2, #2
 8000c50:	4619      	mov	r1, r3
 8000c52:	4805      	ldr	r0, [pc, #20]	@ (8000c68 <SID_27_Practice+0x21c>)
 8000c54:	f7ff fd9a 	bl	800078c <prepare_CAN_Consecutive_Frames>
	}

}
 8000c58:	3710      	adds	r7, #16
 8000c5a:	46bd      	mov	sp, r7
 8000c5c:	bd80      	pop	{r7, pc}
 8000c5e:	bf00      	nop
 8000c60:	200011ec 	.word	0x200011ec
 8000c64:	20001222 	.word	0x20001222
 8000c68:	200011e4 	.word	0x200011e4
 8000c6c:	20001224 	.word	0x20001224
 8000c70:	20001223 	.word	0x20001223
 8000c74:	2000120c 	.word	0x2000120c
 8000c78:	2000121c 	.word	0x2000121c

08000c7c <SID_2E_Practice>:
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	b084      	sub	sp, #16
 8000c80:	af00      	add	r7, sp, #0
 8000c82:	4b2b      	ldr	r3, [pc, #172]	@ (8000d30 <SID_2E_Practice+0xb4>)
 8000c84:	781b      	ldrb	r3, [r3, #0]
 8000c86:	73fb      	strb	r3, [r7, #15]
 8000c88:	4b29      	ldr	r3, [pc, #164]	@ (8000d30 <SID_2E_Practice+0xb4>)
 8000c8a:	785b      	ldrb	r3, [r3, #1]
 8000c8c:	73bb      	strb	r3, [r7, #14]
 8000c8e:	4b28      	ldr	r3, [pc, #160]	@ (8000d30 <SID_2E_Practice+0xb4>)
 8000c90:	789b      	ldrb	r3, [r3, #2]
 8000c92:	737b      	strb	r3, [r7, #13]
 8000c94:	4b26      	ldr	r3, [pc, #152]	@ (8000d30 <SID_2E_Practice+0xb4>)
 8000c96:	78db      	ldrb	r3, [r3, #3]
 8000c98:	733b      	strb	r3, [r7, #12]
 8000c9a:	4b25      	ldr	r3, [pc, #148]	@ (8000d30 <SID_2E_Practice+0xb4>)
 8000c9c:	791b      	ldrb	r3, [r3, #4]
 8000c9e:	b21b      	sxth	r3, r3
 8000ca0:	021b      	lsls	r3, r3, #8
 8000ca2:	b21a      	sxth	r2, r3
 8000ca4:	4b22      	ldr	r3, [pc, #136]	@ (8000d30 <SID_2E_Practice+0xb4>)
 8000ca6:	795b      	ldrb	r3, [r3, #5]
 8000ca8:	b21b      	sxth	r3, r3
 8000caa:	4313      	orrs	r3, r2
 8000cac:	b21b      	sxth	r3, r3
 8000cae:	817b      	strh	r3, [r7, #10]
 8000cb0:	4b20      	ldr	r3, [pc, #128]	@ (8000d34 <SID_2E_Practice+0xb8>)
 8000cb2:	781b      	ldrb	r3, [r3, #0]
 8000cb4:	f083 0301 	eor.w	r3, r3, #1
 8000cb8:	b2db      	uxtb	r3, r3
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d006      	beq.n	8000ccc <SID_2E_Practice+0x50>
 8000cbe:	7bba      	ldrb	r2, [r7, #14]
 8000cc0:	4639      	mov	r1, r7
 8000cc2:	2333      	movs	r3, #51	@ 0x33
 8000cc4:	481c      	ldr	r0, [pc, #112]	@ (8000d38 <SID_2E_Practice+0xbc>)
 8000cc6:	f7ff fddf 	bl	8000888 <prepare_negative_response_buffer>
 8000cca:	e02e      	b.n	8000d2a <SID_2E_Practice+0xae>
 8000ccc:	7bfb      	ldrb	r3, [r7, #15]
 8000cce:	2b05      	cmp	r3, #5
 8000cd0:	d006      	beq.n	8000ce0 <SID_2E_Practice+0x64>
 8000cd2:	7bba      	ldrb	r2, [r7, #14]
 8000cd4:	4639      	mov	r1, r7
 8000cd6:	2313      	movs	r3, #19
 8000cd8:	4817      	ldr	r0, [pc, #92]	@ (8000d38 <SID_2E_Practice+0xbc>)
 8000cda:	f7ff fdd5 	bl	8000888 <prepare_negative_response_buffer>
 8000cde:	e024      	b.n	8000d2a <SID_2E_Practice+0xae>
 8000ce0:	7b7b      	ldrb	r3, [r7, #13]
 8000ce2:	2b01      	cmp	r3, #1
 8000ce4:	d102      	bne.n	8000cec <SID_2E_Practice+0x70>
 8000ce6:	7b3b      	ldrb	r3, [r7, #12]
 8000ce8:	2b23      	cmp	r3, #35	@ 0x23
 8000cea:	d006      	beq.n	8000cfa <SID_2E_Practice+0x7e>
 8000cec:	7bba      	ldrb	r2, [r7, #14]
 8000cee:	4639      	mov	r1, r7
 8000cf0:	2331      	movs	r3, #49	@ 0x31
 8000cf2:	4811      	ldr	r0, [pc, #68]	@ (8000d38 <SID_2E_Practice+0xbc>)
 8000cf4:	f7ff fdc8 	bl	8000888 <prepare_negative_response_buffer>
 8000cf8:	e017      	b.n	8000d2a <SID_2E_Practice+0xae>
 8000cfa:	897b      	ldrh	r3, [r7, #10]
 8000cfc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8000d00:	d306      	bcc.n	8000d10 <SID_2E_Practice+0x94>
 8000d02:	7bba      	ldrb	r2, [r7, #14]
 8000d04:	4639      	mov	r1, r7
 8000d06:	2310      	movs	r3, #16
 8000d08:	480b      	ldr	r0, [pc, #44]	@ (8000d38 <SID_2E_Practice+0xbc>)
 8000d0a:	f7ff fdbd 	bl	8000888 <prepare_negative_response_buffer>
 8000d0e:	e00c      	b.n	8000d2a <SID_2E_Practice+0xae>
 8000d10:	4a0a      	ldr	r2, [pc, #40]	@ (8000d3c <SID_2E_Practice+0xc0>)
 8000d12:	897b      	ldrh	r3, [r7, #10]
 8000d14:	8013      	strh	r3, [r2, #0]
 8000d16:	7bbb      	ldrb	r3, [r7, #14]
 8000d18:	3340      	adds	r3, #64	@ 0x40
 8000d1a:	b2db      	uxtb	r3, r3
 8000d1c:	703b      	strb	r3, [r7, #0]
 8000d1e:	463b      	mov	r3, r7
 8000d20:	2201      	movs	r2, #1
 8000d22:	4619      	mov	r1, r3
 8000d24:	4804      	ldr	r0, [pc, #16]	@ (8000d38 <SID_2E_Practice+0xbc>)
 8000d26:	f7ff fc39 	bl	800059c <prepare_CAN_TX_frame>
 8000d2a:	3710      	adds	r7, #16
 8000d2c:	46bd      	mov	sp, r7
 8000d2e:	bd80      	pop	{r7, pc}
 8000d30:	200011ec 	.word	0x200011ec
 8000d34:	20001224 	.word	0x20001224
 8000d38:	200011e4 	.word	0x200011e4
 8000d3c:	20000000 	.word	0x20000000

08000d40 <HAL_CAN_RxFifo0MsgPendingCallback>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
//Đây là callback, chạy sau khi node 1 hoặc node 2 nhận dữ liệu

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
{
 8000d40:	b580      	push	{r7, lr}
 8000d42:	b08c      	sub	sp, #48	@ 0x30
 8000d44:	af00      	add	r7, sp, #0
 8000d46:	6078      	str	r0, [r7, #4]
    CAN_RxHeaderTypeDef rxHeader;
    uint8_t rxData[8];

    HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxHeader, rxData);
 8000d48:	f107 0308 	add.w	r3, r7, #8
 8000d4c:	f107 0210 	add.w	r2, r7, #16
 8000d50:	2100      	movs	r1, #0
 8000d52:	6878      	ldr	r0, [r7, #4]
 8000d54:	f001 fedd 	bl	8002b12 <HAL_CAN_GetRxMessage>
    if (hcan->Instance == CAN1) {
 8000d58:	687b      	ldr	r3, [r7, #4]
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	4a44      	ldr	r2, [pc, #272]	@ (8000e70 <HAL_CAN_RxFifo0MsgPendingCallback+0x130>)
 8000d5e:	4293      	cmp	r3, r2
 8000d60:	d13e      	bne.n	8000de0 <HAL_CAN_RxFifo0MsgPendingCallback+0xa0>
        if (currentState == STATE_CAN2_TRANSMISSION){
 8000d62:	4b44      	ldr	r3, [pc, #272]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000d64:	781b      	ldrb	r3, [r3, #0]
 8000d66:	2b01      	cmp	r3, #1
 8000d68:	d13a      	bne.n	8000de0 <HAL_CAN_RxFifo0MsgPendingCallback+0xa0>
        	for (uint8_t i = 0; i < 8; i++){
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8000d70:	e00e      	b.n	8000d90 <HAL_CAN_RxFifo0MsgPendingCallback+0x50>
        		CAN1_DATA_RX[i] = rxData[i];
 8000d72:	f897 202f 	ldrb.w	r2, [r7, #47]	@ 0x2f
 8000d76:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000d7a:	3230      	adds	r2, #48	@ 0x30
 8000d7c:	443a      	add	r2, r7
 8000d7e:	f812 1c28 	ldrb.w	r1, [r2, #-40]
 8000d82:	4a3d      	ldr	r2, [pc, #244]	@ (8000e78 <HAL_CAN_RxFifo0MsgPendingCallback+0x138>)
 8000d84:	54d1      	strb	r1, [r2, r3]
        	for (uint8_t i = 0; i < 8; i++){
 8000d86:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000d8a:	3301      	adds	r3, #1
 8000d8c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8000d90:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8000d94:	2b07      	cmp	r3, #7
 8000d96:	d9ec      	bls.n	8000d72 <HAL_CAN_RxFifo0MsgPendingCallback+0x32>
        	}
        if ((CAN1_DATA_RX[0] >> 4) == 0x00) currentState = STATE_READING_CAN1_RECEPTION;
 8000d98:	4b37      	ldr	r3, [pc, #220]	@ (8000e78 <HAL_CAN_RxFifo0MsgPendingCallback+0x138>)
 8000d9a:	781b      	ldrb	r3, [r3, #0]
 8000d9c:	091b      	lsrs	r3, r3, #4
 8000d9e:	b2db      	uxtb	r3, r3
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d102      	bne.n	8000daa <HAL_CAN_RxFifo0MsgPendingCallback+0x6a>
 8000da4:	4b33      	ldr	r3, [pc, #204]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000da6:	2202      	movs	r2, #2
 8000da8:	701a      	strb	r2, [r3, #0]
        if ((CAN1_DATA_RX[0] >> 4) == 0x01) currentState = STATE_PREPARING_FOR_CAN1_FLOW_CONTROL;
 8000daa:	4b33      	ldr	r3, [pc, #204]	@ (8000e78 <HAL_CAN_RxFifo0MsgPendingCallback+0x138>)
 8000dac:	781b      	ldrb	r3, [r3, #0]
 8000dae:	091b      	lsrs	r3, r3, #4
 8000db0:	b2db      	uxtb	r3, r3
 8000db2:	2b01      	cmp	r3, #1
 8000db4:	d102      	bne.n	8000dbc <HAL_CAN_RxFifo0MsgPendingCallback+0x7c>
 8000db6:	4b2f      	ldr	r3, [pc, #188]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000db8:	2208      	movs	r2, #8
 8000dba:	701a      	strb	r2, [r3, #0]
        if ((CAN1_DATA_RX[0] >> 4) == 0x02) currentState = STATE_PREPARING_FOR_CAN1_SINGLE_FRAME;
 8000dbc:	4b2e      	ldr	r3, [pc, #184]	@ (8000e78 <HAL_CAN_RxFifo0MsgPendingCallback+0x138>)
 8000dbe:	781b      	ldrb	r3, [r3, #0]
 8000dc0:	091b      	lsrs	r3, r3, #4
 8000dc2:	b2db      	uxtb	r3, r3
 8000dc4:	2b02      	cmp	r3, #2
 8000dc6:	d102      	bne.n	8000dce <HAL_CAN_RxFifo0MsgPendingCallback+0x8e>
 8000dc8:	4b2a      	ldr	r3, [pc, #168]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000dca:	220a      	movs	r2, #10
 8000dcc:	701a      	strb	r2, [r3, #0]
        if ((CAN1_DATA_RX[0] >> 4) == 0x03) currentState = STATE_PREPARING_FOR_CAN1_CONSECUTIVE_FRAME;
 8000dce:	4b2a      	ldr	r3, [pc, #168]	@ (8000e78 <HAL_CAN_RxFifo0MsgPendingCallback+0x138>)
 8000dd0:	781b      	ldrb	r3, [r3, #0]
 8000dd2:	091b      	lsrs	r3, r3, #4
 8000dd4:	b2db      	uxtb	r3, r3
 8000dd6:	2b03      	cmp	r3, #3
 8000dd8:	d102      	bne.n	8000de0 <HAL_CAN_RxFifo0MsgPendingCallback+0xa0>
 8000dda:	4b26      	ldr	r3, [pc, #152]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000ddc:	2206      	movs	r2, #6
 8000dde:	701a      	strb	r2, [r3, #0]

    }
    }
    if (hcan->Instance == CAN2) {
 8000de0:	687b      	ldr	r3, [r7, #4]
 8000de2:	681b      	ldr	r3, [r3, #0]
 8000de4:	4a25      	ldr	r2, [pc, #148]	@ (8000e7c <HAL_CAN_RxFifo0MsgPendingCallback+0x13c>)
 8000de6:	4293      	cmp	r3, r2
 8000de8:	d13e      	bne.n	8000e68 <HAL_CAN_RxFifo0MsgPendingCallback+0x128>
        if (currentState == STATE_CAN1_TRANSMISSION){
 8000dea:	4b22      	ldr	r3, [pc, #136]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000dec:	781b      	ldrb	r3, [r3, #0]
 8000dee:	2b04      	cmp	r3, #4
 8000df0:	d13a      	bne.n	8000e68 <HAL_CAN_RxFifo0MsgPendingCallback+0x128>
        	for (uint8_t i = 0; i < 8; i++){
 8000df2:	2300      	movs	r3, #0
 8000df4:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e
 8000df8:	e00e      	b.n	8000e18 <HAL_CAN_RxFifo0MsgPendingCallback+0xd8>
        		CAN2_DATA_RX[i] = rxData[i];
 8000dfa:	f897 202e 	ldrb.w	r2, [r7, #46]	@ 0x2e
 8000dfe:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8000e02:	3230      	adds	r2, #48	@ 0x30
 8000e04:	443a      	add	r2, r7
 8000e06:	f812 1c28 	ldrb.w	r1, [r2, #-40]
 8000e0a:	4a1d      	ldr	r2, [pc, #116]	@ (8000e80 <HAL_CAN_RxFifo0MsgPendingCallback+0x140>)
 8000e0c:	54d1      	strb	r1, [r2, r3]
        	for (uint8_t i = 0; i < 8; i++){
 8000e0e:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8000e12:	3301      	adds	r3, #1
 8000e14:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e
 8000e18:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8000e1c:	2b07      	cmp	r3, #7
 8000e1e:	d9ec      	bls.n	8000dfa <HAL_CAN_RxFifo0MsgPendingCallback+0xba>
        	}
        if ((CAN2_DATA_RX[0] >> 4) == 0x00) currentState = STATE_PREPARING_FOR_CAN2_TRANSMISSION;
 8000e20:	4b17      	ldr	r3, [pc, #92]	@ (8000e80 <HAL_CAN_RxFifo0MsgPendingCallback+0x140>)
 8000e22:	781b      	ldrb	r3, [r3, #0]
 8000e24:	091b      	lsrs	r3, r3, #4
 8000e26:	b2db      	uxtb	r3, r3
 8000e28:	2b00      	cmp	r3, #0
 8000e2a:	d102      	bne.n	8000e32 <HAL_CAN_RxFifo0MsgPendingCallback+0xf2>
 8000e2c:	4b11      	ldr	r3, [pc, #68]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000e2e:	2200      	movs	r2, #0
 8000e30:	701a      	strb	r2, [r3, #0]
        if ((CAN2_DATA_RX[0] >> 4) == 0x01) currentState = STATE_PREPARING_FOR_CAN2_FLOW_CONTROL;
 8000e32:	4b13      	ldr	r3, [pc, #76]	@ (8000e80 <HAL_CAN_RxFifo0MsgPendingCallback+0x140>)
 8000e34:	781b      	ldrb	r3, [r3, #0]
 8000e36:	091b      	lsrs	r3, r3, #4
 8000e38:	b2db      	uxtb	r3, r3
 8000e3a:	2b01      	cmp	r3, #1
 8000e3c:	d102      	bne.n	8000e44 <HAL_CAN_RxFifo0MsgPendingCallback+0x104>
 8000e3e:	4b0d      	ldr	r3, [pc, #52]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000e40:	2205      	movs	r2, #5
 8000e42:	701a      	strb	r2, [r3, #0]
        if ((CAN2_DATA_RX[0] >> 4) == 0x02) currentState = STATE_PREPARING_FOR_CAN2_TRANSMISSION;
 8000e44:	4b0e      	ldr	r3, [pc, #56]	@ (8000e80 <HAL_CAN_RxFifo0MsgPendingCallback+0x140>)
 8000e46:	781b      	ldrb	r3, [r3, #0]
 8000e48:	091b      	lsrs	r3, r3, #4
 8000e4a:	b2db      	uxtb	r3, r3
 8000e4c:	2b02      	cmp	r3, #2
 8000e4e:	d102      	bne.n	8000e56 <HAL_CAN_RxFifo0MsgPendingCallback+0x116>
 8000e50:	4b08      	ldr	r3, [pc, #32]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000e52:	2200      	movs	r2, #0
 8000e54:	701a      	strb	r2, [r3, #0]
        if ((CAN2_DATA_RX[0] >> 4) == 0x03) currentState = STATE_PREPARING_FOR_CAN2_CONSECUTIVE_FRAME;
 8000e56:	4b0a      	ldr	r3, [pc, #40]	@ (8000e80 <HAL_CAN_RxFifo0MsgPendingCallback+0x140>)
 8000e58:	781b      	ldrb	r3, [r3, #0]
 8000e5a:	091b      	lsrs	r3, r3, #4
 8000e5c:	b2db      	uxtb	r3, r3
 8000e5e:	2b03      	cmp	r3, #3
 8000e60:	d102      	bne.n	8000e68 <HAL_CAN_RxFifo0MsgPendingCallback+0x128>
 8000e62:	4b04      	ldr	r3, [pc, #16]	@ (8000e74 <HAL_CAN_RxFifo0MsgPendingCallback+0x134>)
 8000e64:	2209      	movs	r2, #9
 8000e66:	701a      	strb	r2, [r3, #0]

        }

    }
}
 8000e68:	bf00      	nop
 8000e6a:	3730      	adds	r7, #48	@ 0x30
 8000e6c:	46bd      	mov	sp, r7
 8000e6e:	bd80      	pop	{r7, pc}
 8000e70:	40006400 	.word	0x40006400
 8000e74:	20001205 	.word	0x20001205
 8000e78:	200011ec 	.word	0x200011ec
 8000e7c:	40006800 	.word	0x40006800
 8000e80:	200011fc 	.word	0x200011fc

08000e84 <set_LED>:

void set_LED (bool LED_State) {
 8000e84:	b580      	push	{r7, lr}
 8000e86:	b082      	sub	sp, #8
 8000e88:	af00      	add	r7, sp, #0
 8000e8a:	4603      	mov	r3, r0
 8000e8c:	71fb      	strb	r3, [r7, #7]
	if (LED_State) HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 8000e8e:	79fb      	ldrb	r3, [r7, #7]
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d005      	beq.n	8000ea0 <set_LED+0x1c>
 8000e94:	2201      	movs	r2, #1
 8000e96:	2101      	movs	r1, #1
 8000e98:	4806      	ldr	r0, [pc, #24]	@ (8000eb4 <set_LED+0x30>)
 8000e9a:	f002 fce1 	bl	8003860 <HAL_GPIO_WritePin>
	else HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
}
 8000e9e:	e004      	b.n	8000eaa <set_LED+0x26>
	else HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 8000ea0:	2200      	movs	r2, #0
 8000ea2:	2101      	movs	r1, #1
 8000ea4:	4803      	ldr	r0, [pc, #12]	@ (8000eb4 <set_LED+0x30>)
 8000ea6:	f002 fcdb 	bl	8003860 <HAL_GPIO_WritePin>
}
 8000eaa:	bf00      	nop
 8000eac:	3708      	adds	r7, #8
 8000eae:	46bd      	mov	sp, r7
 8000eb0:	bd80      	pop	{r7, pc}
 8000eb2:	bf00      	nop
 8000eb4:	40020400 	.word	0x40020400

08000eb8 <HAL_GPIO_EXTI_Callback>:

// button interupt IG_OFF -> IG_ON
uint32_t last_debounce_time = 0;

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	b082      	sub	sp, #8
 8000ebc:	af00      	add	r7, sp, #0
 8000ebe:	4603      	mov	r3, r0
 8000ec0:	80fb      	strh	r3, [r7, #6]
  if (GPIO_Pin == GPIO_PIN_1) {
 8000ec2:	88fb      	ldrh	r3, [r7, #6]
 8000ec4:	2b02      	cmp	r3, #2
 8000ec6:	d116      	bne.n	8000ef6 <HAL_GPIO_EXTI_Callback+0x3e>
    if (HAL_GetTick() - last_debounce_time > 200) // 200ms debounce
 8000ec8:	f000 ff2c 	bl	8001d24 <HAL_GetTick>
 8000ecc:	4602      	mov	r2, r0
 8000ece:	4b0c      	ldr	r3, [pc, #48]	@ (8000f00 <HAL_GPIO_EXTI_Callback+0x48>)
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	1ad3      	subs	r3, r2, r3
 8000ed4:	2bc8      	cmp	r3, #200	@ 0xc8
 8000ed6:	d90e      	bls.n	8000ef6 <HAL_GPIO_EXTI_Callback+0x3e>
    {
      last_debounce_time = HAL_GetTick();
 8000ed8:	f000 ff24 	bl	8001d24 <HAL_GetTick>
 8000edc:	4603      	mov	r3, r0
 8000ede:	4a08      	ldr	r2, [pc, #32]	@ (8000f00 <HAL_GPIO_EXTI_Callback+0x48>)
 8000ee0:	6013      	str	r3, [r2, #0]

      USART3_SendString((uint8_t *)"IG OFF ");
 8000ee2:	4808      	ldr	r0, [pc, #32]	@ (8000f04 <HAL_GPIO_EXTI_Callback+0x4c>)
 8000ee4:	f000 fbce 	bl	8001684 <USART3_SendString>
      MX_CAN1_Setup();
 8000ee8:	f000 fb38 	bl	800155c <MX_CAN1_Setup>
      MX_CAN2_Setup();
 8000eec:	f000 fb82 	bl	80015f4 <MX_CAN2_Setup>
      USART3_SendString((uint8_t *)"-> IG ON \n");
 8000ef0:	4805      	ldr	r0, [pc, #20]	@ (8000f08 <HAL_GPIO_EXTI_Callback+0x50>)
 8000ef2:	f000 fbc7 	bl	8001684 <USART3_SendString>
    }
  }
}
 8000ef6:	bf00      	nop
 8000ef8:	3708      	adds	r7, #8
 8000efa:	46bd      	mov	sp, r7
 8000efc:	bd80      	pop	{r7, pc}
 8000efe:	bf00      	nop
 8000f00:	20001228 	.word	0x20001228
 8000f04:	08005c5c 	.word	0x08005c5c
 8000f08:	08005c64 	.word	0x08005c64

08000f0c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	b082      	sub	sp, #8
 8000f10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	uint16_t i,j = 0;
 8000f12:	2300      	movs	r3, #0
 8000f14:	80fb      	strh	r3, [r7, #6]
	uint16_t Consecutive_Cntr = 0;
 8000f16:	2300      	movs	r3, #0
 8000f18:	80bb      	strh	r3, [r7, #4]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f1a:	f000 fe9d 	bl	8001c58 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f1e:	f000 f92d 	bl	800117c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f22:	f000 fa81 	bl	8001428 <MX_GPIO_Init>
  MX_CAN1_Init();
 8000f26:	f000 f9e5 	bl	80012f4 <MX_CAN1_Init>
  MX_CAN2_Init();
 8000f2a:	f000 fa1b 	bl	8001364 <MX_CAN2_Init>
  MX_USART3_UART_Init();
 8000f2e:	f000 fa51 	bl	80013d4 <MX_USART3_UART_Init>
  MX_ADC1_Init();
 8000f32:	f000 f98d 	bl	8001250 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */
  MX_CAN1_Setup();
 8000f36:	f000 fb11 	bl	800155c <MX_CAN1_Setup>
  MX_CAN2_Setup();
 8000f3a:	f000 fb5b 	bl	80015f4 <MX_CAN2_Setup>
  __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 8000f3e:	4b83      	ldr	r3, [pc, #524]	@ (800114c <main+0x240>)
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	68da      	ldr	r2, [r3, #12]
 8000f44:	4b81      	ldr	r3, [pc, #516]	@ (800114c <main+0x240>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	f042 0220 	orr.w	r2, r2, #32
 8000f4c:	60da      	str	r2, [r3, #12]
  HAL_UART_Receive_IT(&huart3, &REQ_1BYTE_DATA, 1);
 8000f4e:	2201      	movs	r2, #1
 8000f50:	497f      	ldr	r1, [pc, #508]	@ (8001150 <main+0x244>)
 8000f52:	487e      	ldr	r0, [pc, #504]	@ (800114c <main+0x240>)
 8000f54:	f003 fa2d 	bl	80043b2 <HAL_UART_Receive_IT>



  while (1)
  {
	  set_LED(security_access_granted);
 8000f58:	4b7e      	ldr	r3, [pc, #504]	@ (8001154 <main+0x248>)
 8000f5a:	781b      	ldrb	r3, [r3, #0]
 8000f5c:	4618      	mov	r0, r3
 8000f5e:	f7ff ff91 	bl	8000e84 <set_LED>
	  switch (currentState){
 8000f62:	4b7d      	ldr	r3, [pc, #500]	@ (8001158 <main+0x24c>)
 8000f64:	781b      	ldrb	r3, [r3, #0]
 8000f66:	2b0a      	cmp	r3, #10
 8000f68:	d8f6      	bhi.n	8000f58 <main+0x4c>
 8000f6a:	a201      	add	r2, pc, #4	@ (adr r2, 8000f70 <main+0x64>)
 8000f6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f70:	08000f9d 	.word	0x08000f9d
 8000f74:	08000f59 	.word	0x08000f59
 8000f78:	08001077 	.word	0x08001077
 8000f7c:	08001125 	.word	0x08001125
 8000f80:	08000f59 	.word	0x08000f59
 8000f84:	08001033 	.word	0x08001033
 8000f88:	080010bb 	.word	0x080010bb
 8000f8c:	08001009 	.word	0x08001009
 8000f90:	080010e5 	.word	0x080010e5
 8000f94:	08001055 	.word	0x08001055
 8000f98:	08001105 	.word	0x08001105
			case STATE_PREPARING_FOR_CAN2_TRANSMISSION:
				//Từ các giá trị lấy được ở UART, xây dựng CAN_frame
				if (NumBytesReq != 0){
 8000f9c:	4b6f      	ldr	r3, [pc, #444]	@ (800115c <main+0x250>)
 8000f9e:	881b      	ldrh	r3, [r3, #0]
 8000fa0:	2b00      	cmp	r3, #0
 8000fa2:	f000 80cd 	beq.w	8001140 <main+0x234>
					HAL_Delay(200);
 8000fa6:	20c8      	movs	r0, #200	@ 0xc8
 8000fa8:	f000 fec8 	bl	8001d3c <HAL_Delay>

					if (REQ_BUFFER[0] == 0x27 && REQ_BUFFER[1] == 0x02 && NumBytesReq == 8){
 8000fac:	4b6c      	ldr	r3, [pc, #432]	@ (8001160 <main+0x254>)
 8000fae:	781b      	ldrb	r3, [r3, #0]
 8000fb0:	2b27      	cmp	r3, #39	@ 0x27
 8000fb2:	d10b      	bne.n	8000fcc <main+0xc0>
 8000fb4:	4b6a      	ldr	r3, [pc, #424]	@ (8001160 <main+0x254>)
 8000fb6:	785b      	ldrb	r3, [r3, #1]
 8000fb8:	2b02      	cmp	r3, #2
 8000fba:	d107      	bne.n	8000fcc <main+0xc0>
 8000fbc:	4b67      	ldr	r3, [pc, #412]	@ (800115c <main+0x250>)
 8000fbe:	881b      	ldrh	r3, [r3, #0]
 8000fc0:	2b08      	cmp	r3, #8
 8000fc2:	d103      	bne.n	8000fcc <main+0xc0>
		  				currentState = STATE_PREPARING_FOR_CAN2_FIRST_FRAME;
 8000fc4:	4b64      	ldr	r3, [pc, #400]	@ (8001158 <main+0x24c>)
 8000fc6:	2207      	movs	r2, #7
 8000fc8:	701a      	strb	r2, [r3, #0]
		  				break;
 8000fca:	e0bd      	b.n	8001148 <main+0x23c>
					}

					prepare_CAN_TX_frame(CAN2_DATA_TX, REQ_BUFFER, NumBytesReq);
 8000fcc:	4b63      	ldr	r3, [pc, #396]	@ (800115c <main+0x250>)
 8000fce:	881b      	ldrh	r3, [r3, #0]
 8000fd0:	b2db      	uxtb	r3, r3
 8000fd2:	461a      	mov	r2, r3
 8000fd4:	4962      	ldr	r1, [pc, #392]	@ (8001160 <main+0x254>)
 8000fd6:	4863      	ldr	r0, [pc, #396]	@ (8001164 <main+0x258>)
 8000fd8:	f7ff fae0 	bl	800059c <prepare_CAN_TX_frame>
					//Gửi CAN_frame
					currentState = STATE_CAN2_TRANSMISSION;
 8000fdc:	4b5e      	ldr	r3, [pc, #376]	@ (8001158 <main+0x24c>)
 8000fde:	2201      	movs	r2, #1
 8000fe0:	701a      	strb	r2, [r3, #0]
					CAN2_SendMessage(CAN2_DATA_TX);
 8000fe2:	4860      	ldr	r0, [pc, #384]	@ (8001164 <main+0x258>)
 8000fe4:	f7ff fc24 	bl	8000830 <CAN2_SendMessage>
					PrintCANLog(CAN2_pHeader.StdId, CAN2_DATA_TX);
 8000fe8:	4b5f      	ldr	r3, [pc, #380]	@ (8001168 <main+0x25c>)
 8000fea:	681b      	ldr	r3, [r3, #0]
 8000fec:	b29b      	uxth	r3, r3
 8000fee:	495d      	ldr	r1, [pc, #372]	@ (8001164 <main+0x258>)
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	f000 fb61 	bl	80016b8 <PrintCANLog>
					memset(REQ_BUFFER, 0, 20);
 8000ff6:	2214      	movs	r2, #20
 8000ff8:	2100      	movs	r1, #0
 8000ffa:	4859      	ldr	r0, [pc, #356]	@ (8001160 <main+0x254>)
 8000ffc:	f004 f9a4 	bl	8005348 <memset>
					NumBytesReq = 0;
 8001000:	4b56      	ldr	r3, [pc, #344]	@ (800115c <main+0x250>)
 8001002:	2200      	movs	r2, #0
 8001004:	801a      	strh	r2, [r3, #0]
				}

				break;
 8001006:	e09b      	b.n	8001140 <main+0x234>

	  		case STATE_CAN2_TRANSMISSION:
	  			break;

	  		case STATE_PREPARING_FOR_CAN2_FIRST_FRAME:
	  			currentState = STATE_CAN2_TRANSMISSION;
 8001008:	4b53      	ldr	r3, [pc, #332]	@ (8001158 <main+0x24c>)
 800100a:	2201      	movs	r2, #1
 800100c:	701a      	strb	r2, [r3, #0]

				//Từ các giá trị lấy được ở UART, xây dựng CAN_frame
				prepare_CAN_First_Frame(CAN2_DATA_TX, REQ_BUFFER, NumBytesReq);
 800100e:	4b53      	ldr	r3, [pc, #332]	@ (800115c <main+0x250>)
 8001010:	881b      	ldrh	r3, [r3, #0]
 8001012:	461a      	mov	r2, r3
 8001014:	4952      	ldr	r1, [pc, #328]	@ (8001160 <main+0x254>)
 8001016:	4853      	ldr	r0, [pc, #332]	@ (8001164 <main+0x258>)
 8001018:	f7ff faf8 	bl	800060c <prepare_CAN_First_Frame>
				//Gửi CAN_frame
				CAN2_SendMessage(CAN2_DATA_TX);
 800101c:	4851      	ldr	r0, [pc, #324]	@ (8001164 <main+0x258>)
 800101e:	f7ff fc07 	bl	8000830 <CAN2_SendMessage>
				PrintCANLog(CAN2_pHeader.StdId, CAN2_DATA_TX);
 8001022:	4b51      	ldr	r3, [pc, #324]	@ (8001168 <main+0x25c>)
 8001024:	681b      	ldr	r3, [r3, #0]
 8001026:	b29b      	uxth	r3, r3
 8001028:	494e      	ldr	r1, [pc, #312]	@ (8001164 <main+0x258>)
 800102a:	4618      	mov	r0, r3
 800102c:	f000 fb44 	bl	80016b8 <PrintCANLog>
				break;
 8001030:	e08a      	b.n	8001148 <main+0x23c>

	  		case STATE_PREPARING_FOR_CAN2_FLOW_CONTROL:
	  			currentState = STATE_CAN2_TRANSMISSION;
 8001032:	4b49      	ldr	r3, [pc, #292]	@ (8001158 <main+0x24c>)
 8001034:	2201      	movs	r2, #1
 8001036:	701a      	strb	r2, [r3, #0]
	  			prepare_CAN_Flow_Control_Frame (CAN2_DATA_TX);
 8001038:	484a      	ldr	r0, [pc, #296]	@ (8001164 <main+0x258>)
 800103a:	f7ff fb27 	bl	800068c <prepare_CAN_Flow_Control_Frame>
	  			CAN2_SendMessage(CAN2_DATA_TX);
 800103e:	4849      	ldr	r0, [pc, #292]	@ (8001164 <main+0x258>)
 8001040:	f7ff fbf6 	bl	8000830 <CAN2_SendMessage>
	  			PrintCANLog(CAN2_pHeader.StdId, CAN2_DATA_TX);
 8001044:	4b48      	ldr	r3, [pc, #288]	@ (8001168 <main+0x25c>)
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	b29b      	uxth	r3, r3
 800104a:	4946      	ldr	r1, [pc, #280]	@ (8001164 <main+0x258>)
 800104c:	4618      	mov	r0, r3
 800104e:	f000 fb33 	bl	80016b8 <PrintCANLog>
	  			break;
 8001052:	e079      	b.n	8001148 <main+0x23c>

	  		case STATE_PREPARING_FOR_CAN2_CONSECUTIVE_FRAME:
	  			currentState = STATE_CAN2_TRANSMISSION;
 8001054:	4b40      	ldr	r3, [pc, #256]	@ (8001158 <main+0x24c>)
 8001056:	2201      	movs	r2, #1
 8001058:	701a      	strb	r2, [r3, #0]
	  			prepare_CAN_Consecutive_Frames(CAN2_DATA_TX, &REQ_BUFFER[6], 2);
 800105a:	2202      	movs	r2, #2
 800105c:	4943      	ldr	r1, [pc, #268]	@ (800116c <main+0x260>)
 800105e:	4841      	ldr	r0, [pc, #260]	@ (8001164 <main+0x258>)
 8001060:	f7ff fb94 	bl	800078c <prepare_CAN_Consecutive_Frames>
				memset(REQ_BUFFER, 0, 20);
 8001064:	2214      	movs	r2, #20
 8001066:	2100      	movs	r1, #0
 8001068:	483d      	ldr	r0, [pc, #244]	@ (8001160 <main+0x254>)
 800106a:	f004 f96d 	bl	8005348 <memset>
				NumBytesReq = 0;
 800106e:	4b3b      	ldr	r3, [pc, #236]	@ (800115c <main+0x250>)
 8001070:	2200      	movs	r2, #0
 8001072:	801a      	strh	r2, [r3, #0]
	  			break;
 8001074:	e068      	b.n	8001148 <main+0x23c>
	  			 * CAN_Frame[0] chứa số phần tử ở đằng sau
	  			 * CAN_Frame[1] chứa mã lệnh (SID) -> so sánh mã lệnh này có phải 1 trong 3 mã lệnh 22 27 2E không,
	  			 * 	-> Nếu không: reset state machine và break
	  			 * 	-> Nếu có: Đưa vào phương trình phân tích lệnh 22 27 2E
	  			 */
	  			switch (CAN1_DATA_RX[1]) {
 8001076:	4b3e      	ldr	r3, [pc, #248]	@ (8001170 <main+0x264>)
 8001078:	785b      	ldrb	r3, [r3, #1]
 800107a:	2b2e      	cmp	r3, #46	@ 0x2e
 800107c:	d012      	beq.n	80010a4 <main+0x198>
 800107e:	2b2e      	cmp	r3, #46	@ 0x2e
 8001080:	dc16      	bgt.n	80010b0 <main+0x1a4>
 8001082:	2b22      	cmp	r3, #34	@ 0x22
 8001084:	d002      	beq.n	800108c <main+0x180>
 8001086:	2b27      	cmp	r3, #39	@ 0x27
 8001088:	d006      	beq.n	8001098 <main+0x18c>
 800108a:	e011      	b.n	80010b0 <main+0x1a4>
					case 0x22:
						currentState = STATE_PREPARING_FOR_CAN1_TRANSMISSION;
 800108c:	4b32      	ldr	r3, [pc, #200]	@ (8001158 <main+0x24c>)
 800108e:	2203      	movs	r2, #3
 8001090:	701a      	strb	r2, [r3, #0]
						SID_22_Practice();
 8001092:	f7ff fc19 	bl	80008c8 <SID_22_Practice>
						break;
 8001096:	e00f      	b.n	80010b8 <main+0x1ac>
					case 0x27:
						currentState = STATE_PREPARING_FOR_CAN1_TRANSMISSION;
 8001098:	4b2f      	ldr	r3, [pc, #188]	@ (8001158 <main+0x24c>)
 800109a:	2203      	movs	r2, #3
 800109c:	701a      	strb	r2, [r3, #0]
						SID_27_Practice();
 800109e:	f7ff fcd5 	bl	8000a4c <SID_27_Practice>
						break;
 80010a2:	e009      	b.n	80010b8 <main+0x1ac>
					case 0x2E:
						currentState = STATE_PREPARING_FOR_CAN1_TRANSMISSION;
 80010a4:	4b2c      	ldr	r3, [pc, #176]	@ (8001158 <main+0x24c>)
 80010a6:	2203      	movs	r2, #3
 80010a8:	701a      	strb	r2, [r3, #0]
						SID_2E_Practice();
 80010aa:	f7ff fde7 	bl	8000c7c <SID_2E_Practice>
						break;
 80010ae:	e003      	b.n	80010b8 <main+0x1ac>
					default:
						currentState = STATE_PREPARING_FOR_CAN2_TRANSMISSION;
 80010b0:	4b29      	ldr	r3, [pc, #164]	@ (8001158 <main+0x24c>)
 80010b2:	2200      	movs	r2, #0
 80010b4:	701a      	strb	r2, [r3, #0]
						break;
 80010b6:	bf00      	nop
				}
	  			break;
 80010b8:	e046      	b.n	8001148 <main+0x23c>

	  		case STATE_PREPARING_FOR_CAN1_CONSECUTIVE_FRAME:
	  			if (((CAN1_DATA_RX[0]) & 0x0F) == 0x02) currentState = STATE_PREPARING_FOR_CAN2_TRANSMISSION;
 80010ba:	4b2d      	ldr	r3, [pc, #180]	@ (8001170 <main+0x264>)
 80010bc:	781b      	ldrb	r3, [r3, #0]
 80010be:	f003 030f 	and.w	r3, r3, #15
 80010c2:	2b02      	cmp	r3, #2
 80010c4:	d102      	bne.n	80010cc <main+0x1c0>
 80010c6:	4b24      	ldr	r3, [pc, #144]	@ (8001158 <main+0x24c>)
 80010c8:	2200      	movs	r2, #0
 80010ca:	701a      	strb	r2, [r3, #0]
	  			if (((CAN1_DATA_RX[0]) & 0x0F) == 0x00) {currentState = STATE_CAN1_TRANSMISSION;
 80010cc:	4b28      	ldr	r3, [pc, #160]	@ (8001170 <main+0x264>)
 80010ce:	781b      	ldrb	r3, [r3, #0]
 80010d0:	f003 030f 	and.w	r3, r3, #15
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d135      	bne.n	8001144 <main+0x238>
 80010d8:	4b1f      	ldr	r3, [pc, #124]	@ (8001158 <main+0x24c>)
 80010da:	2204      	movs	r2, #4
 80010dc:	701a      	strb	r2, [r3, #0]
	  				SID_27_Practice();
 80010de:	f7ff fcb5 	bl	8000a4c <SID_27_Practice>
	  			}
	  			break;
 80010e2:	e02f      	b.n	8001144 <main+0x238>

	  		case STATE_PREPARING_FOR_CAN1_FLOW_CONTROL:
	  			currentState = STATE_CAN1_TRANSMISSION;
 80010e4:	4b1c      	ldr	r3, [pc, #112]	@ (8001158 <main+0x24c>)
 80010e6:	2204      	movs	r2, #4
 80010e8:	701a      	strb	r2, [r3, #0]
	  			SID_27_Practice();
 80010ea:	f7ff fcaf 	bl	8000a4c <SID_27_Practice>
				CAN1_SendMessage(CAN1_DATA_TX);
 80010ee:	4821      	ldr	r0, [pc, #132]	@ (8001174 <main+0x268>)
 80010f0:	f7ff fbb4 	bl	800085c <CAN1_SendMessage>
				PrintCANLog(CAN1_pHeader.StdId, CAN1_DATA_TX);
 80010f4:	4b20      	ldr	r3, [pc, #128]	@ (8001178 <main+0x26c>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	b29b      	uxth	r3, r3
 80010fa:	491e      	ldr	r1, [pc, #120]	@ (8001174 <main+0x268>)
 80010fc:	4618      	mov	r0, r3
 80010fe:	f000 fadb 	bl	80016b8 <PrintCANLog>
				break;
 8001102:	e021      	b.n	8001148 <main+0x23c>

	  		case STATE_PREPARING_FOR_CAN1_SINGLE_FRAME:
	  			currentState = STATE_CAN1_TRANSMISSION;
 8001104:	4b14      	ldr	r3, [pc, #80]	@ (8001158 <main+0x24c>)
 8001106:	2204      	movs	r2, #4
 8001108:	701a      	strb	r2, [r3, #0]
	  			SID_27_Practice();
 800110a:	f7ff fc9f 	bl	8000a4c <SID_27_Practice>
	  			CAN1_SendMessage(CAN1_DATA_TX);
 800110e:	4819      	ldr	r0, [pc, #100]	@ (8001174 <main+0x268>)
 8001110:	f7ff fba4 	bl	800085c <CAN1_SendMessage>
	  		    PrintCANLog(CAN1_pHeader.StdId, CAN1_DATA_TX);
 8001114:	4b18      	ldr	r3, [pc, #96]	@ (8001178 <main+0x26c>)
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	b29b      	uxth	r3, r3
 800111a:	4916      	ldr	r1, [pc, #88]	@ (8001174 <main+0x268>)
 800111c:	4618      	mov	r0, r3
 800111e:	f000 facb 	bl	80016b8 <PrintCANLog>
	  		    break;
 8001122:	e011      	b.n	8001148 <main+0x23c>

	  		case STATE_PREPARING_FOR_CAN1_TRANSMISSION:
	  			currentState = STATE_CAN1_TRANSMISSION;
 8001124:	4b0c      	ldr	r3, [pc, #48]	@ (8001158 <main+0x24c>)
 8001126:	2204      	movs	r2, #4
 8001128:	701a      	strb	r2, [r3, #0]
	  			CAN1_SendMessage(CAN1_DATA_TX);
 800112a:	4812      	ldr	r0, [pc, #72]	@ (8001174 <main+0x268>)
 800112c:	f7ff fb96 	bl	800085c <CAN1_SendMessage>
	  			PrintCANLog(CAN1_pHeader.StdId, CAN1_DATA_TX);
 8001130:	4b11      	ldr	r3, [pc, #68]	@ (8001178 <main+0x26c>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	b29b      	uxth	r3, r3
 8001136:	490f      	ldr	r1, [pc, #60]	@ (8001174 <main+0x268>)
 8001138:	4618      	mov	r0, r3
 800113a:	f000 fabd 	bl	80016b8 <PrintCANLog>
	  			break;
 800113e:	e003      	b.n	8001148 <main+0x23c>
				break;
 8001140:	bf00      	nop
 8001142:	e709      	b.n	8000f58 <main+0x4c>
	  			break;
 8001144:	bf00      	nop
 8001146:	e707      	b.n	8000f58 <main+0x4c>
	  set_LED(security_access_granted);
 8001148:	e706      	b.n	8000f58 <main+0x4c>
 800114a:	bf00      	nop
 800114c:	20000118 	.word	0x20000118
 8001150:	200011e0 	.word	0x200011e0
 8001154:	20001224 	.word	0x20001224
 8001158:	20001205 	.word	0x20001205
 800115c:	200001dc 	.word	0x200001dc
 8001160:	200001e0 	.word	0x200001e0
 8001164:	200011f4 	.word	0x200011f4
 8001168:	2000019c 	.word	0x2000019c
 800116c:	200001e6 	.word	0x200001e6
 8001170:	200011ec 	.word	0x200011ec
 8001174:	200011e4 	.word	0x200011e4
 8001178:	2000015c 	.word	0x2000015c

0800117c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800117c:	b580      	push	{r7, lr}
 800117e:	b094      	sub	sp, #80	@ 0x50
 8001180:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001182:	f107 0320 	add.w	r3, r7, #32
 8001186:	2230      	movs	r2, #48	@ 0x30
 8001188:	2100      	movs	r1, #0
 800118a:	4618      	mov	r0, r3
 800118c:	f004 f8dc 	bl	8005348 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001190:	f107 030c 	add.w	r3, r7, #12
 8001194:	2200      	movs	r2, #0
 8001196:	601a      	str	r2, [r3, #0]
 8001198:	605a      	str	r2, [r3, #4]
 800119a:	609a      	str	r2, [r3, #8]
 800119c:	60da      	str	r2, [r3, #12]
 800119e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80011a0:	2300      	movs	r3, #0
 80011a2:	60bb      	str	r3, [r7, #8]
 80011a4:	4b28      	ldr	r3, [pc, #160]	@ (8001248 <SystemClock_Config+0xcc>)
 80011a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011a8:	4a27      	ldr	r2, [pc, #156]	@ (8001248 <SystemClock_Config+0xcc>)
 80011aa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011ae:	6413      	str	r3, [r2, #64]	@ 0x40
 80011b0:	4b25      	ldr	r3, [pc, #148]	@ (8001248 <SystemClock_Config+0xcc>)
 80011b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011b4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011b8:	60bb      	str	r3, [r7, #8]
 80011ba:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011bc:	2300      	movs	r3, #0
 80011be:	607b      	str	r3, [r7, #4]
 80011c0:	4b22      	ldr	r3, [pc, #136]	@ (800124c <SystemClock_Config+0xd0>)
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	4a21      	ldr	r2, [pc, #132]	@ (800124c <SystemClock_Config+0xd0>)
 80011c6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80011ca:	6013      	str	r3, [r2, #0]
 80011cc:	4b1f      	ldr	r3, [pc, #124]	@ (800124c <SystemClock_Config+0xd0>)
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80011d4:	607b      	str	r3, [r7, #4]
 80011d6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011d8:	2302      	movs	r3, #2
 80011da:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011dc:	2301      	movs	r3, #1
 80011de:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011e0:	2310      	movs	r3, #16
 80011e2:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011e4:	2302      	movs	r3, #2
 80011e6:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80011e8:	2300      	movs	r3, #0
 80011ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 80011ec:	2308      	movs	r3, #8
 80011ee:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 80;
 80011f0:	2350      	movs	r3, #80	@ 0x50
 80011f2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80011f4:	2302      	movs	r3, #2
 80011f6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80011f8:	2304      	movs	r3, #4
 80011fa:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011fc:	f107 0320 	add.w	r3, r7, #32
 8001200:	4618      	mov	r0, r3
 8001202:	f002 fb5f 	bl	80038c4 <HAL_RCC_OscConfig>
 8001206:	4603      	mov	r3, r0
 8001208:	2b00      	cmp	r3, #0
 800120a:	d001      	beq.n	8001210 <SystemClock_Config+0x94>
  {
    Error_Handler();
 800120c:	f000 fadc 	bl	80017c8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001210:	230f      	movs	r3, #15
 8001212:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001214:	2302      	movs	r3, #2
 8001216:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001218:	2300      	movs	r3, #0
 800121a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800121c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001220:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001222:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001226:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001228:	f107 030c 	add.w	r3, r7, #12
 800122c:	2102      	movs	r1, #2
 800122e:	4618      	mov	r0, r3
 8001230:	f002 fdc0 	bl	8003db4 <HAL_RCC_ClockConfig>
 8001234:	4603      	mov	r3, r0
 8001236:	2b00      	cmp	r3, #0
 8001238:	d001      	beq.n	800123e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 800123a:	f000 fac5 	bl	80017c8 <Error_Handler>
  }
}
 800123e:	bf00      	nop
 8001240:	3750      	adds	r7, #80	@ 0x50
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}
 8001246:	bf00      	nop
 8001248:	40023800 	.word	0x40023800
 800124c:	40007000 	.word	0x40007000

08001250 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	b084      	sub	sp, #16
 8001254:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001256:	463b      	mov	r3, r7
 8001258:	2200      	movs	r2, #0
 800125a:	601a      	str	r2, [r3, #0]
 800125c:	605a      	str	r2, [r3, #4]
 800125e:	609a      	str	r2, [r3, #8]
 8001260:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001262:	4b21      	ldr	r3, [pc, #132]	@ (80012e8 <MX_ADC1_Init+0x98>)
 8001264:	4a21      	ldr	r2, [pc, #132]	@ (80012ec <MX_ADC1_Init+0x9c>)
 8001266:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001268:	4b1f      	ldr	r3, [pc, #124]	@ (80012e8 <MX_ADC1_Init+0x98>)
 800126a:	2200      	movs	r2, #0
 800126c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800126e:	4b1e      	ldr	r3, [pc, #120]	@ (80012e8 <MX_ADC1_Init+0x98>)
 8001270:	2200      	movs	r2, #0
 8001272:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001274:	4b1c      	ldr	r3, [pc, #112]	@ (80012e8 <MX_ADC1_Init+0x98>)
 8001276:	2200      	movs	r2, #0
 8001278:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800127a:	4b1b      	ldr	r3, [pc, #108]	@ (80012e8 <MX_ADC1_Init+0x98>)
 800127c:	2200      	movs	r2, #0
 800127e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001280:	4b19      	ldr	r3, [pc, #100]	@ (80012e8 <MX_ADC1_Init+0x98>)
 8001282:	2200      	movs	r2, #0
 8001284:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001288:	4b17      	ldr	r3, [pc, #92]	@ (80012e8 <MX_ADC1_Init+0x98>)
 800128a:	2200      	movs	r2, #0
 800128c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800128e:	4b16      	ldr	r3, [pc, #88]	@ (80012e8 <MX_ADC1_Init+0x98>)
 8001290:	4a17      	ldr	r2, [pc, #92]	@ (80012f0 <MX_ADC1_Init+0xa0>)
 8001292:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001294:	4b14      	ldr	r3, [pc, #80]	@ (80012e8 <MX_ADC1_Init+0x98>)
 8001296:	2200      	movs	r2, #0
 8001298:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800129a:	4b13      	ldr	r3, [pc, #76]	@ (80012e8 <MX_ADC1_Init+0x98>)
 800129c:	2201      	movs	r2, #1
 800129e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80012a0:	4b11      	ldr	r3, [pc, #68]	@ (80012e8 <MX_ADC1_Init+0x98>)
 80012a2:	2200      	movs	r2, #0
 80012a4:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80012a8:	4b0f      	ldr	r3, [pc, #60]	@ (80012e8 <MX_ADC1_Init+0x98>)
 80012aa:	2201      	movs	r2, #1
 80012ac:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80012ae:	480e      	ldr	r0, [pc, #56]	@ (80012e8 <MX_ADC1_Init+0x98>)
 80012b0:	f000 fd68 	bl	8001d84 <HAL_ADC_Init>
 80012b4:	4603      	mov	r3, r0
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d001      	beq.n	80012be <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 80012ba:	f000 fa85 	bl	80017c8 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_2;
 80012be:	2302      	movs	r3, #2
 80012c0:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80012c2:	2301      	movs	r3, #1
 80012c4:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80012c6:	2300      	movs	r3, #0
 80012c8:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80012ca:	463b      	mov	r3, r7
 80012cc:	4619      	mov	r1, r3
 80012ce:	4806      	ldr	r0, [pc, #24]	@ (80012e8 <MX_ADC1_Init+0x98>)
 80012d0:	f000 ff06 	bl	80020e0 <HAL_ADC_ConfigChannel>
 80012d4:	4603      	mov	r3, r0
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d001      	beq.n	80012de <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 80012da:	f000 fa75 	bl	80017c8 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80012de:	bf00      	nop
 80012e0:	3710      	adds	r7, #16
 80012e2:	46bd      	mov	sp, r7
 80012e4:	bd80      	pop	{r7, pc}
 80012e6:	bf00      	nop
 80012e8:	20000080 	.word	0x20000080
 80012ec:	40012000 	.word	0x40012000
 80012f0:	0f000001 	.word	0x0f000001

080012f4 <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 80012f4:	b580      	push	{r7, lr}
 80012f6:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 80012f8:	4b18      	ldr	r3, [pc, #96]	@ (800135c <MX_CAN1_Init+0x68>)
 80012fa:	4a19      	ldr	r2, [pc, #100]	@ (8001360 <MX_CAN1_Init+0x6c>)
 80012fc:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 5;
 80012fe:	4b17      	ldr	r3, [pc, #92]	@ (800135c <MX_CAN1_Init+0x68>)
 8001300:	2205      	movs	r2, #5
 8001302:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8001304:	4b15      	ldr	r3, [pc, #84]	@ (800135c <MX_CAN1_Init+0x68>)
 8001306:	2200      	movs	r2, #0
 8001308:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 800130a:	4b14      	ldr	r3, [pc, #80]	@ (800135c <MX_CAN1_Init+0x68>)
 800130c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001310:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 8001312:	4b12      	ldr	r3, [pc, #72]	@ (800135c <MX_CAN1_Init+0x68>)
 8001314:	f44f 2220 	mov.w	r2, #655360	@ 0xa0000
 8001318:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 800131a:	4b10      	ldr	r3, [pc, #64]	@ (800135c <MX_CAN1_Init+0x68>)
 800131c:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8001320:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8001322:	4b0e      	ldr	r3, [pc, #56]	@ (800135c <MX_CAN1_Init+0x68>)
 8001324:	2200      	movs	r2, #0
 8001326:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8001328:	4b0c      	ldr	r3, [pc, #48]	@ (800135c <MX_CAN1_Init+0x68>)
 800132a:	2200      	movs	r2, #0
 800132c:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 800132e:	4b0b      	ldr	r3, [pc, #44]	@ (800135c <MX_CAN1_Init+0x68>)
 8001330:	2200      	movs	r2, #0
 8001332:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8001334:	4b09      	ldr	r3, [pc, #36]	@ (800135c <MX_CAN1_Init+0x68>)
 8001336:	2200      	movs	r2, #0
 8001338:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 800133a:	4b08      	ldr	r3, [pc, #32]	@ (800135c <MX_CAN1_Init+0x68>)
 800133c:	2200      	movs	r2, #0
 800133e:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8001340:	4b06      	ldr	r3, [pc, #24]	@ (800135c <MX_CAN1_Init+0x68>)
 8001342:	2200      	movs	r2, #0
 8001344:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8001346:	4805      	ldr	r0, [pc, #20]	@ (800135c <MX_CAN1_Init+0x68>)
 8001348:	f001 f8e8 	bl	800251c <HAL_CAN_Init>
 800134c:	4603      	mov	r3, r0
 800134e:	2b00      	cmp	r3, #0
 8001350:	d001      	beq.n	8001356 <MX_CAN1_Init+0x62>
  {
    Error_Handler();
 8001352:	f000 fa39 	bl	80017c8 <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 8001356:	bf00      	nop
 8001358:	bd80      	pop	{r7, pc}
 800135a:	bf00      	nop
 800135c:	200000c8 	.word	0x200000c8
 8001360:	40006400 	.word	0x40006400

08001364 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 8001364:	b580      	push	{r7, lr}
 8001366:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 8001368:	4b18      	ldr	r3, [pc, #96]	@ (80013cc <MX_CAN2_Init+0x68>)
 800136a:	4a19      	ldr	r2, [pc, #100]	@ (80013d0 <MX_CAN2_Init+0x6c>)
 800136c:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 5;
 800136e:	4b17      	ldr	r3, [pc, #92]	@ (80013cc <MX_CAN2_Init+0x68>)
 8001370:	2205      	movs	r2, #5
 8001372:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 8001374:	4b15      	ldr	r3, [pc, #84]	@ (80013cc <MX_CAN2_Init+0x68>)
 8001376:	2200      	movs	r2, #0
 8001378:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 800137a:	4b14      	ldr	r3, [pc, #80]	@ (80013cc <MX_CAN2_Init+0x68>)
 800137c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001380:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 8001382:	4b12      	ldr	r3, [pc, #72]	@ (80013cc <MX_CAN2_Init+0x68>)
 8001384:	f44f 2220 	mov.w	r2, #655360	@ 0xa0000
 8001388:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 800138a:	4b10      	ldr	r3, [pc, #64]	@ (80013cc <MX_CAN2_Init+0x68>)
 800138c:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8001390:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8001392:	4b0e      	ldr	r3, [pc, #56]	@ (80013cc <MX_CAN2_Init+0x68>)
 8001394:	2200      	movs	r2, #0
 8001396:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 8001398:	4b0c      	ldr	r3, [pc, #48]	@ (80013cc <MX_CAN2_Init+0x68>)
 800139a:	2200      	movs	r2, #0
 800139c:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 800139e:	4b0b      	ldr	r3, [pc, #44]	@ (80013cc <MX_CAN2_Init+0x68>)
 80013a0:	2200      	movs	r2, #0
 80013a2:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 80013a4:	4b09      	ldr	r3, [pc, #36]	@ (80013cc <MX_CAN2_Init+0x68>)
 80013a6:	2200      	movs	r2, #0
 80013a8:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 80013aa:	4b08      	ldr	r3, [pc, #32]	@ (80013cc <MX_CAN2_Init+0x68>)
 80013ac:	2200      	movs	r2, #0
 80013ae:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 80013b0:	4b06      	ldr	r3, [pc, #24]	@ (80013cc <MX_CAN2_Init+0x68>)
 80013b2:	2200      	movs	r2, #0
 80013b4:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 80013b6:	4805      	ldr	r0, [pc, #20]	@ (80013cc <MX_CAN2_Init+0x68>)
 80013b8:	f001 f8b0 	bl	800251c <HAL_CAN_Init>
 80013bc:	4603      	mov	r3, r0
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d001      	beq.n	80013c6 <MX_CAN2_Init+0x62>
  {
    Error_Handler();
 80013c2:	f000 fa01 	bl	80017c8 <Error_Handler>
	//Cần config các setting của filter ở đây


  /* USER CODE END CAN2_Init 2 */

}
 80013c6:	bf00      	nop
 80013c8:	bd80      	pop	{r7, pc}
 80013ca:	bf00      	nop
 80013cc:	200000f0 	.word	0x200000f0
 80013d0:	40006800 	.word	0x40006800

080013d4 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80013d4:	b580      	push	{r7, lr}
 80013d6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80013d8:	4b11      	ldr	r3, [pc, #68]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013da:	4a12      	ldr	r2, [pc, #72]	@ (8001424 <MX_USART3_UART_Init+0x50>)
 80013dc:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80013de:	4b10      	ldr	r3, [pc, #64]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013e0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80013e4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80013e6:	4b0e      	ldr	r3, [pc, #56]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013e8:	2200      	movs	r2, #0
 80013ea:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80013ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80013f2:	4b0b      	ldr	r3, [pc, #44]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013f4:	2200      	movs	r2, #0
 80013f6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80013f8:	4b09      	ldr	r3, [pc, #36]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 80013fa:	220c      	movs	r2, #12
 80013fc:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013fe:	4b08      	ldr	r3, [pc, #32]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 8001400:	2200      	movs	r2, #0
 8001402:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001404:	4b06      	ldr	r3, [pc, #24]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 8001406:	2200      	movs	r2, #0
 8001408:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800140a:	4805      	ldr	r0, [pc, #20]	@ (8001420 <MX_USART3_UART_Init+0x4c>)
 800140c:	f002 fef2 	bl	80041f4 <HAL_UART_Init>
 8001410:	4603      	mov	r3, r0
 8001412:	2b00      	cmp	r3, #0
 8001414:	d001      	beq.n	800141a <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8001416:	f000 f9d7 	bl	80017c8 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800141a:	bf00      	nop
 800141c:	bd80      	pop	{r7, pc}
 800141e:	bf00      	nop
 8001420:	20000118 	.word	0x20000118
 8001424:	40004800 	.word	0x40004800

08001428 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001428:	b580      	push	{r7, lr}
 800142a:	b08a      	sub	sp, #40	@ 0x28
 800142c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800142e:	f107 0314 	add.w	r3, r7, #20
 8001432:	2200      	movs	r2, #0
 8001434:	601a      	str	r2, [r3, #0]
 8001436:	605a      	str	r2, [r3, #4]
 8001438:	609a      	str	r2, [r3, #8]
 800143a:	60da      	str	r2, [r3, #12]
 800143c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800143e:	2300      	movs	r3, #0
 8001440:	613b      	str	r3, [r7, #16]
 8001442:	4b42      	ldr	r3, [pc, #264]	@ (800154c <MX_GPIO_Init+0x124>)
 8001444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001446:	4a41      	ldr	r2, [pc, #260]	@ (800154c <MX_GPIO_Init+0x124>)
 8001448:	f043 0304 	orr.w	r3, r3, #4
 800144c:	6313      	str	r3, [r2, #48]	@ 0x30
 800144e:	4b3f      	ldr	r3, [pc, #252]	@ (800154c <MX_GPIO_Init+0x124>)
 8001450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001452:	f003 0304 	and.w	r3, r3, #4
 8001456:	613b      	str	r3, [r7, #16]
 8001458:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800145a:	2300      	movs	r3, #0
 800145c:	60fb      	str	r3, [r7, #12]
 800145e:	4b3b      	ldr	r3, [pc, #236]	@ (800154c <MX_GPIO_Init+0x124>)
 8001460:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001462:	4a3a      	ldr	r2, [pc, #232]	@ (800154c <MX_GPIO_Init+0x124>)
 8001464:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001468:	6313      	str	r3, [r2, #48]	@ 0x30
 800146a:	4b38      	ldr	r3, [pc, #224]	@ (800154c <MX_GPIO_Init+0x124>)
 800146c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800146e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001472:	60fb      	str	r3, [r7, #12]
 8001474:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001476:	2300      	movs	r3, #0
 8001478:	60bb      	str	r3, [r7, #8]
 800147a:	4b34      	ldr	r3, [pc, #208]	@ (800154c <MX_GPIO_Init+0x124>)
 800147c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800147e:	4a33      	ldr	r2, [pc, #204]	@ (800154c <MX_GPIO_Init+0x124>)
 8001480:	f043 0301 	orr.w	r3, r3, #1
 8001484:	6313      	str	r3, [r2, #48]	@ 0x30
 8001486:	4b31      	ldr	r3, [pc, #196]	@ (800154c <MX_GPIO_Init+0x124>)
 8001488:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800148a:	f003 0301 	and.w	r3, r3, #1
 800148e:	60bb      	str	r3, [r7, #8]
 8001490:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001492:	2300      	movs	r3, #0
 8001494:	607b      	str	r3, [r7, #4]
 8001496:	4b2d      	ldr	r3, [pc, #180]	@ (800154c <MX_GPIO_Init+0x124>)
 8001498:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800149a:	4a2c      	ldr	r2, [pc, #176]	@ (800154c <MX_GPIO_Init+0x124>)
 800149c:	f043 0302 	orr.w	r3, r3, #2
 80014a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80014a2:	4b2a      	ldr	r3, [pc, #168]	@ (800154c <MX_GPIO_Init+0x124>)
 80014a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014a6:	f003 0302 	and.w	r3, r3, #2
 80014aa:	607b      	str	r3, [r7, #4]
 80014ac:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 80014ae:	2200      	movs	r2, #0
 80014b0:	2101      	movs	r1, #1
 80014b2:	4827      	ldr	r0, [pc, #156]	@ (8001550 <MX_GPIO_Init+0x128>)
 80014b4:	f002 f9d4 	bl	8003860 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC13 PC4 PC5 PC6
                           PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 80014b8:	f242 03f0 	movw	r3, #8432	@ 0x20f0
 80014bc:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_7;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80014be:	2300      	movs	r3, #0
 80014c0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014c2:	2301      	movs	r3, #1
 80014c4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014c6:	f107 0314 	add.w	r3, r7, #20
 80014ca:	4619      	mov	r1, r3
 80014cc:	4821      	ldr	r0, [pc, #132]	@ (8001554 <MX_GPIO_Init+0x12c>)
 80014ce:	f002 f82b 	bl	8003528 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80014d2:	2301      	movs	r3, #1
 80014d4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80014d6:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80014da:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014dc:	2301      	movs	r3, #1
 80014de:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014e0:	f107 0314 	add.w	r3, r7, #20
 80014e4:	4619      	mov	r1, r3
 80014e6:	481c      	ldr	r0, [pc, #112]	@ (8001558 <MX_GPIO_Init+0x130>)
 80014e8:	f002 f81e 	bl	8003528 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA1 */
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 80014ec:	2302      	movs	r3, #2
 80014ee:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014f0:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80014f4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014f6:	2301      	movs	r3, #1
 80014f8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014fa:	f107 0314 	add.w	r3, r7, #20
 80014fe:	4619      	mov	r1, r3
 8001500:	4815      	ldr	r0, [pc, #84]	@ (8001558 <MX_GPIO_Init+0x130>)
 8001502:	f002 f811 	bl	8003528 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001506:	2301      	movs	r3, #1
 8001508:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800150a:	2301      	movs	r3, #1
 800150c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800150e:	2300      	movs	r3, #0
 8001510:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001512:	2300      	movs	r3, #0
 8001514:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001516:	f107 0314 	add.w	r3, r7, #20
 800151a:	4619      	mov	r1, r3
 800151c:	480c      	ldr	r0, [pc, #48]	@ (8001550 <MX_GPIO_Init+0x128>)
 800151e:	f002 f803 	bl	8003528 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 8001522:	2200      	movs	r2, #0
 8001524:	2101      	movs	r1, #1
 8001526:	2006      	movs	r0, #6
 8001528:	f001 ff35 	bl	8003396 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 800152c:	2006      	movs	r0, #6
 800152e:	f001 ff4e 	bl	80033ce <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 8001532:	2200      	movs	r2, #0
 8001534:	2100      	movs	r1, #0
 8001536:	2007      	movs	r0, #7
 8001538:	f001 ff2d 	bl	8003396 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 800153c:	2007      	movs	r0, #7
 800153e:	f001 ff46 	bl	80033ce <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001542:	bf00      	nop
 8001544:	3728      	adds	r7, #40	@ 0x28
 8001546:	46bd      	mov	sp, r7
 8001548:	bd80      	pop	{r7, pc}
 800154a:	bf00      	nop
 800154c:	40023800 	.word	0x40023800
 8001550:	40020400 	.word	0x40020400
 8001554:	40020800 	.word	0x40020800
 8001558:	40020000 	.word	0x40020000

0800155c <MX_CAN1_Setup>:

/* USER CODE BEGIN 4 */

void MX_CAN1_Setup()
{
 800155c:	b580      	push	{r7, lr}
 800155e:	af00      	add	r7, sp, #0
  	CAN1_sFilterConfig.SlaveStartFilterBank = 14;
 8001560:	4b1f      	ldr	r3, [pc, #124]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001562:	220e      	movs	r2, #14
 8001564:	625a      	str	r2, [r3, #36]	@ 0x24
	CAN1_sFilterConfig.FilterBank = 0;
 8001566:	4b1e      	ldr	r3, [pc, #120]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001568:	2200      	movs	r2, #0
 800156a:	615a      	str	r2, [r3, #20]
	CAN1_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 800156c:	4b1c      	ldr	r3, [pc, #112]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 800156e:	2200      	movs	r2, #0
 8001570:	619a      	str	r2, [r3, #24]
	CAN1_sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 8001572:	4b1b      	ldr	r3, [pc, #108]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001574:	2201      	movs	r2, #1
 8001576:	61da      	str	r2, [r3, #28]
	CAN1_sFilterConfig.FilterIdHigh = Tester_ID << 5;
 8001578:	4b1a      	ldr	r3, [pc, #104]	@ (80015e4 <MX_CAN1_Setup+0x88>)
 800157a:	881b      	ldrh	r3, [r3, #0]
 800157c:	015b      	lsls	r3, r3, #5
 800157e:	4a18      	ldr	r2, [pc, #96]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001580:	6013      	str	r3, [r2, #0]
	CAN1_sFilterConfig.FilterIdLow = 0x0000;
 8001582:	4b17      	ldr	r3, [pc, #92]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001584:	2200      	movs	r2, #0
 8001586:	605a      	str	r2, [r3, #4]
	CAN1_sFilterConfig.FilterMaskIdHigh = 0x7FF << 5;
 8001588:	4b15      	ldr	r3, [pc, #84]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 800158a:	f64f 72e0 	movw	r2, #65504	@ 0xffe0
 800158e:	609a      	str	r2, [r3, #8]
	CAN1_sFilterConfig.FilterMaskIdLow = 0x0000;
 8001590:	4b13      	ldr	r3, [pc, #76]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001592:	2200      	movs	r2, #0
 8001594:	60da      	str	r2, [r3, #12]
	CAN1_sFilterConfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 8001596:	4b12      	ldr	r3, [pc, #72]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 8001598:	2200      	movs	r2, #0
 800159a:	611a      	str	r2, [r3, #16]
	CAN1_sFilterConfig.FilterActivation = ENABLE;
 800159c:	4b10      	ldr	r3, [pc, #64]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 800159e:	2201      	movs	r2, #1
 80015a0:	621a      	str	r2, [r3, #32]

	HAL_CAN_ConfigFilter(&hcan1, &CAN1_sFilterConfig);
 80015a2:	490f      	ldr	r1, [pc, #60]	@ (80015e0 <MX_CAN1_Setup+0x84>)
 80015a4:	4810      	ldr	r0, [pc, #64]	@ (80015e8 <MX_CAN1_Setup+0x8c>)
 80015a6:	f001 f8b5 	bl	8002714 <HAL_CAN_ConfigFilter>
	HAL_CAN_Start(&hcan1);
 80015aa:	480f      	ldr	r0, [pc, #60]	@ (80015e8 <MX_CAN1_Setup+0x8c>)
 80015ac:	f001 f992 	bl	80028d4 <HAL_CAN_Start>
	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 80015b0:	2102      	movs	r1, #2
 80015b2:	480d      	ldr	r0, [pc, #52]	@ (80015e8 <MX_CAN1_Setup+0x8c>)
 80015b4:	f001 fbbf 	bl	8002d36 <HAL_CAN_ActivateNotification>

	//Cần config header của CAN1
    CAN1_pHeader.StdId = ECU_ID;                   // Set TX message ID
 80015b8:	4b0c      	ldr	r3, [pc, #48]	@ (80015ec <MX_CAN1_Setup+0x90>)
 80015ba:	881b      	ldrh	r3, [r3, #0]
 80015bc:	461a      	mov	r2, r3
 80015be:	4b0c      	ldr	r3, [pc, #48]	@ (80015f0 <MX_CAN1_Setup+0x94>)
 80015c0:	601a      	str	r2, [r3, #0]
    CAN1_pHeader.IDE = CAN_ID_STD;                // Use standard ID
 80015c2:	4b0b      	ldr	r3, [pc, #44]	@ (80015f0 <MX_CAN1_Setup+0x94>)
 80015c4:	2200      	movs	r2, #0
 80015c6:	609a      	str	r2, [r3, #8]
    CAN1_pHeader.RTR = CAN_RTR_DATA;              // Sending data, not a request
 80015c8:	4b09      	ldr	r3, [pc, #36]	@ (80015f0 <MX_CAN1_Setup+0x94>)
 80015ca:	2200      	movs	r2, #0
 80015cc:	60da      	str	r2, [r3, #12]
    CAN1_pHeader.DLC = 8;                         // 8 bytes of data
 80015ce:	4b08      	ldr	r3, [pc, #32]	@ (80015f0 <MX_CAN1_Setup+0x94>)
 80015d0:	2208      	movs	r2, #8
 80015d2:	611a      	str	r2, [r3, #16]
    CAN1_pHeader.TransmitGlobalTime = DISABLE;    // No timestamping
 80015d4:	4b06      	ldr	r3, [pc, #24]	@ (80015f0 <MX_CAN1_Setup+0x94>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	751a      	strb	r2, [r3, #20]
}
 80015da:	bf00      	nop
 80015dc:	bd80      	pop	{r7, pc}
 80015de:	bf00      	nop
 80015e0:	20000174 	.word	0x20000174
 80015e4:	20000002 	.word	0x20000002
 80015e8:	200000c8 	.word	0x200000c8
 80015ec:	20000000 	.word	0x20000000
 80015f0:	2000015c 	.word	0x2000015c

080015f4 <MX_CAN2_Setup>:
void MX_CAN2_Setup()
{
 80015f4:	b580      	push	{r7, lr}
 80015f6:	af00      	add	r7, sp, #0
	CAN2_sFilterConfig.FilterBank = 14;
 80015f8:	4b1d      	ldr	r3, [pc, #116]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 80015fa:	220e      	movs	r2, #14
 80015fc:	615a      	str	r2, [r3, #20]
	CAN2_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 80015fe:	4b1c      	ldr	r3, [pc, #112]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001600:	2200      	movs	r2, #0
 8001602:	619a      	str	r2, [r3, #24]
	CAN2_sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 8001604:	4b1a      	ldr	r3, [pc, #104]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001606:	2201      	movs	r2, #1
 8001608:	61da      	str	r2, [r3, #28]
	CAN2_sFilterConfig.FilterIdHigh = ECU_ID << 5;
 800160a:	4b1a      	ldr	r3, [pc, #104]	@ (8001674 <MX_CAN2_Setup+0x80>)
 800160c:	881b      	ldrh	r3, [r3, #0]
 800160e:	015b      	lsls	r3, r3, #5
 8001610:	4a17      	ldr	r2, [pc, #92]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001612:	6013      	str	r3, [r2, #0]
	CAN2_sFilterConfig.FilterIdLow = 0x0000;
 8001614:	4b16      	ldr	r3, [pc, #88]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001616:	2200      	movs	r2, #0
 8001618:	605a      	str	r2, [r3, #4]
	CAN2_sFilterConfig.FilterMaskIdHigh = 0x7FF << 5;
 800161a:	4b15      	ldr	r3, [pc, #84]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 800161c:	f64f 72e0 	movw	r2, #65504	@ 0xffe0
 8001620:	609a      	str	r2, [r3, #8]
	CAN2_sFilterConfig.FilterMaskIdLow = 0x0000;
 8001622:	4b13      	ldr	r3, [pc, #76]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001624:	2200      	movs	r2, #0
 8001626:	60da      	str	r2, [r3, #12]
	CAN2_sFilterConfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 8001628:	4b11      	ldr	r3, [pc, #68]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 800162a:	2200      	movs	r2, #0
 800162c:	611a      	str	r2, [r3, #16]
	CAN2_sFilterConfig.FilterActivation = ENABLE;
 800162e:	4b10      	ldr	r3, [pc, #64]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001630:	2201      	movs	r2, #1
 8001632:	621a      	str	r2, [r3, #32]

	HAL_CAN_ConfigFilter(&hcan2, &CAN2_sFilterConfig);
 8001634:	490e      	ldr	r1, [pc, #56]	@ (8001670 <MX_CAN2_Setup+0x7c>)
 8001636:	4810      	ldr	r0, [pc, #64]	@ (8001678 <MX_CAN2_Setup+0x84>)
 8001638:	f001 f86c 	bl	8002714 <HAL_CAN_ConfigFilter>
	HAL_CAN_Start(&hcan2);
 800163c:	480e      	ldr	r0, [pc, #56]	@ (8001678 <MX_CAN2_Setup+0x84>)
 800163e:	f001 f949 	bl	80028d4 <HAL_CAN_Start>
	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 8001642:	2102      	movs	r1, #2
 8001644:	480c      	ldr	r0, [pc, #48]	@ (8001678 <MX_CAN2_Setup+0x84>)
 8001646:	f001 fb76 	bl	8002d36 <HAL_CAN_ActivateNotification>

	//Cần config header của CAN2
    CAN2_pHeader.StdId = Tester_ID;                // Set TX message ID
 800164a:	4b0c      	ldr	r3, [pc, #48]	@ (800167c <MX_CAN2_Setup+0x88>)
 800164c:	881b      	ldrh	r3, [r3, #0]
 800164e:	461a      	mov	r2, r3
 8001650:	4b0b      	ldr	r3, [pc, #44]	@ (8001680 <MX_CAN2_Setup+0x8c>)
 8001652:	601a      	str	r2, [r3, #0]
    CAN2_pHeader.IDE = CAN_ID_STD;                // Use standard ID
 8001654:	4b0a      	ldr	r3, [pc, #40]	@ (8001680 <MX_CAN2_Setup+0x8c>)
 8001656:	2200      	movs	r2, #0
 8001658:	609a      	str	r2, [r3, #8]
    CAN2_pHeader.RTR = CAN_RTR_DATA;              // Sending data, not a request
 800165a:	4b09      	ldr	r3, [pc, #36]	@ (8001680 <MX_CAN2_Setup+0x8c>)
 800165c:	2200      	movs	r2, #0
 800165e:	60da      	str	r2, [r3, #12]
    CAN2_pHeader.DLC = 8;                         // 8 bytes of data
 8001660:	4b07      	ldr	r3, [pc, #28]	@ (8001680 <MX_CAN2_Setup+0x8c>)
 8001662:	2208      	movs	r2, #8
 8001664:	611a      	str	r2, [r3, #16]
    CAN2_pHeader.TransmitGlobalTime = DISABLE;    // No timestamping
 8001666:	4b06      	ldr	r3, [pc, #24]	@ (8001680 <MX_CAN2_Setup+0x8c>)
 8001668:	2200      	movs	r2, #0
 800166a:	751a      	strb	r2, [r3, #20]
}
 800166c:	bf00      	nop
 800166e:	bd80      	pop	{r7, pc}
 8001670:	200001b4 	.word	0x200001b4
 8001674:	20000000 	.word	0x20000000
 8001678:	200000f0 	.word	0x200000f0
 800167c:	20000002 	.word	0x20000002
 8001680:	2000019c 	.word	0x2000019c

08001684 <USART3_SendString>:

void USART3_SendString(uint8_t *ch)
{
 8001684:	b580      	push	{r7, lr}
 8001686:	b082      	sub	sp, #8
 8001688:	af00      	add	r7, sp, #0
 800168a:	6078      	str	r0, [r7, #4]
   while(*ch!=0)
 800168c:	e009      	b.n	80016a2 <USART3_SendString+0x1e>
   {
      HAL_UART_Transmit(&huart3, ch, 1,HAL_MAX_DELAY);
 800168e:	f04f 33ff 	mov.w	r3, #4294967295
 8001692:	2201      	movs	r2, #1
 8001694:	6879      	ldr	r1, [r7, #4]
 8001696:	4807      	ldr	r0, [pc, #28]	@ (80016b4 <USART3_SendString+0x30>)
 8001698:	f002 fdf9 	bl	800428e <HAL_UART_Transmit>
      ch++;
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	3301      	adds	r3, #1
 80016a0:	607b      	str	r3, [r7, #4]
   while(*ch!=0)
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	781b      	ldrb	r3, [r3, #0]
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d1f1      	bne.n	800168e <USART3_SendString+0xa>
   }
}
 80016aa:	bf00      	nop
 80016ac:	bf00      	nop
 80016ae:	3708      	adds	r7, #8
 80016b0:	46bd      	mov	sp, r7
 80016b2:	bd80      	pop	{r7, pc}
 80016b4:	20000118 	.word	0x20000118

080016b8 <PrintCANLog>:
void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame)
{
 80016b8:	b580      	push	{r7, lr}
 80016ba:	b094      	sub	sp, #80	@ 0x50
 80016bc:	af00      	add	r7, sp, #0
 80016be:	4603      	mov	r3, r0
 80016c0:	6039      	str	r1, [r7, #0]
 80016c2:	80fb      	strh	r3, [r7, #6]
    char bufsend[64];  // Safe enough size
    uint16_t i = 0;
 80016c4:	2300      	movs	r3, #0
 80016c6:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e

    // Format timestamp
    int len = sprintf(bufsend, "%d ", TimeStamp);
 80016ca:	4b2a      	ldr	r3, [pc, #168]	@ (8001774 <PrintCANLog+0xbc>)
 80016cc:	681a      	ldr	r2, [r3, #0]
 80016ce:	f107 0308 	add.w	r3, r7, #8
 80016d2:	4929      	ldr	r1, [pc, #164]	@ (8001778 <PrintCANLog+0xc0>)
 80016d4:	4618      	mov	r0, r3
 80016d6:	f003 fe05 	bl	80052e4 <siprintf>
 80016da:	64b8      	str	r0, [r7, #72]	@ 0x48

    // Format CAN ID (always 3 digits, uppercase hex)
    len += sprintf(bufsend + len, "%03X: ", CANID & 0x7FF);  // mask to 11 bits
 80016dc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80016de:	f107 0208 	add.w	r2, r7, #8
 80016e2:	18d0      	adds	r0, r2, r3
 80016e4:	88fb      	ldrh	r3, [r7, #6]
 80016e6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80016ea:	461a      	mov	r2, r3
 80016ec:	4923      	ldr	r1, [pc, #140]	@ (800177c <PrintCANLog+0xc4>)
 80016ee:	f003 fdf9 	bl	80052e4 <siprintf>
 80016f2:	4602      	mov	r2, r0
 80016f4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80016f6:	4413      	add	r3, r2
 80016f8:	64bb      	str	r3, [r7, #72]	@ 0x48

    // Format 8 bytes of CAN data
    for (i = 0; i < 8; i++) {
 80016fa:	2300      	movs	r3, #0
 80016fc:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 8001700:	e015      	b.n	800172e <PrintCANLog+0x76>
        len += sprintf(bufsend + len, "%02X ", CAN_Frame[i]);
 8001702:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001704:	f107 0208 	add.w	r2, r7, #8
 8001708:	18d0      	adds	r0, r2, r3
 800170a:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 800170e:	683a      	ldr	r2, [r7, #0]
 8001710:	4413      	add	r3, r2
 8001712:	781b      	ldrb	r3, [r3, #0]
 8001714:	461a      	mov	r2, r3
 8001716:	491a      	ldr	r1, [pc, #104]	@ (8001780 <PrintCANLog+0xc8>)
 8001718:	f003 fde4 	bl	80052e4 <siprintf>
 800171c:	4602      	mov	r2, r0
 800171e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001720:	4413      	add	r3, r2
 8001722:	64bb      	str	r3, [r7, #72]	@ 0x48
    for (i = 0; i < 8; i++) {
 8001724:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 8001728:	3301      	adds	r3, #1
 800172a:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 800172e:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 8001732:	2b07      	cmp	r3, #7
 8001734:	d9e5      	bls.n	8001702 <PrintCANLog+0x4a>
    }

    // End with CRLF
    bufsend[len++] = '\r';
 8001736:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001738:	1c5a      	adds	r2, r3, #1
 800173a:	64ba      	str	r2, [r7, #72]	@ 0x48
 800173c:	3350      	adds	r3, #80	@ 0x50
 800173e:	443b      	add	r3, r7
 8001740:	220d      	movs	r2, #13
 8001742:	f803 2c48 	strb.w	r2, [r3, #-72]
    bufsend[len++] = '\n';
 8001746:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001748:	1c5a      	adds	r2, r3, #1
 800174a:	64ba      	str	r2, [r7, #72]	@ 0x48
 800174c:	3350      	adds	r3, #80	@ 0x50
 800174e:	443b      	add	r3, r7
 8001750:	220a      	movs	r2, #10
 8001752:	f803 2c48 	strb.w	r2, [r3, #-72]
    bufsend[len] = '\0';
 8001756:	f107 0208 	add.w	r2, r7, #8
 800175a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800175c:	4413      	add	r3, r2
 800175e:	2200      	movs	r2, #0
 8001760:	701a      	strb	r2, [r3, #0]

    // Send over UART
    USART3_SendString((uint8_t *)bufsend);
 8001762:	f107 0308 	add.w	r3, r7, #8
 8001766:	4618      	mov	r0, r3
 8001768:	f7ff ff8c 	bl	8001684 <USART3_SendString>
}
 800176c:	bf00      	nop
 800176e:	3750      	adds	r7, #80	@ 0x50
 8001770:	46bd      	mov	sp, r7
 8001772:	bd80      	pop	{r7, pc}
 8001774:	20001208 	.word	0x20001208
 8001778:	08005c70 	.word	0x08005c70
 800177c:	08005c74 	.word	0x08005c74
 8001780:	08005c7c 	.word	0x08005c7c

08001784 <HAL_UART_RxCpltCallback>:
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
	REQ_BUFFER[NumBytesReq] = REQ_1BYTE_DATA;
 800178c:	4b0a      	ldr	r3, [pc, #40]	@ (80017b8 <HAL_UART_RxCpltCallback+0x34>)
 800178e:	881b      	ldrh	r3, [r3, #0]
 8001790:	461a      	mov	r2, r3
 8001792:	4b0a      	ldr	r3, [pc, #40]	@ (80017bc <HAL_UART_RxCpltCallback+0x38>)
 8001794:	7819      	ldrb	r1, [r3, #0]
 8001796:	4b0a      	ldr	r3, [pc, #40]	@ (80017c0 <HAL_UART_RxCpltCallback+0x3c>)
 8001798:	5499      	strb	r1, [r3, r2]
	NumBytesReq++;
 800179a:	4b07      	ldr	r3, [pc, #28]	@ (80017b8 <HAL_UART_RxCpltCallback+0x34>)
 800179c:	881b      	ldrh	r3, [r3, #0]
 800179e:	3301      	adds	r3, #1
 80017a0:	b29a      	uxth	r2, r3
 80017a2:	4b05      	ldr	r3, [pc, #20]	@ (80017b8 <HAL_UART_RxCpltCallback+0x34>)
 80017a4:	801a      	strh	r2, [r3, #0]
	HAL_UART_Receive_IT(&huart3, &REQ_1BYTE_DATA, 1);
 80017a6:	2201      	movs	r2, #1
 80017a8:	4904      	ldr	r1, [pc, #16]	@ (80017bc <HAL_UART_RxCpltCallback+0x38>)
 80017aa:	4806      	ldr	r0, [pc, #24]	@ (80017c4 <HAL_UART_RxCpltCallback+0x40>)
 80017ac:	f002 fe01 	bl	80043b2 <HAL_UART_Receive_IT>

	//REQ_BUFFER[7] = NumBytesReq;
}
 80017b0:	bf00      	nop
 80017b2:	3708      	adds	r7, #8
 80017b4:	46bd      	mov	sp, r7
 80017b6:	bd80      	pop	{r7, pc}
 80017b8:	200001dc 	.word	0x200001dc
 80017bc:	200011e0 	.word	0x200011e0
 80017c0:	200001e0 	.word	0x200001e0
 80017c4:	20000118 	.word	0x20000118

080017c8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017c8:	b480      	push	{r7}
 80017ca:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80017cc:	b672      	cpsid	i
}
 80017ce:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80017d0:	bf00      	nop
 80017d2:	e7fd      	b.n	80017d0 <Error_Handler+0x8>

080017d4 <HAL_MspInit>:
 80017d4:	b480      	push	{r7}
 80017d6:	b083      	sub	sp, #12
 80017d8:	af00      	add	r7, sp, #0
 80017da:	2300      	movs	r3, #0
 80017dc:	607b      	str	r3, [r7, #4]
 80017de:	4b10      	ldr	r3, [pc, #64]	@ (8001820 <HAL_MspInit+0x4c>)
 80017e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017e2:	4a0f      	ldr	r2, [pc, #60]	@ (8001820 <HAL_MspInit+0x4c>)
 80017e4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80017e8:	6453      	str	r3, [r2, #68]	@ 0x44
 80017ea:	4b0d      	ldr	r3, [pc, #52]	@ (8001820 <HAL_MspInit+0x4c>)
 80017ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017ee:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80017f2:	607b      	str	r3, [r7, #4]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	2300      	movs	r3, #0
 80017f8:	603b      	str	r3, [r7, #0]
 80017fa:	4b09      	ldr	r3, [pc, #36]	@ (8001820 <HAL_MspInit+0x4c>)
 80017fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017fe:	4a08      	ldr	r2, [pc, #32]	@ (8001820 <HAL_MspInit+0x4c>)
 8001800:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001804:	6413      	str	r3, [r2, #64]	@ 0x40
 8001806:	4b06      	ldr	r3, [pc, #24]	@ (8001820 <HAL_MspInit+0x4c>)
 8001808:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800180a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800180e:	603b      	str	r3, [r7, #0]
 8001810:	683b      	ldr	r3, [r7, #0]
 8001812:	bf00      	nop
 8001814:	370c      	adds	r7, #12
 8001816:	46bd      	mov	sp, r7
 8001818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800181c:	4770      	bx	lr
 800181e:	bf00      	nop
 8001820:	40023800 	.word	0x40023800

08001824 <HAL_ADC_MspInit>:
 8001824:	b580      	push	{r7, lr}
 8001826:	b08a      	sub	sp, #40	@ 0x28
 8001828:	af00      	add	r7, sp, #0
 800182a:	6078      	str	r0, [r7, #4]
 800182c:	f107 0314 	add.w	r3, r7, #20
 8001830:	2200      	movs	r2, #0
 8001832:	601a      	str	r2, [r3, #0]
 8001834:	605a      	str	r2, [r3, #4]
 8001836:	609a      	str	r2, [r3, #8]
 8001838:	60da      	str	r2, [r3, #12]
 800183a:	611a      	str	r2, [r3, #16]
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	4a17      	ldr	r2, [pc, #92]	@ (80018a0 <HAL_ADC_MspInit+0x7c>)
 8001842:	4293      	cmp	r3, r2
 8001844:	d127      	bne.n	8001896 <HAL_ADC_MspInit+0x72>
 8001846:	2300      	movs	r3, #0
 8001848:	613b      	str	r3, [r7, #16]
 800184a:	4b16      	ldr	r3, [pc, #88]	@ (80018a4 <HAL_ADC_MspInit+0x80>)
 800184c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800184e:	4a15      	ldr	r2, [pc, #84]	@ (80018a4 <HAL_ADC_MspInit+0x80>)
 8001850:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001854:	6453      	str	r3, [r2, #68]	@ 0x44
 8001856:	4b13      	ldr	r3, [pc, #76]	@ (80018a4 <HAL_ADC_MspInit+0x80>)
 8001858:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800185a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800185e:	613b      	str	r3, [r7, #16]
 8001860:	693b      	ldr	r3, [r7, #16]
 8001862:	2300      	movs	r3, #0
 8001864:	60fb      	str	r3, [r7, #12]
 8001866:	4b0f      	ldr	r3, [pc, #60]	@ (80018a4 <HAL_ADC_MspInit+0x80>)
 8001868:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800186a:	4a0e      	ldr	r2, [pc, #56]	@ (80018a4 <HAL_ADC_MspInit+0x80>)
 800186c:	f043 0301 	orr.w	r3, r3, #1
 8001870:	6313      	str	r3, [r2, #48]	@ 0x30
 8001872:	4b0c      	ldr	r3, [pc, #48]	@ (80018a4 <HAL_ADC_MspInit+0x80>)
 8001874:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001876:	f003 0301 	and.w	r3, r3, #1
 800187a:	60fb      	str	r3, [r7, #12]
 800187c:	68fb      	ldr	r3, [r7, #12]
 800187e:	2304      	movs	r3, #4
 8001880:	617b      	str	r3, [r7, #20]
 8001882:	2303      	movs	r3, #3
 8001884:	61bb      	str	r3, [r7, #24]
 8001886:	2300      	movs	r3, #0
 8001888:	61fb      	str	r3, [r7, #28]
 800188a:	f107 0314 	add.w	r3, r7, #20
 800188e:	4619      	mov	r1, r3
 8001890:	4805      	ldr	r0, [pc, #20]	@ (80018a8 <HAL_ADC_MspInit+0x84>)
 8001892:	f001 fe49 	bl	8003528 <HAL_GPIO_Init>
 8001896:	bf00      	nop
 8001898:	3728      	adds	r7, #40	@ 0x28
 800189a:	46bd      	mov	sp, r7
 800189c:	bd80      	pop	{r7, pc}
 800189e:	bf00      	nop
 80018a0:	40012000 	.word	0x40012000
 80018a4:	40023800 	.word	0x40023800
 80018a8:	40020000 	.word	0x40020000

080018ac <HAL_CAN_MspInit>:
 80018ac:	b580      	push	{r7, lr}
 80018ae:	b08c      	sub	sp, #48	@ 0x30
 80018b0:	af00      	add	r7, sp, #0
 80018b2:	6078      	str	r0, [r7, #4]
 80018b4:	f107 031c 	add.w	r3, r7, #28
 80018b8:	2200      	movs	r2, #0
 80018ba:	601a      	str	r2, [r3, #0]
 80018bc:	605a      	str	r2, [r3, #4]
 80018be:	609a      	str	r2, [r3, #8]
 80018c0:	60da      	str	r2, [r3, #12]
 80018c2:	611a      	str	r2, [r3, #16]
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	4a4a      	ldr	r2, [pc, #296]	@ (80019f4 <HAL_CAN_MspInit+0x148>)
 80018ca:	4293      	cmp	r3, r2
 80018cc:	d13e      	bne.n	800194c <HAL_CAN_MspInit+0xa0>
 80018ce:	4b4a      	ldr	r3, [pc, #296]	@ (80019f8 <HAL_CAN_MspInit+0x14c>)
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	3301      	adds	r3, #1
 80018d4:	4a48      	ldr	r2, [pc, #288]	@ (80019f8 <HAL_CAN_MspInit+0x14c>)
 80018d6:	6013      	str	r3, [r2, #0]
 80018d8:	4b47      	ldr	r3, [pc, #284]	@ (80019f8 <HAL_CAN_MspInit+0x14c>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	2b01      	cmp	r3, #1
 80018de:	d10d      	bne.n	80018fc <HAL_CAN_MspInit+0x50>
 80018e0:	2300      	movs	r3, #0
 80018e2:	61bb      	str	r3, [r7, #24]
 80018e4:	4b45      	ldr	r3, [pc, #276]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 80018e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018e8:	4a44      	ldr	r2, [pc, #272]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 80018ea:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80018ee:	6413      	str	r3, [r2, #64]	@ 0x40
 80018f0:	4b42      	ldr	r3, [pc, #264]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 80018f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018f4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80018f8:	61bb      	str	r3, [r7, #24]
 80018fa:	69bb      	ldr	r3, [r7, #24]
 80018fc:	2300      	movs	r3, #0
 80018fe:	617b      	str	r3, [r7, #20]
 8001900:	4b3e      	ldr	r3, [pc, #248]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 8001902:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001904:	4a3d      	ldr	r2, [pc, #244]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 8001906:	f043 0301 	orr.w	r3, r3, #1
 800190a:	6313      	str	r3, [r2, #48]	@ 0x30
 800190c:	4b3b      	ldr	r3, [pc, #236]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 800190e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001910:	f003 0301 	and.w	r3, r3, #1
 8001914:	617b      	str	r3, [r7, #20]
 8001916:	697b      	ldr	r3, [r7, #20]
 8001918:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 800191c:	61fb      	str	r3, [r7, #28]
 800191e:	2302      	movs	r3, #2
 8001920:	623b      	str	r3, [r7, #32]
 8001922:	2300      	movs	r3, #0
 8001924:	627b      	str	r3, [r7, #36]	@ 0x24
 8001926:	2303      	movs	r3, #3
 8001928:	62bb      	str	r3, [r7, #40]	@ 0x28
 800192a:	2309      	movs	r3, #9
 800192c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800192e:	f107 031c 	add.w	r3, r7, #28
 8001932:	4619      	mov	r1, r3
 8001934:	4832      	ldr	r0, [pc, #200]	@ (8001a00 <HAL_CAN_MspInit+0x154>)
 8001936:	f001 fdf7 	bl	8003528 <HAL_GPIO_Init>
 800193a:	2200      	movs	r2, #0
 800193c:	2102      	movs	r1, #2
 800193e:	2014      	movs	r0, #20
 8001940:	f001 fd29 	bl	8003396 <HAL_NVIC_SetPriority>
 8001944:	2014      	movs	r0, #20
 8001946:	f001 fd42 	bl	80033ce <HAL_NVIC_EnableIRQ>
 800194a:	e04f      	b.n	80019ec <HAL_CAN_MspInit+0x140>
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	4a2c      	ldr	r2, [pc, #176]	@ (8001a04 <HAL_CAN_MspInit+0x158>)
 8001952:	4293      	cmp	r3, r2
 8001954:	d14a      	bne.n	80019ec <HAL_CAN_MspInit+0x140>
 8001956:	2300      	movs	r3, #0
 8001958:	613b      	str	r3, [r7, #16]
 800195a:	4b28      	ldr	r3, [pc, #160]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 800195c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800195e:	4a27      	ldr	r2, [pc, #156]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 8001960:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8001964:	6413      	str	r3, [r2, #64]	@ 0x40
 8001966:	4b25      	ldr	r3, [pc, #148]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 8001968:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800196a:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800196e:	613b      	str	r3, [r7, #16]
 8001970:	693b      	ldr	r3, [r7, #16]
 8001972:	4b21      	ldr	r3, [pc, #132]	@ (80019f8 <HAL_CAN_MspInit+0x14c>)
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	3301      	adds	r3, #1
 8001978:	4a1f      	ldr	r2, [pc, #124]	@ (80019f8 <HAL_CAN_MspInit+0x14c>)
 800197a:	6013      	str	r3, [r2, #0]
 800197c:	4b1e      	ldr	r3, [pc, #120]	@ (80019f8 <HAL_CAN_MspInit+0x14c>)
 800197e:	681b      	ldr	r3, [r3, #0]
 8001980:	2b01      	cmp	r3, #1
 8001982:	d10d      	bne.n	80019a0 <HAL_CAN_MspInit+0xf4>
 8001984:	2300      	movs	r3, #0
 8001986:	60fb      	str	r3, [r7, #12]
 8001988:	4b1c      	ldr	r3, [pc, #112]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 800198a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800198c:	4a1b      	ldr	r2, [pc, #108]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 800198e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001992:	6413      	str	r3, [r2, #64]	@ 0x40
 8001994:	4b19      	ldr	r3, [pc, #100]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 8001996:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001998:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800199c:	60fb      	str	r3, [r7, #12]
 800199e:	68fb      	ldr	r3, [r7, #12]
 80019a0:	2300      	movs	r3, #0
 80019a2:	60bb      	str	r3, [r7, #8]
 80019a4:	4b15      	ldr	r3, [pc, #84]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 80019a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019a8:	4a14      	ldr	r2, [pc, #80]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 80019aa:	f043 0302 	orr.w	r3, r3, #2
 80019ae:	6313      	str	r3, [r2, #48]	@ 0x30
 80019b0:	4b12      	ldr	r3, [pc, #72]	@ (80019fc <HAL_CAN_MspInit+0x150>)
 80019b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019b4:	f003 0302 	and.w	r3, r3, #2
 80019b8:	60bb      	str	r3, [r7, #8]
 80019ba:	68bb      	ldr	r3, [r7, #8]
 80019bc:	2360      	movs	r3, #96	@ 0x60
 80019be:	61fb      	str	r3, [r7, #28]
 80019c0:	2302      	movs	r3, #2
 80019c2:	623b      	str	r3, [r7, #32]
 80019c4:	2300      	movs	r3, #0
 80019c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80019c8:	2303      	movs	r3, #3
 80019ca:	62bb      	str	r3, [r7, #40]	@ 0x28
 80019cc:	2309      	movs	r3, #9
 80019ce:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80019d0:	f107 031c 	add.w	r3, r7, #28
 80019d4:	4619      	mov	r1, r3
 80019d6:	480c      	ldr	r0, [pc, #48]	@ (8001a08 <HAL_CAN_MspInit+0x15c>)
 80019d8:	f001 fda6 	bl	8003528 <HAL_GPIO_Init>
 80019dc:	2200      	movs	r2, #0
 80019de:	2102      	movs	r1, #2
 80019e0:	2040      	movs	r0, #64	@ 0x40
 80019e2:	f001 fcd8 	bl	8003396 <HAL_NVIC_SetPriority>
 80019e6:	2040      	movs	r0, #64	@ 0x40
 80019e8:	f001 fcf1 	bl	80033ce <HAL_NVIC_EnableIRQ>
 80019ec:	bf00      	nop
 80019ee:	3730      	adds	r7, #48	@ 0x30
 80019f0:	46bd      	mov	sp, r7
 80019f2:	bd80      	pop	{r7, pc}
 80019f4:	40006400 	.word	0x40006400
 80019f8:	2000122c 	.word	0x2000122c
 80019fc:	40023800 	.word	0x40023800
 8001a00:	40020000 	.word	0x40020000
 8001a04:	40006800 	.word	0x40006800
 8001a08:	40020400 	.word	0x40020400

08001a0c <HAL_UART_MspInit>:
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b08a      	sub	sp, #40	@ 0x28
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
 8001a14:	f107 0314 	add.w	r3, r7, #20
 8001a18:	2200      	movs	r2, #0
 8001a1a:	601a      	str	r2, [r3, #0]
 8001a1c:	605a      	str	r2, [r3, #4]
 8001a1e:	609a      	str	r2, [r3, #8]
 8001a20:	60da      	str	r2, [r3, #12]
 8001a22:	611a      	str	r2, [r3, #16]
 8001a24:	687b      	ldr	r3, [r7, #4]
 8001a26:	681b      	ldr	r3, [r3, #0]
 8001a28:	4a1d      	ldr	r2, [pc, #116]	@ (8001aa0 <HAL_UART_MspInit+0x94>)
 8001a2a:	4293      	cmp	r3, r2
 8001a2c:	d134      	bne.n	8001a98 <HAL_UART_MspInit+0x8c>
 8001a2e:	2300      	movs	r3, #0
 8001a30:	613b      	str	r3, [r7, #16]
 8001a32:	4b1c      	ldr	r3, [pc, #112]	@ (8001aa4 <HAL_UART_MspInit+0x98>)
 8001a34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a36:	4a1b      	ldr	r2, [pc, #108]	@ (8001aa4 <HAL_UART_MspInit+0x98>)
 8001a38:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001a3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a3e:	4b19      	ldr	r3, [pc, #100]	@ (8001aa4 <HAL_UART_MspInit+0x98>)
 8001a40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a42:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001a46:	613b      	str	r3, [r7, #16]
 8001a48:	693b      	ldr	r3, [r7, #16]
 8001a4a:	2300      	movs	r3, #0
 8001a4c:	60fb      	str	r3, [r7, #12]
 8001a4e:	4b15      	ldr	r3, [pc, #84]	@ (8001aa4 <HAL_UART_MspInit+0x98>)
 8001a50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a52:	4a14      	ldr	r2, [pc, #80]	@ (8001aa4 <HAL_UART_MspInit+0x98>)
 8001a54:	f043 0304 	orr.w	r3, r3, #4
 8001a58:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a5a:	4b12      	ldr	r3, [pc, #72]	@ (8001aa4 <HAL_UART_MspInit+0x98>)
 8001a5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a5e:	f003 0304 	and.w	r3, r3, #4
 8001a62:	60fb      	str	r3, [r7, #12]
 8001a64:	68fb      	ldr	r3, [r7, #12]
 8001a66:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001a6a:	617b      	str	r3, [r7, #20]
 8001a6c:	2302      	movs	r3, #2
 8001a6e:	61bb      	str	r3, [r7, #24]
 8001a70:	2300      	movs	r3, #0
 8001a72:	61fb      	str	r3, [r7, #28]
 8001a74:	2303      	movs	r3, #3
 8001a76:	623b      	str	r3, [r7, #32]
 8001a78:	2307      	movs	r3, #7
 8001a7a:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a7c:	f107 0314 	add.w	r3, r7, #20
 8001a80:	4619      	mov	r1, r3
 8001a82:	4809      	ldr	r0, [pc, #36]	@ (8001aa8 <HAL_UART_MspInit+0x9c>)
 8001a84:	f001 fd50 	bl	8003528 <HAL_GPIO_Init>
 8001a88:	2200      	movs	r2, #0
 8001a8a:	2101      	movs	r1, #1
 8001a8c:	2027      	movs	r0, #39	@ 0x27
 8001a8e:	f001 fc82 	bl	8003396 <HAL_NVIC_SetPriority>
 8001a92:	2027      	movs	r0, #39	@ 0x27
 8001a94:	f001 fc9b 	bl	80033ce <HAL_NVIC_EnableIRQ>
 8001a98:	bf00      	nop
 8001a9a:	3728      	adds	r7, #40	@ 0x28
 8001a9c:	46bd      	mov	sp, r7
 8001a9e:	bd80      	pop	{r7, pc}
 8001aa0:	40004800 	.word	0x40004800
 8001aa4:	40023800 	.word	0x40023800
 8001aa8:	40020800 	.word	0x40020800

08001aac <NMI_Handler>:
 8001aac:	b480      	push	{r7}
 8001aae:	af00      	add	r7, sp, #0
 8001ab0:	bf00      	nop
 8001ab2:	e7fd      	b.n	8001ab0 <NMI_Handler+0x4>

08001ab4 <HardFault_Handler>:
 8001ab4:	b480      	push	{r7}
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	bf00      	nop
 8001aba:	e7fd      	b.n	8001ab8 <HardFault_Handler+0x4>

08001abc <MemManage_Handler>:
 8001abc:	b480      	push	{r7}
 8001abe:	af00      	add	r7, sp, #0
 8001ac0:	bf00      	nop
 8001ac2:	e7fd      	b.n	8001ac0 <MemManage_Handler+0x4>

08001ac4 <BusFault_Handler>:
 8001ac4:	b480      	push	{r7}
 8001ac6:	af00      	add	r7, sp, #0
 8001ac8:	bf00      	nop
 8001aca:	e7fd      	b.n	8001ac8 <BusFault_Handler+0x4>

08001acc <UsageFault_Handler>:
 8001acc:	b480      	push	{r7}
 8001ace:	af00      	add	r7, sp, #0
 8001ad0:	bf00      	nop
 8001ad2:	e7fd      	b.n	8001ad0 <UsageFault_Handler+0x4>

08001ad4 <SVC_Handler>:
 8001ad4:	b480      	push	{r7}
 8001ad6:	af00      	add	r7, sp, #0
 8001ad8:	bf00      	nop
 8001ada:	46bd      	mov	sp, r7
 8001adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae0:	4770      	bx	lr

08001ae2 <DebugMon_Handler>:
 8001ae2:	b480      	push	{r7}
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	bf00      	nop
 8001ae8:	46bd      	mov	sp, r7
 8001aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aee:	4770      	bx	lr

08001af0 <PendSV_Handler>:
 8001af0:	b480      	push	{r7}
 8001af2:	af00      	add	r7, sp, #0
 8001af4:	bf00      	nop
 8001af6:	46bd      	mov	sp, r7
 8001af8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001afc:	4770      	bx	lr
	...

08001b00 <SysTick_Handler>:
 8001b00:	b580      	push	{r7, lr}
 8001b02:	af00      	add	r7, sp, #0
 8001b04:	f000 f8fa 	bl	8001cfc <HAL_IncTick>
 8001b08:	4b03      	ldr	r3, [pc, #12]	@ (8001b18 <SysTick_Handler+0x18>)
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	3301      	adds	r3, #1
 8001b0e:	4a02      	ldr	r2, [pc, #8]	@ (8001b18 <SysTick_Handler+0x18>)
 8001b10:	6013      	str	r3, [r2, #0]
 8001b12:	bf00      	nop
 8001b14:	bd80      	pop	{r7, pc}
 8001b16:	bf00      	nop
 8001b18:	20001208 	.word	0x20001208

08001b1c <EXTI0_IRQHandler>:
 8001b1c:	b580      	push	{r7, lr}
 8001b1e:	af00      	add	r7, sp, #0
 8001b20:	2001      	movs	r0, #1
 8001b22:	f001 feb7 	bl	8003894 <HAL_GPIO_EXTI_IRQHandler>
 8001b26:	bf00      	nop
 8001b28:	bd80      	pop	{r7, pc}

08001b2a <EXTI1_IRQHandler>:
 8001b2a:	b580      	push	{r7, lr}
 8001b2c:	af00      	add	r7, sp, #0
 8001b2e:	2002      	movs	r0, #2
 8001b30:	f001 feb0 	bl	8003894 <HAL_GPIO_EXTI_IRQHandler>
 8001b34:	bf00      	nop
 8001b36:	bd80      	pop	{r7, pc}

08001b38 <CAN1_RX0_IRQHandler>:
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	af00      	add	r7, sp, #0
 8001b3c:	4802      	ldr	r0, [pc, #8]	@ (8001b48 <CAN1_RX0_IRQHandler+0x10>)
 8001b3e:	f001 f920 	bl	8002d82 <HAL_CAN_IRQHandler>
 8001b42:	bf00      	nop
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	200000c8 	.word	0x200000c8

08001b4c <USART3_IRQHandler>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	af00      	add	r7, sp, #0
 8001b50:	4802      	ldr	r0, [pc, #8]	@ (8001b5c <USART3_IRQHandler+0x10>)
 8001b52:	f002 fc5f 	bl	8004414 <HAL_UART_IRQHandler>
 8001b56:	bf00      	nop
 8001b58:	bd80      	pop	{r7, pc}
 8001b5a:	bf00      	nop
 8001b5c:	20000118 	.word	0x20000118

08001b60 <CAN2_RX0_IRQHandler>:
 8001b60:	b580      	push	{r7, lr}
 8001b62:	af00      	add	r7, sp, #0
 8001b64:	4802      	ldr	r0, [pc, #8]	@ (8001b70 <CAN2_RX0_IRQHandler+0x10>)
 8001b66:	f001 f90c 	bl	8002d82 <HAL_CAN_IRQHandler>
 8001b6a:	bf00      	nop
 8001b6c:	bd80      	pop	{r7, pc}
 8001b6e:	bf00      	nop
 8001b70:	200000f0 	.word	0x200000f0

08001b74 <_sbrk>:
 8001b74:	b580      	push	{r7, lr}
 8001b76:	b086      	sub	sp, #24
 8001b78:	af00      	add	r7, sp, #0
 8001b7a:	6078      	str	r0, [r7, #4]
 8001b7c:	4a14      	ldr	r2, [pc, #80]	@ (8001bd0 <_sbrk+0x5c>)
 8001b7e:	4b15      	ldr	r3, [pc, #84]	@ (8001bd4 <_sbrk+0x60>)
 8001b80:	1ad3      	subs	r3, r2, r3
 8001b82:	617b      	str	r3, [r7, #20]
 8001b84:	697b      	ldr	r3, [r7, #20]
 8001b86:	613b      	str	r3, [r7, #16]
 8001b88:	4b13      	ldr	r3, [pc, #76]	@ (8001bd8 <_sbrk+0x64>)
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	d102      	bne.n	8001b96 <_sbrk+0x22>
 8001b90:	4b11      	ldr	r3, [pc, #68]	@ (8001bd8 <_sbrk+0x64>)
 8001b92:	4a12      	ldr	r2, [pc, #72]	@ (8001bdc <_sbrk+0x68>)
 8001b94:	601a      	str	r2, [r3, #0]
 8001b96:	4b10      	ldr	r3, [pc, #64]	@ (8001bd8 <_sbrk+0x64>)
 8001b98:	681a      	ldr	r2, [r3, #0]
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	4413      	add	r3, r2
 8001b9e:	693a      	ldr	r2, [r7, #16]
 8001ba0:	429a      	cmp	r2, r3
 8001ba2:	d207      	bcs.n	8001bb4 <_sbrk+0x40>
 8001ba4:	f003 fbd8 	bl	8005358 <__errno>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	220c      	movs	r2, #12
 8001bac:	601a      	str	r2, [r3, #0]
 8001bae:	f04f 33ff 	mov.w	r3, #4294967295
 8001bb2:	e009      	b.n	8001bc8 <_sbrk+0x54>
 8001bb4:	4b08      	ldr	r3, [pc, #32]	@ (8001bd8 <_sbrk+0x64>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	60fb      	str	r3, [r7, #12]
 8001bba:	4b07      	ldr	r3, [pc, #28]	@ (8001bd8 <_sbrk+0x64>)
 8001bbc:	681a      	ldr	r2, [r3, #0]
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	4413      	add	r3, r2
 8001bc2:	4a05      	ldr	r2, [pc, #20]	@ (8001bd8 <_sbrk+0x64>)
 8001bc4:	6013      	str	r3, [r2, #0]
 8001bc6:	68fb      	ldr	r3, [r7, #12]
 8001bc8:	4618      	mov	r0, r3
 8001bca:	3718      	adds	r7, #24
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	bd80      	pop	{r7, pc}
 8001bd0:	20020000 	.word	0x20020000
 8001bd4:	00000400 	.word	0x00000400
 8001bd8:	20001230 	.word	0x20001230
 8001bdc:	20001380 	.word	0x20001380

08001be0 <SystemInit>:
 8001be0:	b480      	push	{r7}
 8001be2:	af00      	add	r7, sp, #0
 8001be4:	4b06      	ldr	r3, [pc, #24]	@ (8001c00 <SystemInit+0x20>)
 8001be6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001bea:	4a05      	ldr	r2, [pc, #20]	@ (8001c00 <SystemInit+0x20>)
 8001bec:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001bf0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001bf4:	bf00      	nop
 8001bf6:	46bd      	mov	sp, r7
 8001bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bfc:	4770      	bx	lr
 8001bfe:	bf00      	nop
 8001c00:	e000ed00 	.word	0xe000ed00

08001c04 <Reset_Handler>:
 8001c04:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001c3c <LoopFillZerobss+0x12>
 8001c08:	480d      	ldr	r0, [pc, #52]	@ (8001c40 <LoopFillZerobss+0x16>)
 8001c0a:	490e      	ldr	r1, [pc, #56]	@ (8001c44 <LoopFillZerobss+0x1a>)
 8001c0c:	4a0e      	ldr	r2, [pc, #56]	@ (8001c48 <LoopFillZerobss+0x1e>)
 8001c0e:	2300      	movs	r3, #0
 8001c10:	e002      	b.n	8001c18 <LoopCopyDataInit>

08001c12 <CopyDataInit>:
 8001c12:	58d4      	ldr	r4, [r2, r3]
 8001c14:	50c4      	str	r4, [r0, r3]
 8001c16:	3304      	adds	r3, #4

08001c18 <LoopCopyDataInit>:
 8001c18:	18c4      	adds	r4, r0, r3
 8001c1a:	428c      	cmp	r4, r1
 8001c1c:	d3f9      	bcc.n	8001c12 <CopyDataInit>
 8001c1e:	4a0b      	ldr	r2, [pc, #44]	@ (8001c4c <LoopFillZerobss+0x22>)
 8001c20:	4c0b      	ldr	r4, [pc, #44]	@ (8001c50 <LoopFillZerobss+0x26>)
 8001c22:	2300      	movs	r3, #0
 8001c24:	e001      	b.n	8001c2a <LoopFillZerobss>

08001c26 <FillZerobss>:
 8001c26:	6013      	str	r3, [r2, #0]
 8001c28:	3204      	adds	r2, #4

08001c2a <LoopFillZerobss>:
 8001c2a:	42a2      	cmp	r2, r4
 8001c2c:	d3fb      	bcc.n	8001c26 <FillZerobss>
 8001c2e:	f7ff ffd7 	bl	8001be0 <SystemInit>
 8001c32:	f003 fb97 	bl	8005364 <__libc_init_array>
 8001c36:	f7ff f969 	bl	8000f0c <main>
 8001c3a:	4770      	bx	lr
 8001c3c:	20020000 	.word	0x20020000
 8001c40:	20000000 	.word	0x20000000
 8001c44:	20000064 	.word	0x20000064
 8001c48:	08005ce0 	.word	0x08005ce0
 8001c4c:	20000064 	.word	0x20000064
 8001c50:	20001380 	.word	0x20001380

08001c54 <ADC_IRQHandler>:
 8001c54:	e7fe      	b.n	8001c54 <ADC_IRQHandler>
	...

08001c58 <HAL_Init>:
 8001c58:	b580      	push	{r7, lr}
 8001c5a:	af00      	add	r7, sp, #0
 8001c5c:	4b0e      	ldr	r3, [pc, #56]	@ (8001c98 <HAL_Init+0x40>)
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	4a0d      	ldr	r2, [pc, #52]	@ (8001c98 <HAL_Init+0x40>)
 8001c62:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001c66:	6013      	str	r3, [r2, #0]
 8001c68:	4b0b      	ldr	r3, [pc, #44]	@ (8001c98 <HAL_Init+0x40>)
 8001c6a:	681b      	ldr	r3, [r3, #0]
 8001c6c:	4a0a      	ldr	r2, [pc, #40]	@ (8001c98 <HAL_Init+0x40>)
 8001c6e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001c72:	6013      	str	r3, [r2, #0]
 8001c74:	4b08      	ldr	r3, [pc, #32]	@ (8001c98 <HAL_Init+0x40>)
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	4a07      	ldr	r2, [pc, #28]	@ (8001c98 <HAL_Init+0x40>)
 8001c7a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001c7e:	6013      	str	r3, [r2, #0]
 8001c80:	2003      	movs	r0, #3
 8001c82:	f001 fb7d 	bl	8003380 <HAL_NVIC_SetPriorityGrouping>
 8001c86:	2000      	movs	r0, #0
 8001c88:	f000 f808 	bl	8001c9c <HAL_InitTick>
 8001c8c:	f7ff fda2 	bl	80017d4 <HAL_MspInit>
 8001c90:	2300      	movs	r3, #0
 8001c92:	4618      	mov	r0, r3
 8001c94:	bd80      	pop	{r7, pc}
 8001c96:	bf00      	nop
 8001c98:	40023c00 	.word	0x40023c00

08001c9c <HAL_InitTick>:
 8001c9c:	b580      	push	{r7, lr}
 8001c9e:	b082      	sub	sp, #8
 8001ca0:	af00      	add	r7, sp, #0
 8001ca2:	6078      	str	r0, [r7, #4]
 8001ca4:	4b12      	ldr	r3, [pc, #72]	@ (8001cf0 <HAL_InitTick+0x54>)
 8001ca6:	681a      	ldr	r2, [r3, #0]
 8001ca8:	4b12      	ldr	r3, [pc, #72]	@ (8001cf4 <HAL_InitTick+0x58>)
 8001caa:	781b      	ldrb	r3, [r3, #0]
 8001cac:	4619      	mov	r1, r3
 8001cae:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cb2:	fbb3 f3f1 	udiv	r3, r3, r1
 8001cb6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cba:	4618      	mov	r0, r3
 8001cbc:	f001 fb95 	bl	80033ea <HAL_SYSTICK_Config>
 8001cc0:	4603      	mov	r3, r0
 8001cc2:	2b00      	cmp	r3, #0
 8001cc4:	d001      	beq.n	8001cca <HAL_InitTick+0x2e>
 8001cc6:	2301      	movs	r3, #1
 8001cc8:	e00e      	b.n	8001ce8 <HAL_InitTick+0x4c>
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	2b0f      	cmp	r3, #15
 8001cce:	d80a      	bhi.n	8001ce6 <HAL_InitTick+0x4a>
 8001cd0:	2200      	movs	r2, #0
 8001cd2:	6879      	ldr	r1, [r7, #4]
 8001cd4:	f04f 30ff 	mov.w	r0, #4294967295
 8001cd8:	f001 fb5d 	bl	8003396 <HAL_NVIC_SetPriority>
 8001cdc:	4a06      	ldr	r2, [pc, #24]	@ (8001cf8 <HAL_InitTick+0x5c>)
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	6013      	str	r3, [r2, #0]
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	e000      	b.n	8001ce8 <HAL_InitTick+0x4c>
 8001ce6:	2301      	movs	r3, #1
 8001ce8:	4618      	mov	r0, r3
 8001cea:	3708      	adds	r7, #8
 8001cec:	46bd      	mov	sp, r7
 8001cee:	bd80      	pop	{r7, pc}
 8001cf0:	20000008 	.word	0x20000008
 8001cf4:	20000010 	.word	0x20000010
 8001cf8:	2000000c 	.word	0x2000000c

08001cfc <HAL_IncTick>:
 8001cfc:	b480      	push	{r7}
 8001cfe:	af00      	add	r7, sp, #0
 8001d00:	4b06      	ldr	r3, [pc, #24]	@ (8001d1c <HAL_IncTick+0x20>)
 8001d02:	781b      	ldrb	r3, [r3, #0]
 8001d04:	461a      	mov	r2, r3
 8001d06:	4b06      	ldr	r3, [pc, #24]	@ (8001d20 <HAL_IncTick+0x24>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	4413      	add	r3, r2
 8001d0c:	4a04      	ldr	r2, [pc, #16]	@ (8001d20 <HAL_IncTick+0x24>)
 8001d0e:	6013      	str	r3, [r2, #0]
 8001d10:	bf00      	nop
 8001d12:	46bd      	mov	sp, r7
 8001d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d18:	4770      	bx	lr
 8001d1a:	bf00      	nop
 8001d1c:	20000010 	.word	0x20000010
 8001d20:	20001234 	.word	0x20001234

08001d24 <HAL_GetTick>:
 8001d24:	b480      	push	{r7}
 8001d26:	af00      	add	r7, sp, #0
 8001d28:	4b03      	ldr	r3, [pc, #12]	@ (8001d38 <HAL_GetTick+0x14>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	4618      	mov	r0, r3
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d34:	4770      	bx	lr
 8001d36:	bf00      	nop
 8001d38:	20001234 	.word	0x20001234

08001d3c <HAL_Delay>:
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	b084      	sub	sp, #16
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	6078      	str	r0, [r7, #4]
 8001d44:	f7ff ffee 	bl	8001d24 <HAL_GetTick>
 8001d48:	60b8      	str	r0, [r7, #8]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	60fb      	str	r3, [r7, #12]
 8001d4e:	68fb      	ldr	r3, [r7, #12]
 8001d50:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001d54:	d005      	beq.n	8001d62 <HAL_Delay+0x26>
 8001d56:	4b0a      	ldr	r3, [pc, #40]	@ (8001d80 <HAL_Delay+0x44>)
 8001d58:	781b      	ldrb	r3, [r3, #0]
 8001d5a:	461a      	mov	r2, r3
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	4413      	add	r3, r2
 8001d60:	60fb      	str	r3, [r7, #12]
 8001d62:	bf00      	nop
 8001d64:	f7ff ffde 	bl	8001d24 <HAL_GetTick>
 8001d68:	4602      	mov	r2, r0
 8001d6a:	68bb      	ldr	r3, [r7, #8]
 8001d6c:	1ad3      	subs	r3, r2, r3
 8001d6e:	68fa      	ldr	r2, [r7, #12]
 8001d70:	429a      	cmp	r2, r3
 8001d72:	d8f7      	bhi.n	8001d64 <HAL_Delay+0x28>
 8001d74:	bf00      	nop
 8001d76:	bf00      	nop
 8001d78:	3710      	adds	r7, #16
 8001d7a:	46bd      	mov	sp, r7
 8001d7c:	bd80      	pop	{r7, pc}
 8001d7e:	bf00      	nop
 8001d80:	20000010 	.word	0x20000010

08001d84 <HAL_ADC_Init>:
 8001d84:	b580      	push	{r7, lr}
 8001d86:	b084      	sub	sp, #16
 8001d88:	af00      	add	r7, sp, #0
 8001d8a:	6078      	str	r0, [r7, #4]
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	73fb      	strb	r3, [r7, #15]
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d101      	bne.n	8001d9a <HAL_ADC_Init+0x16>
 8001d96:	2301      	movs	r3, #1
 8001d98:	e033      	b.n	8001e02 <HAL_ADC_Init+0x7e>
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d109      	bne.n	8001db6 <HAL_ADC_Init+0x32>
 8001da2:	6878      	ldr	r0, [r7, #4]
 8001da4:	f7ff fd3e 	bl	8001824 <HAL_ADC_MspInit>
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	2200      	movs	r2, #0
 8001dac:	645a      	str	r2, [r3, #68]	@ 0x44
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	2200      	movs	r2, #0
 8001db2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dba:	f003 0310 	and.w	r3, r3, #16
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d118      	bne.n	8001df4 <HAL_ADC_Init+0x70>
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dc6:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001dca:	f023 0302 	bic.w	r3, r3, #2
 8001dce:	f043 0202 	orr.w	r2, r3, #2
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	641a      	str	r2, [r3, #64]	@ 0x40
 8001dd6:	6878      	ldr	r0, [r7, #4]
 8001dd8:	f000 faa4 	bl	8002324 <ADC_Init>
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	2200      	movs	r2, #0
 8001de0:	645a      	str	r2, [r3, #68]	@ 0x44
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001de6:	f023 0303 	bic.w	r3, r3, #3
 8001dea:	f043 0201 	orr.w	r2, r3, #1
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	641a      	str	r2, [r3, #64]	@ 0x40
 8001df2:	e001      	b.n	8001df8 <HAL_ADC_Init+0x74>
 8001df4:	2301      	movs	r3, #1
 8001df6:	73fb      	strb	r3, [r7, #15]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	2200      	movs	r2, #0
 8001dfc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001e00:	7bfb      	ldrb	r3, [r7, #15]
 8001e02:	4618      	mov	r0, r3
 8001e04:	3710      	adds	r7, #16
 8001e06:	46bd      	mov	sp, r7
 8001e08:	bd80      	pop	{r7, pc}
	...

08001e0c <HAL_ADC_Start>:
 8001e0c:	b480      	push	{r7}
 8001e0e:	b085      	sub	sp, #20
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	6078      	str	r0, [r7, #4]
 8001e14:	2300      	movs	r3, #0
 8001e16:	60bb      	str	r3, [r7, #8]
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001e1e:	2b01      	cmp	r3, #1
 8001e20:	d101      	bne.n	8001e26 <HAL_ADC_Start+0x1a>
 8001e22:	2302      	movs	r3, #2
 8001e24:	e0b2      	b.n	8001f8c <HAL_ADC_Start+0x180>
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	2201      	movs	r2, #1
 8001e2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	689b      	ldr	r3, [r3, #8]
 8001e34:	f003 0301 	and.w	r3, r3, #1
 8001e38:	2b01      	cmp	r3, #1
 8001e3a:	d018      	beq.n	8001e6e <HAL_ADC_Start+0x62>
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	689a      	ldr	r2, [r3, #8]
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	f042 0201 	orr.w	r2, r2, #1
 8001e4a:	609a      	str	r2, [r3, #8]
 8001e4c:	4b52      	ldr	r3, [pc, #328]	@ (8001f98 <HAL_ADC_Start+0x18c>)
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	4a52      	ldr	r2, [pc, #328]	@ (8001f9c <HAL_ADC_Start+0x190>)
 8001e52:	fba2 2303 	umull	r2, r3, r2, r3
 8001e56:	0c9a      	lsrs	r2, r3, #18
 8001e58:	4613      	mov	r3, r2
 8001e5a:	005b      	lsls	r3, r3, #1
 8001e5c:	4413      	add	r3, r2
 8001e5e:	60bb      	str	r3, [r7, #8]
 8001e60:	e002      	b.n	8001e68 <HAL_ADC_Start+0x5c>
 8001e62:	68bb      	ldr	r3, [r7, #8]
 8001e64:	3b01      	subs	r3, #1
 8001e66:	60bb      	str	r3, [r7, #8]
 8001e68:	68bb      	ldr	r3, [r7, #8]
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d1f9      	bne.n	8001e62 <HAL_ADC_Start+0x56>
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	689b      	ldr	r3, [r3, #8]
 8001e74:	f003 0301 	and.w	r3, r3, #1
 8001e78:	2b01      	cmp	r3, #1
 8001e7a:	d17a      	bne.n	8001f72 <HAL_ADC_Start+0x166>
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e80:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001e84:	f023 0301 	bic.w	r3, r3, #1
 8001e88:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	685b      	ldr	r3, [r3, #4]
 8001e96:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001e9a:	2b00      	cmp	r3, #0
 8001e9c:	d007      	beq.n	8001eae <HAL_ADC_Start+0xa2>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ea2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001ea6:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	641a      	str	r2, [r3, #64]	@ 0x40
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001eb2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001eb6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001eba:	d106      	bne.n	8001eca <HAL_ADC_Start+0xbe>
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ec0:	f023 0206 	bic.w	r2, r3, #6
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ec8:	e002      	b.n	8001ed0 <HAL_ADC_Start+0xc4>
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	2200      	movs	r2, #0
 8001ece:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ed8:	4b31      	ldr	r3, [pc, #196]	@ (8001fa0 <HAL_ADC_Start+0x194>)
 8001eda:	60fb      	str	r3, [r7, #12]
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001ee4:	601a      	str	r2, [r3, #0]
 8001ee6:	68fb      	ldr	r3, [r7, #12]
 8001ee8:	685b      	ldr	r3, [r3, #4]
 8001eea:	f003 031f 	and.w	r3, r3, #31
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d12a      	bne.n	8001f48 <HAL_ADC_Start+0x13c>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	681b      	ldr	r3, [r3, #0]
 8001ef6:	4a2b      	ldr	r2, [pc, #172]	@ (8001fa4 <HAL_ADC_Start+0x198>)
 8001ef8:	4293      	cmp	r3, r2
 8001efa:	d015      	beq.n	8001f28 <HAL_ADC_Start+0x11c>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	4a29      	ldr	r2, [pc, #164]	@ (8001fa8 <HAL_ADC_Start+0x19c>)
 8001f02:	4293      	cmp	r3, r2
 8001f04:	d105      	bne.n	8001f12 <HAL_ADC_Start+0x106>
 8001f06:	4b26      	ldr	r3, [pc, #152]	@ (8001fa0 <HAL_ADC_Start+0x194>)
 8001f08:	685b      	ldr	r3, [r3, #4]
 8001f0a:	f003 031f 	and.w	r3, r3, #31
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d00a      	beq.n	8001f28 <HAL_ADC_Start+0x11c>
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	4a25      	ldr	r2, [pc, #148]	@ (8001fac <HAL_ADC_Start+0x1a0>)
 8001f18:	4293      	cmp	r3, r2
 8001f1a:	d136      	bne.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f1c:	4b20      	ldr	r3, [pc, #128]	@ (8001fa0 <HAL_ADC_Start+0x194>)
 8001f1e:	685b      	ldr	r3, [r3, #4]
 8001f20:	f003 0310 	and.w	r3, r3, #16
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d130      	bne.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	689b      	ldr	r3, [r3, #8]
 8001f2e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d129      	bne.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	689a      	ldr	r2, [r3, #8]
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001f44:	609a      	str	r2, [r3, #8]
 8001f46:	e020      	b.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4a15      	ldr	r2, [pc, #84]	@ (8001fa4 <HAL_ADC_Start+0x198>)
 8001f4e:	4293      	cmp	r3, r2
 8001f50:	d11b      	bne.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	689b      	ldr	r3, [r3, #8]
 8001f58:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001f5c:	2b00      	cmp	r3, #0
 8001f5e:	d114      	bne.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	689a      	ldr	r2, [r3, #8]
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001f6e:	609a      	str	r2, [r3, #8]
 8001f70:	e00b      	b.n	8001f8a <HAL_ADC_Start+0x17e>
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f76:	f043 0210 	orr.w	r2, r3, #16
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f82:	f043 0201 	orr.w	r2, r3, #1
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	645a      	str	r2, [r3, #68]	@ 0x44
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	4618      	mov	r0, r3
 8001f8e:	3714      	adds	r7, #20
 8001f90:	46bd      	mov	sp, r7
 8001f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f96:	4770      	bx	lr
 8001f98:	20000008 	.word	0x20000008
 8001f9c:	431bde83 	.word	0x431bde83
 8001fa0:	40012300 	.word	0x40012300
 8001fa4:	40012000 	.word	0x40012000
 8001fa8:	40012100 	.word	0x40012100
 8001fac:	40012200 	.word	0x40012200

08001fb0 <HAL_ADC_PollForConversion>:
 8001fb0:	b580      	push	{r7, lr}
 8001fb2:	b084      	sub	sp, #16
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	6078      	str	r0, [r7, #4]
 8001fb8:	6039      	str	r1, [r7, #0]
 8001fba:	2300      	movs	r3, #0
 8001fbc:	60fb      	str	r3, [r7, #12]
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	689b      	ldr	r3, [r3, #8]
 8001fc4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001fc8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001fcc:	d113      	bne.n	8001ff6 <HAL_ADC_PollForConversion+0x46>
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	689b      	ldr	r3, [r3, #8]
 8001fd4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001fd8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001fdc:	d10b      	bne.n	8001ff6 <HAL_ADC_PollForConversion+0x46>
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fe2:	f043 0220 	orr.w	r2, r3, #32
 8001fe6:	687b      	ldr	r3, [r7, #4]
 8001fe8:	641a      	str	r2, [r3, #64]	@ 0x40
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	2200      	movs	r2, #0
 8001fee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ff2:	2301      	movs	r3, #1
 8001ff4:	e063      	b.n	80020be <HAL_ADC_PollForConversion+0x10e>
 8001ff6:	f7ff fe95 	bl	8001d24 <HAL_GetTick>
 8001ffa:	60f8      	str	r0, [r7, #12]
 8001ffc:	e021      	b.n	8002042 <HAL_ADC_PollForConversion+0x92>
 8001ffe:	683b      	ldr	r3, [r7, #0]
 8002000:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002004:	d01d      	beq.n	8002042 <HAL_ADC_PollForConversion+0x92>
 8002006:	683b      	ldr	r3, [r7, #0]
 8002008:	2b00      	cmp	r3, #0
 800200a:	d007      	beq.n	800201c <HAL_ADC_PollForConversion+0x6c>
 800200c:	f7ff fe8a 	bl	8001d24 <HAL_GetTick>
 8002010:	4602      	mov	r2, r0
 8002012:	68fb      	ldr	r3, [r7, #12]
 8002014:	1ad3      	subs	r3, r2, r3
 8002016:	683a      	ldr	r2, [r7, #0]
 8002018:	429a      	cmp	r2, r3
 800201a:	d212      	bcs.n	8002042 <HAL_ADC_PollForConversion+0x92>
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	f003 0302 	and.w	r3, r3, #2
 8002026:	2b02      	cmp	r3, #2
 8002028:	d00b      	beq.n	8002042 <HAL_ADC_PollForConversion+0x92>
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800202e:	f043 0204 	orr.w	r2, r3, #4
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	641a      	str	r2, [r3, #64]	@ 0x40
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	2200      	movs	r2, #0
 800203a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800203e:	2303      	movs	r3, #3
 8002040:	e03d      	b.n	80020be <HAL_ADC_PollForConversion+0x10e>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	f003 0302 	and.w	r3, r3, #2
 800204c:	2b02      	cmp	r3, #2
 800204e:	d1d6      	bne.n	8001ffe <HAL_ADC_PollForConversion+0x4e>
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	f06f 0212 	mvn.w	r2, #18
 8002058:	601a      	str	r2, [r3, #0]
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800205e:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	641a      	str	r2, [r3, #64]	@ 0x40
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	689b      	ldr	r3, [r3, #8]
 800206c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002070:	2b00      	cmp	r3, #0
 8002072:	d123      	bne.n	80020bc <HAL_ADC_PollForConversion+0x10c>
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	7e1b      	ldrb	r3, [r3, #24]
 8002078:	2b00      	cmp	r3, #0
 800207a:	d11f      	bne.n	80020bc <HAL_ADC_PollForConversion+0x10c>
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002082:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8002086:	2b00      	cmp	r3, #0
 8002088:	d006      	beq.n	8002098 <HAL_ADC_PollForConversion+0xe8>
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	689b      	ldr	r3, [r3, #8]
 8002090:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002094:	2b00      	cmp	r3, #0
 8002096:	d111      	bne.n	80020bc <HAL_ADC_PollForConversion+0x10c>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800209c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	641a      	str	r2, [r3, #64]	@ 0x40
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020a8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d105      	bne.n	80020bc <HAL_ADC_PollForConversion+0x10c>
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020b4:	f043 0201 	orr.w	r2, r3, #1
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	641a      	str	r2, [r3, #64]	@ 0x40
 80020bc:	2300      	movs	r3, #0
 80020be:	4618      	mov	r0, r3
 80020c0:	3710      	adds	r7, #16
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bd80      	pop	{r7, pc}

080020c6 <HAL_ADC_GetValue>:
 80020c6:	b480      	push	{r7}
 80020c8:	b083      	sub	sp, #12
 80020ca:	af00      	add	r7, sp, #0
 80020cc:	6078      	str	r0, [r7, #4]
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80020d4:	4618      	mov	r0, r3
 80020d6:	370c      	adds	r7, #12
 80020d8:	46bd      	mov	sp, r7
 80020da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020de:	4770      	bx	lr

080020e0 <HAL_ADC_ConfigChannel>:
 80020e0:	b480      	push	{r7}
 80020e2:	b085      	sub	sp, #20
 80020e4:	af00      	add	r7, sp, #0
 80020e6:	6078      	str	r0, [r7, #4]
 80020e8:	6039      	str	r1, [r7, #0]
 80020ea:	2300      	movs	r3, #0
 80020ec:	60bb      	str	r3, [r7, #8]
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80020f4:	2b01      	cmp	r3, #1
 80020f6:	d101      	bne.n	80020fc <HAL_ADC_ConfigChannel+0x1c>
 80020f8:	2302      	movs	r3, #2
 80020fa:	e105      	b.n	8002308 <HAL_ADC_ConfigChannel+0x228>
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	2201      	movs	r2, #1
 8002100:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002104:	683b      	ldr	r3, [r7, #0]
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	2b09      	cmp	r3, #9
 800210a:	d925      	bls.n	8002158 <HAL_ADC_ConfigChannel+0x78>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	68d9      	ldr	r1, [r3, #12]
 8002112:	683b      	ldr	r3, [r7, #0]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	b29b      	uxth	r3, r3
 8002118:	461a      	mov	r2, r3
 800211a:	4613      	mov	r3, r2
 800211c:	005b      	lsls	r3, r3, #1
 800211e:	4413      	add	r3, r2
 8002120:	3b1e      	subs	r3, #30
 8002122:	2207      	movs	r2, #7
 8002124:	fa02 f303 	lsl.w	r3, r2, r3
 8002128:	43da      	mvns	r2, r3
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	400a      	ands	r2, r1
 8002130:	60da      	str	r2, [r3, #12]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	68d9      	ldr	r1, [r3, #12]
 8002138:	683b      	ldr	r3, [r7, #0]
 800213a:	689a      	ldr	r2, [r3, #8]
 800213c:	683b      	ldr	r3, [r7, #0]
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	b29b      	uxth	r3, r3
 8002142:	4618      	mov	r0, r3
 8002144:	4603      	mov	r3, r0
 8002146:	005b      	lsls	r3, r3, #1
 8002148:	4403      	add	r3, r0
 800214a:	3b1e      	subs	r3, #30
 800214c:	409a      	lsls	r2, r3
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	430a      	orrs	r2, r1
 8002154:	60da      	str	r2, [r3, #12]
 8002156:	e022      	b.n	800219e <HAL_ADC_ConfigChannel+0xbe>
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	681b      	ldr	r3, [r3, #0]
 800215c:	6919      	ldr	r1, [r3, #16]
 800215e:	683b      	ldr	r3, [r7, #0]
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	b29b      	uxth	r3, r3
 8002164:	461a      	mov	r2, r3
 8002166:	4613      	mov	r3, r2
 8002168:	005b      	lsls	r3, r3, #1
 800216a:	4413      	add	r3, r2
 800216c:	2207      	movs	r2, #7
 800216e:	fa02 f303 	lsl.w	r3, r2, r3
 8002172:	43da      	mvns	r2, r3
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	400a      	ands	r2, r1
 800217a:	611a      	str	r2, [r3, #16]
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	6919      	ldr	r1, [r3, #16]
 8002182:	683b      	ldr	r3, [r7, #0]
 8002184:	689a      	ldr	r2, [r3, #8]
 8002186:	683b      	ldr	r3, [r7, #0]
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	b29b      	uxth	r3, r3
 800218c:	4618      	mov	r0, r3
 800218e:	4603      	mov	r3, r0
 8002190:	005b      	lsls	r3, r3, #1
 8002192:	4403      	add	r3, r0
 8002194:	409a      	lsls	r2, r3
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	430a      	orrs	r2, r1
 800219c:	611a      	str	r2, [r3, #16]
 800219e:	683b      	ldr	r3, [r7, #0]
 80021a0:	685b      	ldr	r3, [r3, #4]
 80021a2:	2b06      	cmp	r3, #6
 80021a4:	d824      	bhi.n	80021f0 <HAL_ADC_ConfigChannel+0x110>
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80021ac:	683b      	ldr	r3, [r7, #0]
 80021ae:	685a      	ldr	r2, [r3, #4]
 80021b0:	4613      	mov	r3, r2
 80021b2:	009b      	lsls	r3, r3, #2
 80021b4:	4413      	add	r3, r2
 80021b6:	3b05      	subs	r3, #5
 80021b8:	221f      	movs	r2, #31
 80021ba:	fa02 f303 	lsl.w	r3, r2, r3
 80021be:	43da      	mvns	r2, r3
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	400a      	ands	r2, r1
 80021c6:	635a      	str	r2, [r3, #52]	@ 0x34
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80021ce:	683b      	ldr	r3, [r7, #0]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	b29b      	uxth	r3, r3
 80021d4:	4618      	mov	r0, r3
 80021d6:	683b      	ldr	r3, [r7, #0]
 80021d8:	685a      	ldr	r2, [r3, #4]
 80021da:	4613      	mov	r3, r2
 80021dc:	009b      	lsls	r3, r3, #2
 80021de:	4413      	add	r3, r2
 80021e0:	3b05      	subs	r3, #5
 80021e2:	fa00 f203 	lsl.w	r2, r0, r3
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	430a      	orrs	r2, r1
 80021ec:	635a      	str	r2, [r3, #52]	@ 0x34
 80021ee:	e04c      	b.n	800228a <HAL_ADC_ConfigChannel+0x1aa>
 80021f0:	683b      	ldr	r3, [r7, #0]
 80021f2:	685b      	ldr	r3, [r3, #4]
 80021f4:	2b0c      	cmp	r3, #12
 80021f6:	d824      	bhi.n	8002242 <HAL_ADC_ConfigChannel+0x162>
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80021fe:	683b      	ldr	r3, [r7, #0]
 8002200:	685a      	ldr	r2, [r3, #4]
 8002202:	4613      	mov	r3, r2
 8002204:	009b      	lsls	r3, r3, #2
 8002206:	4413      	add	r3, r2
 8002208:	3b23      	subs	r3, #35	@ 0x23
 800220a:	221f      	movs	r2, #31
 800220c:	fa02 f303 	lsl.w	r3, r2, r3
 8002210:	43da      	mvns	r2, r3
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	400a      	ands	r2, r1
 8002218:	631a      	str	r2, [r3, #48]	@ 0x30
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002220:	683b      	ldr	r3, [r7, #0]
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	b29b      	uxth	r3, r3
 8002226:	4618      	mov	r0, r3
 8002228:	683b      	ldr	r3, [r7, #0]
 800222a:	685a      	ldr	r2, [r3, #4]
 800222c:	4613      	mov	r3, r2
 800222e:	009b      	lsls	r3, r3, #2
 8002230:	4413      	add	r3, r2
 8002232:	3b23      	subs	r3, #35	@ 0x23
 8002234:	fa00 f203 	lsl.w	r2, r0, r3
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	430a      	orrs	r2, r1
 800223e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002240:	e023      	b.n	800228a <HAL_ADC_ConfigChannel+0x1aa>
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002248:	683b      	ldr	r3, [r7, #0]
 800224a:	685a      	ldr	r2, [r3, #4]
 800224c:	4613      	mov	r3, r2
 800224e:	009b      	lsls	r3, r3, #2
 8002250:	4413      	add	r3, r2
 8002252:	3b41      	subs	r3, #65	@ 0x41
 8002254:	221f      	movs	r2, #31
 8002256:	fa02 f303 	lsl.w	r3, r2, r3
 800225a:	43da      	mvns	r2, r3
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	400a      	ands	r2, r1
 8002262:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800226a:	683b      	ldr	r3, [r7, #0]
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	b29b      	uxth	r3, r3
 8002270:	4618      	mov	r0, r3
 8002272:	683b      	ldr	r3, [r7, #0]
 8002274:	685a      	ldr	r2, [r3, #4]
 8002276:	4613      	mov	r3, r2
 8002278:	009b      	lsls	r3, r3, #2
 800227a:	4413      	add	r3, r2
 800227c:	3b41      	subs	r3, #65	@ 0x41
 800227e:	fa00 f203 	lsl.w	r2, r0, r3
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	681b      	ldr	r3, [r3, #0]
 8002286:	430a      	orrs	r2, r1
 8002288:	62da      	str	r2, [r3, #44]	@ 0x2c
 800228a:	4b22      	ldr	r3, [pc, #136]	@ (8002314 <HAL_ADC_ConfigChannel+0x234>)
 800228c:	60fb      	str	r3, [r7, #12]
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	4a21      	ldr	r2, [pc, #132]	@ (8002318 <HAL_ADC_ConfigChannel+0x238>)
 8002294:	4293      	cmp	r3, r2
 8002296:	d109      	bne.n	80022ac <HAL_ADC_ConfigChannel+0x1cc>
 8002298:	683b      	ldr	r3, [r7, #0]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	2b12      	cmp	r3, #18
 800229e:	d105      	bne.n	80022ac <HAL_ADC_ConfigChannel+0x1cc>
 80022a0:	68fb      	ldr	r3, [r7, #12]
 80022a2:	685b      	ldr	r3, [r3, #4]
 80022a4:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	605a      	str	r2, [r3, #4]
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	4a19      	ldr	r2, [pc, #100]	@ (8002318 <HAL_ADC_ConfigChannel+0x238>)
 80022b2:	4293      	cmp	r3, r2
 80022b4:	d123      	bne.n	80022fe <HAL_ADC_ConfigChannel+0x21e>
 80022b6:	683b      	ldr	r3, [r7, #0]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	2b10      	cmp	r3, #16
 80022bc:	d003      	beq.n	80022c6 <HAL_ADC_ConfigChannel+0x1e6>
 80022be:	683b      	ldr	r3, [r7, #0]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	2b11      	cmp	r3, #17
 80022c4:	d11b      	bne.n	80022fe <HAL_ADC_ConfigChannel+0x21e>
 80022c6:	68fb      	ldr	r3, [r7, #12]
 80022c8:	685b      	ldr	r3, [r3, #4]
 80022ca:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80022ce:	68fb      	ldr	r3, [r7, #12]
 80022d0:	605a      	str	r2, [r3, #4]
 80022d2:	683b      	ldr	r3, [r7, #0]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	2b10      	cmp	r3, #16
 80022d8:	d111      	bne.n	80022fe <HAL_ADC_ConfigChannel+0x21e>
 80022da:	4b10      	ldr	r3, [pc, #64]	@ (800231c <HAL_ADC_ConfigChannel+0x23c>)
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	4a10      	ldr	r2, [pc, #64]	@ (8002320 <HAL_ADC_ConfigChannel+0x240>)
 80022e0:	fba2 2303 	umull	r2, r3, r2, r3
 80022e4:	0c9a      	lsrs	r2, r3, #18
 80022e6:	4613      	mov	r3, r2
 80022e8:	009b      	lsls	r3, r3, #2
 80022ea:	4413      	add	r3, r2
 80022ec:	005b      	lsls	r3, r3, #1
 80022ee:	60bb      	str	r3, [r7, #8]
 80022f0:	e002      	b.n	80022f8 <HAL_ADC_ConfigChannel+0x218>
 80022f2:	68bb      	ldr	r3, [r7, #8]
 80022f4:	3b01      	subs	r3, #1
 80022f6:	60bb      	str	r3, [r7, #8]
 80022f8:	68bb      	ldr	r3, [r7, #8]
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	d1f9      	bne.n	80022f2 <HAL_ADC_ConfigChannel+0x212>
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	2200      	movs	r2, #0
 8002302:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002306:	2300      	movs	r3, #0
 8002308:	4618      	mov	r0, r3
 800230a:	3714      	adds	r7, #20
 800230c:	46bd      	mov	sp, r7
 800230e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002312:	4770      	bx	lr
 8002314:	40012300 	.word	0x40012300
 8002318:	40012000 	.word	0x40012000
 800231c:	20000008 	.word	0x20000008
 8002320:	431bde83 	.word	0x431bde83

08002324 <ADC_Init>:
 8002324:	b480      	push	{r7}
 8002326:	b085      	sub	sp, #20
 8002328:	af00      	add	r7, sp, #0
 800232a:	6078      	str	r0, [r7, #4]
 800232c:	4b79      	ldr	r3, [pc, #484]	@ (8002514 <ADC_Init+0x1f0>)
 800232e:	60fb      	str	r3, [r7, #12]
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	685b      	ldr	r3, [r3, #4]
 8002334:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8002338:	68fb      	ldr	r3, [r7, #12]
 800233a:	605a      	str	r2, [r3, #4]
 800233c:	68fb      	ldr	r3, [r7, #12]
 800233e:	685a      	ldr	r2, [r3, #4]
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	685b      	ldr	r3, [r3, #4]
 8002344:	431a      	orrs	r2, r3
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	605a      	str	r2, [r3, #4]
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	685a      	ldr	r2, [r3, #4]
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	681b      	ldr	r3, [r3, #0]
 8002354:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002358:	605a      	str	r2, [r3, #4]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	6859      	ldr	r1, [r3, #4]
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	691b      	ldr	r3, [r3, #16]
 8002364:	021a      	lsls	r2, r3, #8
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	430a      	orrs	r2, r1
 800236c:	605a      	str	r2, [r3, #4]
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	685a      	ldr	r2, [r3, #4]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800237c:	605a      	str	r2, [r3, #4]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	6859      	ldr	r1, [r3, #4]
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	689a      	ldr	r2, [r3, #8]
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	430a      	orrs	r2, r1
 800238e:	605a      	str	r2, [r3, #4]
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	689a      	ldr	r2, [r3, #8]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800239e:	609a      	str	r2, [r3, #8]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	6899      	ldr	r1, [r3, #8]
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	68da      	ldr	r2, [r3, #12]
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	430a      	orrs	r2, r1
 80023b0:	609a      	str	r2, [r3, #8]
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80023b6:	4a58      	ldr	r2, [pc, #352]	@ (8002518 <ADC_Init+0x1f4>)
 80023b8:	4293      	cmp	r3, r2
 80023ba:	d022      	beq.n	8002402 <ADC_Init+0xde>
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	689a      	ldr	r2, [r3, #8]
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80023ca:	609a      	str	r2, [r3, #8]
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	6899      	ldr	r1, [r3, #8]
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	430a      	orrs	r2, r1
 80023dc:	609a      	str	r2, [r3, #8]
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	689a      	ldr	r2, [r3, #8]
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80023ec:	609a      	str	r2, [r3, #8]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	6899      	ldr	r1, [r3, #8]
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	430a      	orrs	r2, r1
 80023fe:	609a      	str	r2, [r3, #8]
 8002400:	e00f      	b.n	8002422 <ADC_Init+0xfe>
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	689a      	ldr	r2, [r3, #8]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002410:	609a      	str	r2, [r3, #8]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	689a      	ldr	r2, [r3, #8]
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002420:	609a      	str	r2, [r3, #8]
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	689a      	ldr	r2, [r3, #8]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	f022 0202 	bic.w	r2, r2, #2
 8002430:	609a      	str	r2, [r3, #8]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	6899      	ldr	r1, [r3, #8]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	7e1b      	ldrb	r3, [r3, #24]
 800243c:	005a      	lsls	r2, r3, #1
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	430a      	orrs	r2, r1
 8002444:	609a      	str	r2, [r3, #8]
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	f893 3020 	ldrb.w	r3, [r3, #32]
 800244c:	2b00      	cmp	r3, #0
 800244e:	d01b      	beq.n	8002488 <ADC_Init+0x164>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	685a      	ldr	r2, [r3, #4]
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800245e:	605a      	str	r2, [r3, #4]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	685a      	ldr	r2, [r3, #4]
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800246e:	605a      	str	r2, [r3, #4]
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	6859      	ldr	r1, [r3, #4]
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800247a:	3b01      	subs	r3, #1
 800247c:	035a      	lsls	r2, r3, #13
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	430a      	orrs	r2, r1
 8002484:	605a      	str	r2, [r3, #4]
 8002486:	e007      	b.n	8002498 <ADC_Init+0x174>
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	685a      	ldr	r2, [r3, #4]
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002496:	605a      	str	r2, [r3, #4]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80024a6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	69db      	ldr	r3, [r3, #28]
 80024b2:	3b01      	subs	r3, #1
 80024b4:	051a      	lsls	r2, r3, #20
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	430a      	orrs	r2, r1
 80024bc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	689a      	ldr	r2, [r3, #8]
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80024cc:	609a      	str	r2, [r3, #8]
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	6899      	ldr	r1, [r3, #8]
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80024da:	025a      	lsls	r2, r3, #9
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	430a      	orrs	r2, r1
 80024e2:	609a      	str	r2, [r3, #8]
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	689a      	ldr	r2, [r3, #8]
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80024f2:	609a      	str	r2, [r3, #8]
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	6899      	ldr	r1, [r3, #8]
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	695b      	ldr	r3, [r3, #20]
 80024fe:	029a      	lsls	r2, r3, #10
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	430a      	orrs	r2, r1
 8002506:	609a      	str	r2, [r3, #8]
 8002508:	bf00      	nop
 800250a:	3714      	adds	r7, #20
 800250c:	46bd      	mov	sp, r7
 800250e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002512:	4770      	bx	lr
 8002514:	40012300 	.word	0x40012300
 8002518:	0f000001 	.word	0x0f000001

0800251c <HAL_CAN_Init>:
 800251c:	b580      	push	{r7, lr}
 800251e:	b084      	sub	sp, #16
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	2b00      	cmp	r3, #0
 8002528:	d101      	bne.n	800252e <HAL_CAN_Init+0x12>
 800252a:	2301      	movs	r3, #1
 800252c:	e0ed      	b.n	800270a <HAL_CAN_Init+0x1ee>
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002534:	b2db      	uxtb	r3, r3
 8002536:	2b00      	cmp	r3, #0
 8002538:	d102      	bne.n	8002540 <HAL_CAN_Init+0x24>
 800253a:	6878      	ldr	r0, [r7, #4]
 800253c:	f7ff f9b6 	bl	80018ac <HAL_CAN_MspInit>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	681a      	ldr	r2, [r3, #0]
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	f042 0201 	orr.w	r2, r2, #1
 800254e:	601a      	str	r2, [r3, #0]
 8002550:	f7ff fbe8 	bl	8001d24 <HAL_GetTick>
 8002554:	60f8      	str	r0, [r7, #12]
 8002556:	e012      	b.n	800257e <HAL_CAN_Init+0x62>
 8002558:	f7ff fbe4 	bl	8001d24 <HAL_GetTick>
 800255c:	4602      	mov	r2, r0
 800255e:	68fb      	ldr	r3, [r7, #12]
 8002560:	1ad3      	subs	r3, r2, r3
 8002562:	2b0a      	cmp	r3, #10
 8002564:	d90b      	bls.n	800257e <HAL_CAN_Init+0x62>
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800256a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	625a      	str	r2, [r3, #36]	@ 0x24
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2205      	movs	r2, #5
 8002576:	f883 2020 	strb.w	r2, [r3, #32]
 800257a:	2301      	movs	r3, #1
 800257c:	e0c5      	b.n	800270a <HAL_CAN_Init+0x1ee>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	685b      	ldr	r3, [r3, #4]
 8002584:	f003 0301 	and.w	r3, r3, #1
 8002588:	2b00      	cmp	r3, #0
 800258a:	d0e5      	beq.n	8002558 <HAL_CAN_Init+0x3c>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	681a      	ldr	r2, [r3, #0]
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	f022 0202 	bic.w	r2, r2, #2
 800259a:	601a      	str	r2, [r3, #0]
 800259c:	f7ff fbc2 	bl	8001d24 <HAL_GetTick>
 80025a0:	60f8      	str	r0, [r7, #12]
 80025a2:	e012      	b.n	80025ca <HAL_CAN_Init+0xae>
 80025a4:	f7ff fbbe 	bl	8001d24 <HAL_GetTick>
 80025a8:	4602      	mov	r2, r0
 80025aa:	68fb      	ldr	r3, [r7, #12]
 80025ac:	1ad3      	subs	r3, r2, r3
 80025ae:	2b0a      	cmp	r3, #10
 80025b0:	d90b      	bls.n	80025ca <HAL_CAN_Init+0xae>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025b6:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	625a      	str	r2, [r3, #36]	@ 0x24
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	2205      	movs	r2, #5
 80025c2:	f883 2020 	strb.w	r2, [r3, #32]
 80025c6:	2301      	movs	r3, #1
 80025c8:	e09f      	b.n	800270a <HAL_CAN_Init+0x1ee>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	685b      	ldr	r3, [r3, #4]
 80025d0:	f003 0302 	and.w	r3, r3, #2
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d1e5      	bne.n	80025a4 <HAL_CAN_Init+0x88>
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	7e1b      	ldrb	r3, [r3, #24]
 80025dc:	2b01      	cmp	r3, #1
 80025de:	d108      	bne.n	80025f2 <HAL_CAN_Init+0xd6>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	681a      	ldr	r2, [r3, #0]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80025ee:	601a      	str	r2, [r3, #0]
 80025f0:	e007      	b.n	8002602 <HAL_CAN_Init+0xe6>
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	681a      	ldr	r2, [r3, #0]
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002600:	601a      	str	r2, [r3, #0]
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	7e5b      	ldrb	r3, [r3, #25]
 8002606:	2b01      	cmp	r3, #1
 8002608:	d108      	bne.n	800261c <HAL_CAN_Init+0x100>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	681a      	ldr	r2, [r3, #0]
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	681b      	ldr	r3, [r3, #0]
 8002614:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002618:	601a      	str	r2, [r3, #0]
 800261a:	e007      	b.n	800262c <HAL_CAN_Init+0x110>
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	681a      	ldr	r2, [r3, #0]
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	681b      	ldr	r3, [r3, #0]
 8002626:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800262a:	601a      	str	r2, [r3, #0]
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	7e9b      	ldrb	r3, [r3, #26]
 8002630:	2b01      	cmp	r3, #1
 8002632:	d108      	bne.n	8002646 <HAL_CAN_Init+0x12a>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	681a      	ldr	r2, [r3, #0]
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	f042 0220 	orr.w	r2, r2, #32
 8002642:	601a      	str	r2, [r3, #0]
 8002644:	e007      	b.n	8002656 <HAL_CAN_Init+0x13a>
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	681a      	ldr	r2, [r3, #0]
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f022 0220 	bic.w	r2, r2, #32
 8002654:	601a      	str	r2, [r3, #0]
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	7edb      	ldrb	r3, [r3, #27]
 800265a:	2b01      	cmp	r3, #1
 800265c:	d108      	bne.n	8002670 <HAL_CAN_Init+0x154>
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	681a      	ldr	r2, [r3, #0]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	f022 0210 	bic.w	r2, r2, #16
 800266c:	601a      	str	r2, [r3, #0]
 800266e:	e007      	b.n	8002680 <HAL_CAN_Init+0x164>
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	681a      	ldr	r2, [r3, #0]
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	f042 0210 	orr.w	r2, r2, #16
 800267e:	601a      	str	r2, [r3, #0]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	7f1b      	ldrb	r3, [r3, #28]
 8002684:	2b01      	cmp	r3, #1
 8002686:	d108      	bne.n	800269a <HAL_CAN_Init+0x17e>
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	681a      	ldr	r2, [r3, #0]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	f042 0208 	orr.w	r2, r2, #8
 8002696:	601a      	str	r2, [r3, #0]
 8002698:	e007      	b.n	80026aa <HAL_CAN_Init+0x18e>
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	681a      	ldr	r2, [r3, #0]
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	f022 0208 	bic.w	r2, r2, #8
 80026a8:	601a      	str	r2, [r3, #0]
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	7f5b      	ldrb	r3, [r3, #29]
 80026ae:	2b01      	cmp	r3, #1
 80026b0:	d108      	bne.n	80026c4 <HAL_CAN_Init+0x1a8>
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	681a      	ldr	r2, [r3, #0]
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	f042 0204 	orr.w	r2, r2, #4
 80026c0:	601a      	str	r2, [r3, #0]
 80026c2:	e007      	b.n	80026d4 <HAL_CAN_Init+0x1b8>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	681a      	ldr	r2, [r3, #0]
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	f022 0204 	bic.w	r2, r2, #4
 80026d2:	601a      	str	r2, [r3, #0]
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	689a      	ldr	r2, [r3, #8]
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	68db      	ldr	r3, [r3, #12]
 80026dc:	431a      	orrs	r2, r3
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	691b      	ldr	r3, [r3, #16]
 80026e2:	431a      	orrs	r2, r3
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	695b      	ldr	r3, [r3, #20]
 80026e8:	ea42 0103 	orr.w	r1, r2, r3
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	685b      	ldr	r3, [r3, #4]
 80026f0:	1e5a      	subs	r2, r3, #1
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	430a      	orrs	r2, r1
 80026f8:	61da      	str	r2, [r3, #28]
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	2200      	movs	r2, #0
 80026fe:	625a      	str	r2, [r3, #36]	@ 0x24
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	2201      	movs	r2, #1
 8002704:	f883 2020 	strb.w	r2, [r3, #32]
 8002708:	2300      	movs	r3, #0
 800270a:	4618      	mov	r0, r3
 800270c:	3710      	adds	r7, #16
 800270e:	46bd      	mov	sp, r7
 8002710:	bd80      	pop	{r7, pc}
	...

08002714 <HAL_CAN_ConfigFilter>:
 8002714:	b480      	push	{r7}
 8002716:	b087      	sub	sp, #28
 8002718:	af00      	add	r7, sp, #0
 800271a:	6078      	str	r0, [r7, #4]
 800271c:	6039      	str	r1, [r7, #0]
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	617b      	str	r3, [r7, #20]
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	f893 3020 	ldrb.w	r3, [r3, #32]
 800272a:	74fb      	strb	r3, [r7, #19]
 800272c:	7cfb      	ldrb	r3, [r7, #19]
 800272e:	2b01      	cmp	r3, #1
 8002730:	d003      	beq.n	800273a <HAL_CAN_ConfigFilter+0x26>
 8002732:	7cfb      	ldrb	r3, [r7, #19]
 8002734:	2b02      	cmp	r3, #2
 8002736:	f040 80be 	bne.w	80028b6 <HAL_CAN_ConfigFilter+0x1a2>
 800273a:	4b65      	ldr	r3, [pc, #404]	@ (80028d0 <HAL_CAN_ConfigFilter+0x1bc>)
 800273c:	617b      	str	r3, [r7, #20]
 800273e:	697b      	ldr	r3, [r7, #20]
 8002740:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8002744:	f043 0201 	orr.w	r2, r3, #1
 8002748:	697b      	ldr	r3, [r7, #20]
 800274a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800274e:	697b      	ldr	r3, [r7, #20]
 8002750:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8002754:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 8002758:	697b      	ldr	r3, [r7, #20]
 800275a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800275e:	697b      	ldr	r3, [r7, #20]
 8002760:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8002764:	683b      	ldr	r3, [r7, #0]
 8002766:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002768:	021b      	lsls	r3, r3, #8
 800276a:	431a      	orrs	r2, r3
 800276c:	697b      	ldr	r3, [r7, #20]
 800276e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8002772:	683b      	ldr	r3, [r7, #0]
 8002774:	695b      	ldr	r3, [r3, #20]
 8002776:	f003 031f 	and.w	r3, r3, #31
 800277a:	2201      	movs	r2, #1
 800277c:	fa02 f303 	lsl.w	r3, r2, r3
 8002780:	60fb      	str	r3, [r7, #12]
 8002782:	697b      	ldr	r3, [r7, #20]
 8002784:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	43db      	mvns	r3, r3
 800278c:	401a      	ands	r2, r3
 800278e:	697b      	ldr	r3, [r7, #20]
 8002790:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8002794:	683b      	ldr	r3, [r7, #0]
 8002796:	69db      	ldr	r3, [r3, #28]
 8002798:	2b00      	cmp	r3, #0
 800279a:	d123      	bne.n	80027e4 <HAL_CAN_ConfigFilter+0xd0>
 800279c:	697b      	ldr	r3, [r7, #20]
 800279e:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 80027a2:	68fb      	ldr	r3, [r7, #12]
 80027a4:	43db      	mvns	r3, r3
 80027a6:	401a      	ands	r2, r3
 80027a8:	697b      	ldr	r3, [r7, #20]
 80027aa:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 80027ae:	683b      	ldr	r3, [r7, #0]
 80027b0:	68db      	ldr	r3, [r3, #12]
 80027b2:	0419      	lsls	r1, r3, #16
 80027b4:	683b      	ldr	r3, [r7, #0]
 80027b6:	685b      	ldr	r3, [r3, #4]
 80027b8:	b29b      	uxth	r3, r3
 80027ba:	683a      	ldr	r2, [r7, #0]
 80027bc:	6952      	ldr	r2, [r2, #20]
 80027be:	4319      	orrs	r1, r3
 80027c0:	697b      	ldr	r3, [r7, #20]
 80027c2:	3248      	adds	r2, #72	@ 0x48
 80027c4:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 80027c8:	683b      	ldr	r3, [r7, #0]
 80027ca:	689b      	ldr	r3, [r3, #8]
 80027cc:	0419      	lsls	r1, r3, #16
 80027ce:	683b      	ldr	r3, [r7, #0]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	b29a      	uxth	r2, r3
 80027d4:	683b      	ldr	r3, [r7, #0]
 80027d6:	695b      	ldr	r3, [r3, #20]
 80027d8:	430a      	orrs	r2, r1
 80027da:	6979      	ldr	r1, [r7, #20]
 80027dc:	3348      	adds	r3, #72	@ 0x48
 80027de:	00db      	lsls	r3, r3, #3
 80027e0:	440b      	add	r3, r1
 80027e2:	605a      	str	r2, [r3, #4]
 80027e4:	683b      	ldr	r3, [r7, #0]
 80027e6:	69db      	ldr	r3, [r3, #28]
 80027e8:	2b01      	cmp	r3, #1
 80027ea:	d122      	bne.n	8002832 <HAL_CAN_ConfigFilter+0x11e>
 80027ec:	697b      	ldr	r3, [r7, #20]
 80027ee:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	431a      	orrs	r2, r3
 80027f6:	697b      	ldr	r3, [r7, #20]
 80027f8:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	0419      	lsls	r1, r3, #16
 8002802:	683b      	ldr	r3, [r7, #0]
 8002804:	685b      	ldr	r3, [r3, #4]
 8002806:	b29b      	uxth	r3, r3
 8002808:	683a      	ldr	r2, [r7, #0]
 800280a:	6952      	ldr	r2, [r2, #20]
 800280c:	4319      	orrs	r1, r3
 800280e:	697b      	ldr	r3, [r7, #20]
 8002810:	3248      	adds	r2, #72	@ 0x48
 8002812:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8002816:	683b      	ldr	r3, [r7, #0]
 8002818:	689b      	ldr	r3, [r3, #8]
 800281a:	0419      	lsls	r1, r3, #16
 800281c:	683b      	ldr	r3, [r7, #0]
 800281e:	68db      	ldr	r3, [r3, #12]
 8002820:	b29a      	uxth	r2, r3
 8002822:	683b      	ldr	r3, [r7, #0]
 8002824:	695b      	ldr	r3, [r3, #20]
 8002826:	430a      	orrs	r2, r1
 8002828:	6979      	ldr	r1, [r7, #20]
 800282a:	3348      	adds	r3, #72	@ 0x48
 800282c:	00db      	lsls	r3, r3, #3
 800282e:	440b      	add	r3, r1
 8002830:	605a      	str	r2, [r3, #4]
 8002832:	683b      	ldr	r3, [r7, #0]
 8002834:	699b      	ldr	r3, [r3, #24]
 8002836:	2b00      	cmp	r3, #0
 8002838:	d109      	bne.n	800284e <HAL_CAN_ConfigFilter+0x13a>
 800283a:	697b      	ldr	r3, [r7, #20]
 800283c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	43db      	mvns	r3, r3
 8002844:	401a      	ands	r2, r3
 8002846:	697b      	ldr	r3, [r7, #20]
 8002848:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800284c:	e007      	b.n	800285e <HAL_CAN_ConfigFilter+0x14a>
 800284e:	697b      	ldr	r3, [r7, #20]
 8002850:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	431a      	orrs	r2, r3
 8002858:	697b      	ldr	r3, [r7, #20]
 800285a:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800285e:	683b      	ldr	r3, [r7, #0]
 8002860:	691b      	ldr	r3, [r3, #16]
 8002862:	2b00      	cmp	r3, #0
 8002864:	d109      	bne.n	800287a <HAL_CAN_ConfigFilter+0x166>
 8002866:	697b      	ldr	r3, [r7, #20]
 8002868:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800286c:	68fb      	ldr	r3, [r7, #12]
 800286e:	43db      	mvns	r3, r3
 8002870:	401a      	ands	r2, r3
 8002872:	697b      	ldr	r3, [r7, #20]
 8002874:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8002878:	e007      	b.n	800288a <HAL_CAN_ConfigFilter+0x176>
 800287a:	697b      	ldr	r3, [r7, #20]
 800287c:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8002880:	68fb      	ldr	r3, [r7, #12]
 8002882:	431a      	orrs	r2, r3
 8002884:	697b      	ldr	r3, [r7, #20]
 8002886:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	6a1b      	ldr	r3, [r3, #32]
 800288e:	2b01      	cmp	r3, #1
 8002890:	d107      	bne.n	80028a2 <HAL_CAN_ConfigFilter+0x18e>
 8002892:	697b      	ldr	r3, [r7, #20]
 8002894:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8002898:	68fb      	ldr	r3, [r7, #12]
 800289a:	431a      	orrs	r2, r3
 800289c:	697b      	ldr	r3, [r7, #20]
 800289e:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 80028a2:	697b      	ldr	r3, [r7, #20]
 80028a4:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80028a8:	f023 0201 	bic.w	r2, r3, #1
 80028ac:	697b      	ldr	r3, [r7, #20]
 80028ae:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80028b2:	2300      	movs	r3, #0
 80028b4:	e006      	b.n	80028c4 <HAL_CAN_ConfigFilter+0x1b0>
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028ba:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	625a      	str	r2, [r3, #36]	@ 0x24
 80028c2:	2301      	movs	r3, #1
 80028c4:	4618      	mov	r0, r3
 80028c6:	371c      	adds	r7, #28
 80028c8:	46bd      	mov	sp, r7
 80028ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ce:	4770      	bx	lr
 80028d0:	40006400 	.word	0x40006400

080028d4 <HAL_CAN_Start>:
 80028d4:	b580      	push	{r7, lr}
 80028d6:	b084      	sub	sp, #16
 80028d8:	af00      	add	r7, sp, #0
 80028da:	6078      	str	r0, [r7, #4]
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	f893 3020 	ldrb.w	r3, [r3, #32]
 80028e2:	b2db      	uxtb	r3, r3
 80028e4:	2b01      	cmp	r3, #1
 80028e6:	d12e      	bne.n	8002946 <HAL_CAN_Start+0x72>
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	2202      	movs	r2, #2
 80028ec:	f883 2020 	strb.w	r2, [r3, #32]
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	681a      	ldr	r2, [r3, #0]
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	f022 0201 	bic.w	r2, r2, #1
 80028fe:	601a      	str	r2, [r3, #0]
 8002900:	f7ff fa10 	bl	8001d24 <HAL_GetTick>
 8002904:	60f8      	str	r0, [r7, #12]
 8002906:	e012      	b.n	800292e <HAL_CAN_Start+0x5a>
 8002908:	f7ff fa0c 	bl	8001d24 <HAL_GetTick>
 800290c:	4602      	mov	r2, r0
 800290e:	68fb      	ldr	r3, [r7, #12]
 8002910:	1ad3      	subs	r3, r2, r3
 8002912:	2b0a      	cmp	r3, #10
 8002914:	d90b      	bls.n	800292e <HAL_CAN_Start+0x5a>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800291a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	625a      	str	r2, [r3, #36]	@ 0x24
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	2205      	movs	r2, #5
 8002926:	f883 2020 	strb.w	r2, [r3, #32]
 800292a:	2301      	movs	r3, #1
 800292c:	e012      	b.n	8002954 <HAL_CAN_Start+0x80>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	685b      	ldr	r3, [r3, #4]
 8002934:	f003 0301 	and.w	r3, r3, #1
 8002938:	2b00      	cmp	r3, #0
 800293a:	d1e5      	bne.n	8002908 <HAL_CAN_Start+0x34>
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	2200      	movs	r2, #0
 8002940:	625a      	str	r2, [r3, #36]	@ 0x24
 8002942:	2300      	movs	r3, #0
 8002944:	e006      	b.n	8002954 <HAL_CAN_Start+0x80>
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800294a:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	625a      	str	r2, [r3, #36]	@ 0x24
 8002952:	2301      	movs	r3, #1
 8002954:	4618      	mov	r0, r3
 8002956:	3710      	adds	r7, #16
 8002958:	46bd      	mov	sp, r7
 800295a:	bd80      	pop	{r7, pc}

0800295c <HAL_CAN_AddTxMessage>:
 800295c:	b480      	push	{r7}
 800295e:	b089      	sub	sp, #36	@ 0x24
 8002960:	af00      	add	r7, sp, #0
 8002962:	60f8      	str	r0, [r7, #12]
 8002964:	60b9      	str	r1, [r7, #8]
 8002966:	607a      	str	r2, [r7, #4]
 8002968:	603b      	str	r3, [r7, #0]
 800296a:	68fb      	ldr	r3, [r7, #12]
 800296c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002970:	77fb      	strb	r3, [r7, #31]
 8002972:	68fb      	ldr	r3, [r7, #12]
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	689b      	ldr	r3, [r3, #8]
 8002978:	61bb      	str	r3, [r7, #24]
 800297a:	7ffb      	ldrb	r3, [r7, #31]
 800297c:	2b01      	cmp	r3, #1
 800297e:	d003      	beq.n	8002988 <HAL_CAN_AddTxMessage+0x2c>
 8002980:	7ffb      	ldrb	r3, [r7, #31]
 8002982:	2b02      	cmp	r3, #2
 8002984:	f040 80b8 	bne.w	8002af8 <HAL_CAN_AddTxMessage+0x19c>
 8002988:	69bb      	ldr	r3, [r7, #24]
 800298a:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800298e:	2b00      	cmp	r3, #0
 8002990:	d10a      	bne.n	80029a8 <HAL_CAN_AddTxMessage+0x4c>
 8002992:	69bb      	ldr	r3, [r7, #24]
 8002994:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002998:	2b00      	cmp	r3, #0
 800299a:	d105      	bne.n	80029a8 <HAL_CAN_AddTxMessage+0x4c>
 800299c:	69bb      	ldr	r3, [r7, #24]
 800299e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	f000 80a0 	beq.w	8002ae8 <HAL_CAN_AddTxMessage+0x18c>
 80029a8:	69bb      	ldr	r3, [r7, #24]
 80029aa:	0e1b      	lsrs	r3, r3, #24
 80029ac:	f003 0303 	and.w	r3, r3, #3
 80029b0:	617b      	str	r3, [r7, #20]
 80029b2:	697b      	ldr	r3, [r7, #20]
 80029b4:	2b02      	cmp	r3, #2
 80029b6:	d907      	bls.n	80029c8 <HAL_CAN_AddTxMessage+0x6c>
 80029b8:	68fb      	ldr	r3, [r7, #12]
 80029ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029bc:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80029c0:	68fb      	ldr	r3, [r7, #12]
 80029c2:	625a      	str	r2, [r3, #36]	@ 0x24
 80029c4:	2301      	movs	r3, #1
 80029c6:	e09e      	b.n	8002b06 <HAL_CAN_AddTxMessage+0x1aa>
 80029c8:	2201      	movs	r2, #1
 80029ca:	697b      	ldr	r3, [r7, #20]
 80029cc:	409a      	lsls	r2, r3
 80029ce:	683b      	ldr	r3, [r7, #0]
 80029d0:	601a      	str	r2, [r3, #0]
 80029d2:	68bb      	ldr	r3, [r7, #8]
 80029d4:	689b      	ldr	r3, [r3, #8]
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d10d      	bne.n	80029f6 <HAL_CAN_AddTxMessage+0x9a>
 80029da:	68bb      	ldr	r3, [r7, #8]
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	055a      	lsls	r2, r3, #21
 80029e0:	68bb      	ldr	r3, [r7, #8]
 80029e2:	68db      	ldr	r3, [r3, #12]
 80029e4:	68f9      	ldr	r1, [r7, #12]
 80029e6:	6809      	ldr	r1, [r1, #0]
 80029e8:	431a      	orrs	r2, r3
 80029ea:	697b      	ldr	r3, [r7, #20]
 80029ec:	3318      	adds	r3, #24
 80029ee:	011b      	lsls	r3, r3, #4
 80029f0:	440b      	add	r3, r1
 80029f2:	601a      	str	r2, [r3, #0]
 80029f4:	e00f      	b.n	8002a16 <HAL_CAN_AddTxMessage+0xba>
 80029f6:	68bb      	ldr	r3, [r7, #8]
 80029f8:	685b      	ldr	r3, [r3, #4]
 80029fa:	00da      	lsls	r2, r3, #3
 80029fc:	68bb      	ldr	r3, [r7, #8]
 80029fe:	689b      	ldr	r3, [r3, #8]
 8002a00:	431a      	orrs	r2, r3
 8002a02:	68bb      	ldr	r3, [r7, #8]
 8002a04:	68db      	ldr	r3, [r3, #12]
 8002a06:	68f9      	ldr	r1, [r7, #12]
 8002a08:	6809      	ldr	r1, [r1, #0]
 8002a0a:	431a      	orrs	r2, r3
 8002a0c:	697b      	ldr	r3, [r7, #20]
 8002a0e:	3318      	adds	r3, #24
 8002a10:	011b      	lsls	r3, r3, #4
 8002a12:	440b      	add	r3, r1
 8002a14:	601a      	str	r2, [r3, #0]
 8002a16:	68fb      	ldr	r3, [r7, #12]
 8002a18:	6819      	ldr	r1, [r3, #0]
 8002a1a:	68bb      	ldr	r3, [r7, #8]
 8002a1c:	691a      	ldr	r2, [r3, #16]
 8002a1e:	697b      	ldr	r3, [r7, #20]
 8002a20:	3318      	adds	r3, #24
 8002a22:	011b      	lsls	r3, r3, #4
 8002a24:	440b      	add	r3, r1
 8002a26:	3304      	adds	r3, #4
 8002a28:	601a      	str	r2, [r3, #0]
 8002a2a:	68bb      	ldr	r3, [r7, #8]
 8002a2c:	7d1b      	ldrb	r3, [r3, #20]
 8002a2e:	2b01      	cmp	r3, #1
 8002a30:	d111      	bne.n	8002a56 <HAL_CAN_AddTxMessage+0xfa>
 8002a32:	68fb      	ldr	r3, [r7, #12]
 8002a34:	681a      	ldr	r2, [r3, #0]
 8002a36:	697b      	ldr	r3, [r7, #20]
 8002a38:	3318      	adds	r3, #24
 8002a3a:	011b      	lsls	r3, r3, #4
 8002a3c:	4413      	add	r3, r2
 8002a3e:	3304      	adds	r3, #4
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	68fa      	ldr	r2, [r7, #12]
 8002a44:	6811      	ldr	r1, [r2, #0]
 8002a46:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002a4a:	697b      	ldr	r3, [r7, #20]
 8002a4c:	3318      	adds	r3, #24
 8002a4e:	011b      	lsls	r3, r3, #4
 8002a50:	440b      	add	r3, r1
 8002a52:	3304      	adds	r3, #4
 8002a54:	601a      	str	r2, [r3, #0]
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	3307      	adds	r3, #7
 8002a5a:	781b      	ldrb	r3, [r3, #0]
 8002a5c:	061a      	lsls	r2, r3, #24
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	3306      	adds	r3, #6
 8002a62:	781b      	ldrb	r3, [r3, #0]
 8002a64:	041b      	lsls	r3, r3, #16
 8002a66:	431a      	orrs	r2, r3
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	3305      	adds	r3, #5
 8002a6c:	781b      	ldrb	r3, [r3, #0]
 8002a6e:	021b      	lsls	r3, r3, #8
 8002a70:	4313      	orrs	r3, r2
 8002a72:	687a      	ldr	r2, [r7, #4]
 8002a74:	3204      	adds	r2, #4
 8002a76:	7812      	ldrb	r2, [r2, #0]
 8002a78:	4610      	mov	r0, r2
 8002a7a:	68fa      	ldr	r2, [r7, #12]
 8002a7c:	6811      	ldr	r1, [r2, #0]
 8002a7e:	ea43 0200 	orr.w	r2, r3, r0
 8002a82:	697b      	ldr	r3, [r7, #20]
 8002a84:	011b      	lsls	r3, r3, #4
 8002a86:	440b      	add	r3, r1
 8002a88:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8002a8c:	601a      	str	r2, [r3, #0]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	3303      	adds	r3, #3
 8002a92:	781b      	ldrb	r3, [r3, #0]
 8002a94:	061a      	lsls	r2, r3, #24
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	3302      	adds	r3, #2
 8002a9a:	781b      	ldrb	r3, [r3, #0]
 8002a9c:	041b      	lsls	r3, r3, #16
 8002a9e:	431a      	orrs	r2, r3
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	3301      	adds	r3, #1
 8002aa4:	781b      	ldrb	r3, [r3, #0]
 8002aa6:	021b      	lsls	r3, r3, #8
 8002aa8:	4313      	orrs	r3, r2
 8002aaa:	687a      	ldr	r2, [r7, #4]
 8002aac:	7812      	ldrb	r2, [r2, #0]
 8002aae:	4610      	mov	r0, r2
 8002ab0:	68fa      	ldr	r2, [r7, #12]
 8002ab2:	6811      	ldr	r1, [r2, #0]
 8002ab4:	ea43 0200 	orr.w	r2, r3, r0
 8002ab8:	697b      	ldr	r3, [r7, #20]
 8002aba:	011b      	lsls	r3, r3, #4
 8002abc:	440b      	add	r3, r1
 8002abe:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8002ac2:	601a      	str	r2, [r3, #0]
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	681a      	ldr	r2, [r3, #0]
 8002ac8:	697b      	ldr	r3, [r7, #20]
 8002aca:	3318      	adds	r3, #24
 8002acc:	011b      	lsls	r3, r3, #4
 8002ace:	4413      	add	r3, r2
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	68fa      	ldr	r2, [r7, #12]
 8002ad4:	6811      	ldr	r1, [r2, #0]
 8002ad6:	f043 0201 	orr.w	r2, r3, #1
 8002ada:	697b      	ldr	r3, [r7, #20]
 8002adc:	3318      	adds	r3, #24
 8002ade:	011b      	lsls	r3, r3, #4
 8002ae0:	440b      	add	r3, r1
 8002ae2:	601a      	str	r2, [r3, #0]
 8002ae4:	2300      	movs	r3, #0
 8002ae6:	e00e      	b.n	8002b06 <HAL_CAN_AddTxMessage+0x1aa>
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002aec:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002af0:	68fb      	ldr	r3, [r7, #12]
 8002af2:	625a      	str	r2, [r3, #36]	@ 0x24
 8002af4:	2301      	movs	r3, #1
 8002af6:	e006      	b.n	8002b06 <HAL_CAN_AddTxMessage+0x1aa>
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002afc:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002b00:	68fb      	ldr	r3, [r7, #12]
 8002b02:	625a      	str	r2, [r3, #36]	@ 0x24
 8002b04:	2301      	movs	r3, #1
 8002b06:	4618      	mov	r0, r3
 8002b08:	3724      	adds	r7, #36	@ 0x24
 8002b0a:	46bd      	mov	sp, r7
 8002b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b10:	4770      	bx	lr

08002b12 <HAL_CAN_GetRxMessage>:
 8002b12:	b480      	push	{r7}
 8002b14:	b087      	sub	sp, #28
 8002b16:	af00      	add	r7, sp, #0
 8002b18:	60f8      	str	r0, [r7, #12]
 8002b1a:	60b9      	str	r1, [r7, #8]
 8002b1c:	607a      	str	r2, [r7, #4]
 8002b1e:	603b      	str	r3, [r7, #0]
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002b26:	75fb      	strb	r3, [r7, #23]
 8002b28:	7dfb      	ldrb	r3, [r7, #23]
 8002b2a:	2b01      	cmp	r3, #1
 8002b2c:	d003      	beq.n	8002b36 <HAL_CAN_GetRxMessage+0x24>
 8002b2e:	7dfb      	ldrb	r3, [r7, #23]
 8002b30:	2b02      	cmp	r3, #2
 8002b32:	f040 80f3 	bne.w	8002d1c <HAL_CAN_GetRxMessage+0x20a>
 8002b36:	68bb      	ldr	r3, [r7, #8]
 8002b38:	2b00      	cmp	r3, #0
 8002b3a:	d10e      	bne.n	8002b5a <HAL_CAN_GetRxMessage+0x48>
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	68db      	ldr	r3, [r3, #12]
 8002b42:	f003 0303 	and.w	r3, r3, #3
 8002b46:	2b00      	cmp	r3, #0
 8002b48:	d116      	bne.n	8002b78 <HAL_CAN_GetRxMessage+0x66>
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b4e:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	625a      	str	r2, [r3, #36]	@ 0x24
 8002b56:	2301      	movs	r3, #1
 8002b58:	e0e7      	b.n	8002d2a <HAL_CAN_GetRxMessage+0x218>
 8002b5a:	68fb      	ldr	r3, [r7, #12]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	691b      	ldr	r3, [r3, #16]
 8002b60:	f003 0303 	and.w	r3, r3, #3
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d107      	bne.n	8002b78 <HAL_CAN_GetRxMessage+0x66>
 8002b68:	68fb      	ldr	r3, [r7, #12]
 8002b6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b6c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	625a      	str	r2, [r3, #36]	@ 0x24
 8002b74:	2301      	movs	r3, #1
 8002b76:	e0d8      	b.n	8002d2a <HAL_CAN_GetRxMessage+0x218>
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	681a      	ldr	r2, [r3, #0]
 8002b7c:	68bb      	ldr	r3, [r7, #8]
 8002b7e:	331b      	adds	r3, #27
 8002b80:	011b      	lsls	r3, r3, #4
 8002b82:	4413      	add	r3, r2
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	f003 0204 	and.w	r2, r3, #4
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	609a      	str	r2, [r3, #8]
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	689b      	ldr	r3, [r3, #8]
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d10c      	bne.n	8002bb0 <HAL_CAN_GetRxMessage+0x9e>
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	681a      	ldr	r2, [r3, #0]
 8002b9a:	68bb      	ldr	r3, [r7, #8]
 8002b9c:	331b      	adds	r3, #27
 8002b9e:	011b      	lsls	r3, r3, #4
 8002ba0:	4413      	add	r3, r2
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	0d5b      	lsrs	r3, r3, #21
 8002ba6:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	601a      	str	r2, [r3, #0]
 8002bae:	e00b      	b.n	8002bc8 <HAL_CAN_GetRxMessage+0xb6>
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	681a      	ldr	r2, [r3, #0]
 8002bb4:	68bb      	ldr	r3, [r7, #8]
 8002bb6:	331b      	adds	r3, #27
 8002bb8:	011b      	lsls	r3, r3, #4
 8002bba:	4413      	add	r3, r2
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	08db      	lsrs	r3, r3, #3
 8002bc0:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	605a      	str	r2, [r3, #4]
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	681a      	ldr	r2, [r3, #0]
 8002bcc:	68bb      	ldr	r3, [r7, #8]
 8002bce:	331b      	adds	r3, #27
 8002bd0:	011b      	lsls	r3, r3, #4
 8002bd2:	4413      	add	r3, r2
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	f003 0202 	and.w	r2, r3, #2
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	60da      	str	r2, [r3, #12]
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	681a      	ldr	r2, [r3, #0]
 8002be2:	68bb      	ldr	r3, [r7, #8]
 8002be4:	331b      	adds	r3, #27
 8002be6:	011b      	lsls	r3, r3, #4
 8002be8:	4413      	add	r3, r2
 8002bea:	3304      	adds	r3, #4
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	f003 020f 	and.w	r2, r3, #15
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	611a      	str	r2, [r3, #16]
 8002bf6:	68fb      	ldr	r3, [r7, #12]
 8002bf8:	681a      	ldr	r2, [r3, #0]
 8002bfa:	68bb      	ldr	r3, [r7, #8]
 8002bfc:	331b      	adds	r3, #27
 8002bfe:	011b      	lsls	r3, r3, #4
 8002c00:	4413      	add	r3, r2
 8002c02:	3304      	adds	r3, #4
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	0a1b      	lsrs	r3, r3, #8
 8002c08:	b2da      	uxtb	r2, r3
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	619a      	str	r2, [r3, #24]
 8002c0e:	68fb      	ldr	r3, [r7, #12]
 8002c10:	681a      	ldr	r2, [r3, #0]
 8002c12:	68bb      	ldr	r3, [r7, #8]
 8002c14:	331b      	adds	r3, #27
 8002c16:	011b      	lsls	r3, r3, #4
 8002c18:	4413      	add	r3, r2
 8002c1a:	3304      	adds	r3, #4
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	0c1b      	lsrs	r3, r3, #16
 8002c20:	b29a      	uxth	r2, r3
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	615a      	str	r2, [r3, #20]
 8002c26:	68fb      	ldr	r3, [r7, #12]
 8002c28:	681a      	ldr	r2, [r3, #0]
 8002c2a:	68bb      	ldr	r3, [r7, #8]
 8002c2c:	011b      	lsls	r3, r3, #4
 8002c2e:	4413      	add	r3, r2
 8002c30:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	b2da      	uxtb	r2, r3
 8002c38:	683b      	ldr	r3, [r7, #0]
 8002c3a:	701a      	strb	r2, [r3, #0]
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	681a      	ldr	r2, [r3, #0]
 8002c40:	68bb      	ldr	r3, [r7, #8]
 8002c42:	011b      	lsls	r3, r3, #4
 8002c44:	4413      	add	r3, r2
 8002c46:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	0a1a      	lsrs	r2, r3, #8
 8002c4e:	683b      	ldr	r3, [r7, #0]
 8002c50:	3301      	adds	r3, #1
 8002c52:	b2d2      	uxtb	r2, r2
 8002c54:	701a      	strb	r2, [r3, #0]
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	681a      	ldr	r2, [r3, #0]
 8002c5a:	68bb      	ldr	r3, [r7, #8]
 8002c5c:	011b      	lsls	r3, r3, #4
 8002c5e:	4413      	add	r3, r2
 8002c60:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	0c1a      	lsrs	r2, r3, #16
 8002c68:	683b      	ldr	r3, [r7, #0]
 8002c6a:	3302      	adds	r3, #2
 8002c6c:	b2d2      	uxtb	r2, r2
 8002c6e:	701a      	strb	r2, [r3, #0]
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	681a      	ldr	r2, [r3, #0]
 8002c74:	68bb      	ldr	r3, [r7, #8]
 8002c76:	011b      	lsls	r3, r3, #4
 8002c78:	4413      	add	r3, r2
 8002c7a:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	0e1a      	lsrs	r2, r3, #24
 8002c82:	683b      	ldr	r3, [r7, #0]
 8002c84:	3303      	adds	r3, #3
 8002c86:	b2d2      	uxtb	r2, r2
 8002c88:	701a      	strb	r2, [r3, #0]
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	681a      	ldr	r2, [r3, #0]
 8002c8e:	68bb      	ldr	r3, [r7, #8]
 8002c90:	011b      	lsls	r3, r3, #4
 8002c92:	4413      	add	r3, r2
 8002c94:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002c98:	681a      	ldr	r2, [r3, #0]
 8002c9a:	683b      	ldr	r3, [r7, #0]
 8002c9c:	3304      	adds	r3, #4
 8002c9e:	b2d2      	uxtb	r2, r2
 8002ca0:	701a      	strb	r2, [r3, #0]
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	681a      	ldr	r2, [r3, #0]
 8002ca6:	68bb      	ldr	r3, [r7, #8]
 8002ca8:	011b      	lsls	r3, r3, #4
 8002caa:	4413      	add	r3, r2
 8002cac:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	0a1a      	lsrs	r2, r3, #8
 8002cb4:	683b      	ldr	r3, [r7, #0]
 8002cb6:	3305      	adds	r3, #5
 8002cb8:	b2d2      	uxtb	r2, r2
 8002cba:	701a      	strb	r2, [r3, #0]
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	681a      	ldr	r2, [r3, #0]
 8002cc0:	68bb      	ldr	r3, [r7, #8]
 8002cc2:	011b      	lsls	r3, r3, #4
 8002cc4:	4413      	add	r3, r2
 8002cc6:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	0c1a      	lsrs	r2, r3, #16
 8002cce:	683b      	ldr	r3, [r7, #0]
 8002cd0:	3306      	adds	r3, #6
 8002cd2:	b2d2      	uxtb	r2, r2
 8002cd4:	701a      	strb	r2, [r3, #0]
 8002cd6:	68fb      	ldr	r3, [r7, #12]
 8002cd8:	681a      	ldr	r2, [r3, #0]
 8002cda:	68bb      	ldr	r3, [r7, #8]
 8002cdc:	011b      	lsls	r3, r3, #4
 8002cde:	4413      	add	r3, r2
 8002ce0:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	0e1a      	lsrs	r2, r3, #24
 8002ce8:	683b      	ldr	r3, [r7, #0]
 8002cea:	3307      	adds	r3, #7
 8002cec:	b2d2      	uxtb	r2, r2
 8002cee:	701a      	strb	r2, [r3, #0]
 8002cf0:	68bb      	ldr	r3, [r7, #8]
 8002cf2:	2b00      	cmp	r3, #0
 8002cf4:	d108      	bne.n	8002d08 <HAL_CAN_GetRxMessage+0x1f6>
 8002cf6:	68fb      	ldr	r3, [r7, #12]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	68da      	ldr	r2, [r3, #12]
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	f042 0220 	orr.w	r2, r2, #32
 8002d04:	60da      	str	r2, [r3, #12]
 8002d06:	e007      	b.n	8002d18 <HAL_CAN_GetRxMessage+0x206>
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	691a      	ldr	r2, [r3, #16]
 8002d0e:	68fb      	ldr	r3, [r7, #12]
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	f042 0220 	orr.w	r2, r2, #32
 8002d16:	611a      	str	r2, [r3, #16]
 8002d18:	2300      	movs	r3, #0
 8002d1a:	e006      	b.n	8002d2a <HAL_CAN_GetRxMessage+0x218>
 8002d1c:	68fb      	ldr	r3, [r7, #12]
 8002d1e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d20:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	625a      	str	r2, [r3, #36]	@ 0x24
 8002d28:	2301      	movs	r3, #1
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	371c      	adds	r7, #28
 8002d2e:	46bd      	mov	sp, r7
 8002d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d34:	4770      	bx	lr

08002d36 <HAL_CAN_ActivateNotification>:
 8002d36:	b480      	push	{r7}
 8002d38:	b085      	sub	sp, #20
 8002d3a:	af00      	add	r7, sp, #0
 8002d3c:	6078      	str	r0, [r7, #4]
 8002d3e:	6039      	str	r1, [r7, #0]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002d46:	73fb      	strb	r3, [r7, #15]
 8002d48:	7bfb      	ldrb	r3, [r7, #15]
 8002d4a:	2b01      	cmp	r3, #1
 8002d4c:	d002      	beq.n	8002d54 <HAL_CAN_ActivateNotification+0x1e>
 8002d4e:	7bfb      	ldrb	r3, [r7, #15]
 8002d50:	2b02      	cmp	r3, #2
 8002d52:	d109      	bne.n	8002d68 <HAL_CAN_ActivateNotification+0x32>
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	6959      	ldr	r1, [r3, #20]
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	683a      	ldr	r2, [r7, #0]
 8002d60:	430a      	orrs	r2, r1
 8002d62:	615a      	str	r2, [r3, #20]
 8002d64:	2300      	movs	r3, #0
 8002d66:	e006      	b.n	8002d76 <HAL_CAN_ActivateNotification+0x40>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d6c:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	625a      	str	r2, [r3, #36]	@ 0x24
 8002d74:	2301      	movs	r3, #1
 8002d76:	4618      	mov	r0, r3
 8002d78:	3714      	adds	r7, #20
 8002d7a:	46bd      	mov	sp, r7
 8002d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d80:	4770      	bx	lr

08002d82 <HAL_CAN_IRQHandler>:
 8002d82:	b580      	push	{r7, lr}
 8002d84:	b08a      	sub	sp, #40	@ 0x28
 8002d86:	af00      	add	r7, sp, #0
 8002d88:	6078      	str	r0, [r7, #4]
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	627b      	str	r3, [r7, #36]	@ 0x24
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	695b      	ldr	r3, [r3, #20]
 8002d94:	623b      	str	r3, [r7, #32]
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	685b      	ldr	r3, [r3, #4]
 8002d9c:	61fb      	str	r3, [r7, #28]
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	689b      	ldr	r3, [r3, #8]
 8002da4:	61bb      	str	r3, [r7, #24]
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	68db      	ldr	r3, [r3, #12]
 8002dac:	617b      	str	r3, [r7, #20]
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	691b      	ldr	r3, [r3, #16]
 8002db4:	613b      	str	r3, [r7, #16]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	699b      	ldr	r3, [r3, #24]
 8002dbc:	60fb      	str	r3, [r7, #12]
 8002dbe:	6a3b      	ldr	r3, [r7, #32]
 8002dc0:	f003 0301 	and.w	r3, r3, #1
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d07c      	beq.n	8002ec2 <HAL_CAN_IRQHandler+0x140>
 8002dc8:	69bb      	ldr	r3, [r7, #24]
 8002dca:	f003 0301 	and.w	r3, r3, #1
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d023      	beq.n	8002e1a <HAL_CAN_IRQHandler+0x98>
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	2201      	movs	r2, #1
 8002dd8:	609a      	str	r2, [r3, #8]
 8002dda:	69bb      	ldr	r3, [r7, #24]
 8002ddc:	f003 0302 	and.w	r3, r3, #2
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d003      	beq.n	8002dec <HAL_CAN_IRQHandler+0x6a>
 8002de4:	6878      	ldr	r0, [r7, #4]
 8002de6:	f000 f983 	bl	80030f0 <HAL_CAN_TxMailbox0CompleteCallback>
 8002dea:	e016      	b.n	8002e1a <HAL_CAN_IRQHandler+0x98>
 8002dec:	69bb      	ldr	r3, [r7, #24]
 8002dee:	f003 0304 	and.w	r3, r3, #4
 8002df2:	2b00      	cmp	r3, #0
 8002df4:	d004      	beq.n	8002e00 <HAL_CAN_IRQHandler+0x7e>
 8002df6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002df8:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002dfc:	627b      	str	r3, [r7, #36]	@ 0x24
 8002dfe:	e00c      	b.n	8002e1a <HAL_CAN_IRQHandler+0x98>
 8002e00:	69bb      	ldr	r3, [r7, #24]
 8002e02:	f003 0308 	and.w	r3, r3, #8
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d004      	beq.n	8002e14 <HAL_CAN_IRQHandler+0x92>
 8002e0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e0c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002e10:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e12:	e002      	b.n	8002e1a <HAL_CAN_IRQHandler+0x98>
 8002e14:	6878      	ldr	r0, [r7, #4]
 8002e16:	f000 f989 	bl	800312c <HAL_CAN_TxMailbox0AbortCallback>
 8002e1a:	69bb      	ldr	r3, [r7, #24]
 8002e1c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d024      	beq.n	8002e6e <HAL_CAN_IRQHandler+0xec>
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002e2c:	609a      	str	r2, [r3, #8]
 8002e2e:	69bb      	ldr	r3, [r7, #24]
 8002e30:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	d003      	beq.n	8002e40 <HAL_CAN_IRQHandler+0xbe>
 8002e38:	6878      	ldr	r0, [r7, #4]
 8002e3a:	f000 f963 	bl	8003104 <HAL_CAN_TxMailbox1CompleteCallback>
 8002e3e:	e016      	b.n	8002e6e <HAL_CAN_IRQHandler+0xec>
 8002e40:	69bb      	ldr	r3, [r7, #24]
 8002e42:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d004      	beq.n	8002e54 <HAL_CAN_IRQHandler+0xd2>
 8002e4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e4c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8002e50:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e52:	e00c      	b.n	8002e6e <HAL_CAN_IRQHandler+0xec>
 8002e54:	69bb      	ldr	r3, [r7, #24]
 8002e56:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d004      	beq.n	8002e68 <HAL_CAN_IRQHandler+0xe6>
 8002e5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e60:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002e64:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e66:	e002      	b.n	8002e6e <HAL_CAN_IRQHandler+0xec>
 8002e68:	6878      	ldr	r0, [r7, #4]
 8002e6a:	f000 f969 	bl	8003140 <HAL_CAN_TxMailbox1AbortCallback>
 8002e6e:	69bb      	ldr	r3, [r7, #24]
 8002e70:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002e74:	2b00      	cmp	r3, #0
 8002e76:	d024      	beq.n	8002ec2 <HAL_CAN_IRQHandler+0x140>
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002e80:	609a      	str	r2, [r3, #8]
 8002e82:	69bb      	ldr	r3, [r7, #24]
 8002e84:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	d003      	beq.n	8002e94 <HAL_CAN_IRQHandler+0x112>
 8002e8c:	6878      	ldr	r0, [r7, #4]
 8002e8e:	f000 f943 	bl	8003118 <HAL_CAN_TxMailbox2CompleteCallback>
 8002e92:	e016      	b.n	8002ec2 <HAL_CAN_IRQHandler+0x140>
 8002e94:	69bb      	ldr	r3, [r7, #24]
 8002e96:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d004      	beq.n	8002ea8 <HAL_CAN_IRQHandler+0x126>
 8002e9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ea0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002ea4:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ea6:	e00c      	b.n	8002ec2 <HAL_CAN_IRQHandler+0x140>
 8002ea8:	69bb      	ldr	r3, [r7, #24]
 8002eaa:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d004      	beq.n	8002ebc <HAL_CAN_IRQHandler+0x13a>
 8002eb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002eb4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002eb8:	627b      	str	r3, [r7, #36]	@ 0x24
 8002eba:	e002      	b.n	8002ec2 <HAL_CAN_IRQHandler+0x140>
 8002ebc:	6878      	ldr	r0, [r7, #4]
 8002ebe:	f000 f949 	bl	8003154 <HAL_CAN_TxMailbox2AbortCallback>
 8002ec2:	6a3b      	ldr	r3, [r7, #32]
 8002ec4:	f003 0308 	and.w	r3, r3, #8
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d00c      	beq.n	8002ee6 <HAL_CAN_IRQHandler+0x164>
 8002ecc:	697b      	ldr	r3, [r7, #20]
 8002ece:	f003 0310 	and.w	r3, r3, #16
 8002ed2:	2b00      	cmp	r3, #0
 8002ed4:	d007      	beq.n	8002ee6 <HAL_CAN_IRQHandler+0x164>
 8002ed6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ed8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002edc:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	2210      	movs	r2, #16
 8002ee4:	60da      	str	r2, [r3, #12]
 8002ee6:	6a3b      	ldr	r3, [r7, #32]
 8002ee8:	f003 0304 	and.w	r3, r3, #4
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d00b      	beq.n	8002f08 <HAL_CAN_IRQHandler+0x186>
 8002ef0:	697b      	ldr	r3, [r7, #20]
 8002ef2:	f003 0308 	and.w	r3, r3, #8
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	d006      	beq.n	8002f08 <HAL_CAN_IRQHandler+0x186>
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	2208      	movs	r2, #8
 8002f00:	60da      	str	r2, [r3, #12]
 8002f02:	6878      	ldr	r0, [r7, #4]
 8002f04:	f000 f930 	bl	8003168 <HAL_CAN_RxFifo0FullCallback>
 8002f08:	6a3b      	ldr	r3, [r7, #32]
 8002f0a:	f003 0302 	and.w	r3, r3, #2
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d009      	beq.n	8002f26 <HAL_CAN_IRQHandler+0x1a4>
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	68db      	ldr	r3, [r3, #12]
 8002f18:	f003 0303 	and.w	r3, r3, #3
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d002      	beq.n	8002f26 <HAL_CAN_IRQHandler+0x1a4>
 8002f20:	6878      	ldr	r0, [r7, #4]
 8002f22:	f7fd ff0d 	bl	8000d40 <HAL_CAN_RxFifo0MsgPendingCallback>
 8002f26:	6a3b      	ldr	r3, [r7, #32]
 8002f28:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d00c      	beq.n	8002f4a <HAL_CAN_IRQHandler+0x1c8>
 8002f30:	693b      	ldr	r3, [r7, #16]
 8002f32:	f003 0310 	and.w	r3, r3, #16
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d007      	beq.n	8002f4a <HAL_CAN_IRQHandler+0x1c8>
 8002f3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002f3c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002f40:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	2210      	movs	r2, #16
 8002f48:	611a      	str	r2, [r3, #16]
 8002f4a:	6a3b      	ldr	r3, [r7, #32]
 8002f4c:	f003 0320 	and.w	r3, r3, #32
 8002f50:	2b00      	cmp	r3, #0
 8002f52:	d00b      	beq.n	8002f6c <HAL_CAN_IRQHandler+0x1ea>
 8002f54:	693b      	ldr	r3, [r7, #16]
 8002f56:	f003 0308 	and.w	r3, r3, #8
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d006      	beq.n	8002f6c <HAL_CAN_IRQHandler+0x1ea>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	2208      	movs	r2, #8
 8002f64:	611a      	str	r2, [r3, #16]
 8002f66:	6878      	ldr	r0, [r7, #4]
 8002f68:	f000 f912 	bl	8003190 <HAL_CAN_RxFifo1FullCallback>
 8002f6c:	6a3b      	ldr	r3, [r7, #32]
 8002f6e:	f003 0310 	and.w	r3, r3, #16
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	d009      	beq.n	8002f8a <HAL_CAN_IRQHandler+0x208>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	691b      	ldr	r3, [r3, #16]
 8002f7c:	f003 0303 	and.w	r3, r3, #3
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d002      	beq.n	8002f8a <HAL_CAN_IRQHandler+0x208>
 8002f84:	6878      	ldr	r0, [r7, #4]
 8002f86:	f000 f8f9 	bl	800317c <HAL_CAN_RxFifo1MsgPendingCallback>
 8002f8a:	6a3b      	ldr	r3, [r7, #32]
 8002f8c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f90:	2b00      	cmp	r3, #0
 8002f92:	d00b      	beq.n	8002fac <HAL_CAN_IRQHandler+0x22a>
 8002f94:	69fb      	ldr	r3, [r7, #28]
 8002f96:	f003 0310 	and.w	r3, r3, #16
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d006      	beq.n	8002fac <HAL_CAN_IRQHandler+0x22a>
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	2210      	movs	r2, #16
 8002fa4:	605a      	str	r2, [r3, #4]
 8002fa6:	6878      	ldr	r0, [r7, #4]
 8002fa8:	f000 f8fc 	bl	80031a4 <HAL_CAN_SleepCallback>
 8002fac:	6a3b      	ldr	r3, [r7, #32]
 8002fae:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d00b      	beq.n	8002fce <HAL_CAN_IRQHandler+0x24c>
 8002fb6:	69fb      	ldr	r3, [r7, #28]
 8002fb8:	f003 0308 	and.w	r3, r3, #8
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	d006      	beq.n	8002fce <HAL_CAN_IRQHandler+0x24c>
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	681b      	ldr	r3, [r3, #0]
 8002fc4:	2208      	movs	r2, #8
 8002fc6:	605a      	str	r2, [r3, #4]
 8002fc8:	6878      	ldr	r0, [r7, #4]
 8002fca:	f000 f8f5 	bl	80031b8 <HAL_CAN_WakeUpFromRxMsgCallback>
 8002fce:	6a3b      	ldr	r3, [r7, #32]
 8002fd0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8002fd4:	2b00      	cmp	r3, #0
 8002fd6:	d07b      	beq.n	80030d0 <HAL_CAN_IRQHandler+0x34e>
 8002fd8:	69fb      	ldr	r3, [r7, #28]
 8002fda:	f003 0304 	and.w	r3, r3, #4
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d072      	beq.n	80030c8 <HAL_CAN_IRQHandler+0x346>
 8002fe2:	6a3b      	ldr	r3, [r7, #32]
 8002fe4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d008      	beq.n	8002ffe <HAL_CAN_IRQHandler+0x27c>
 8002fec:	68fb      	ldr	r3, [r7, #12]
 8002fee:	f003 0301 	and.w	r3, r3, #1
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d003      	beq.n	8002ffe <HAL_CAN_IRQHandler+0x27c>
 8002ff6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ff8:	f043 0301 	orr.w	r3, r3, #1
 8002ffc:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ffe:	6a3b      	ldr	r3, [r7, #32]
 8003000:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003004:	2b00      	cmp	r3, #0
 8003006:	d008      	beq.n	800301a <HAL_CAN_IRQHandler+0x298>
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	f003 0302 	and.w	r3, r3, #2
 800300e:	2b00      	cmp	r3, #0
 8003010:	d003      	beq.n	800301a <HAL_CAN_IRQHandler+0x298>
 8003012:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003014:	f043 0302 	orr.w	r3, r3, #2
 8003018:	627b      	str	r3, [r7, #36]	@ 0x24
 800301a:	6a3b      	ldr	r3, [r7, #32]
 800301c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003020:	2b00      	cmp	r3, #0
 8003022:	d008      	beq.n	8003036 <HAL_CAN_IRQHandler+0x2b4>
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	f003 0304 	and.w	r3, r3, #4
 800302a:	2b00      	cmp	r3, #0
 800302c:	d003      	beq.n	8003036 <HAL_CAN_IRQHandler+0x2b4>
 800302e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003030:	f043 0304 	orr.w	r3, r3, #4
 8003034:	627b      	str	r3, [r7, #36]	@ 0x24
 8003036:	6a3b      	ldr	r3, [r7, #32]
 8003038:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800303c:	2b00      	cmp	r3, #0
 800303e:	d043      	beq.n	80030c8 <HAL_CAN_IRQHandler+0x346>
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003046:	2b00      	cmp	r3, #0
 8003048:	d03e      	beq.n	80030c8 <HAL_CAN_IRQHandler+0x346>
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003050:	2b60      	cmp	r3, #96	@ 0x60
 8003052:	d02b      	beq.n	80030ac <HAL_CAN_IRQHandler+0x32a>
 8003054:	2b60      	cmp	r3, #96	@ 0x60
 8003056:	d82e      	bhi.n	80030b6 <HAL_CAN_IRQHandler+0x334>
 8003058:	2b50      	cmp	r3, #80	@ 0x50
 800305a:	d022      	beq.n	80030a2 <HAL_CAN_IRQHandler+0x320>
 800305c:	2b50      	cmp	r3, #80	@ 0x50
 800305e:	d82a      	bhi.n	80030b6 <HAL_CAN_IRQHandler+0x334>
 8003060:	2b40      	cmp	r3, #64	@ 0x40
 8003062:	d019      	beq.n	8003098 <HAL_CAN_IRQHandler+0x316>
 8003064:	2b40      	cmp	r3, #64	@ 0x40
 8003066:	d826      	bhi.n	80030b6 <HAL_CAN_IRQHandler+0x334>
 8003068:	2b30      	cmp	r3, #48	@ 0x30
 800306a:	d010      	beq.n	800308e <HAL_CAN_IRQHandler+0x30c>
 800306c:	2b30      	cmp	r3, #48	@ 0x30
 800306e:	d822      	bhi.n	80030b6 <HAL_CAN_IRQHandler+0x334>
 8003070:	2b10      	cmp	r3, #16
 8003072:	d002      	beq.n	800307a <HAL_CAN_IRQHandler+0x2f8>
 8003074:	2b20      	cmp	r3, #32
 8003076:	d005      	beq.n	8003084 <HAL_CAN_IRQHandler+0x302>
 8003078:	e01d      	b.n	80030b6 <HAL_CAN_IRQHandler+0x334>
 800307a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800307c:	f043 0308 	orr.w	r3, r3, #8
 8003080:	627b      	str	r3, [r7, #36]	@ 0x24
 8003082:	e019      	b.n	80030b8 <HAL_CAN_IRQHandler+0x336>
 8003084:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003086:	f043 0310 	orr.w	r3, r3, #16
 800308a:	627b      	str	r3, [r7, #36]	@ 0x24
 800308c:	e014      	b.n	80030b8 <HAL_CAN_IRQHandler+0x336>
 800308e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003090:	f043 0320 	orr.w	r3, r3, #32
 8003094:	627b      	str	r3, [r7, #36]	@ 0x24
 8003096:	e00f      	b.n	80030b8 <HAL_CAN_IRQHandler+0x336>
 8003098:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800309a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800309e:	627b      	str	r3, [r7, #36]	@ 0x24
 80030a0:	e00a      	b.n	80030b8 <HAL_CAN_IRQHandler+0x336>
 80030a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030a4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80030a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80030aa:	e005      	b.n	80030b8 <HAL_CAN_IRQHandler+0x336>
 80030ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030ae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80030b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80030b4:	e000      	b.n	80030b8 <HAL_CAN_IRQHandler+0x336>
 80030b6:	bf00      	nop
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	699a      	ldr	r2, [r3, #24]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80030c6:	619a      	str	r2, [r3, #24]
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	2204      	movs	r2, #4
 80030ce:	605a      	str	r2, [r3, #4]
 80030d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030d2:	2b00      	cmp	r3, #0
 80030d4:	d008      	beq.n	80030e8 <HAL_CAN_IRQHandler+0x366>
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80030da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030dc:	431a      	orrs	r2, r3
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	625a      	str	r2, [r3, #36]	@ 0x24
 80030e2:	6878      	ldr	r0, [r7, #4]
 80030e4:	f000 f872 	bl	80031cc <HAL_CAN_ErrorCallback>
 80030e8:	bf00      	nop
 80030ea:	3728      	adds	r7, #40	@ 0x28
 80030ec:	46bd      	mov	sp, r7
 80030ee:	bd80      	pop	{r7, pc}

080030f0 <HAL_CAN_TxMailbox0CompleteCallback>:
 80030f0:	b480      	push	{r7}
 80030f2:	b083      	sub	sp, #12
 80030f4:	af00      	add	r7, sp, #0
 80030f6:	6078      	str	r0, [r7, #4]
 80030f8:	bf00      	nop
 80030fa:	370c      	adds	r7, #12
 80030fc:	46bd      	mov	sp, r7
 80030fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003102:	4770      	bx	lr

08003104 <HAL_CAN_TxMailbox1CompleteCallback>:
 8003104:	b480      	push	{r7}
 8003106:	b083      	sub	sp, #12
 8003108:	af00      	add	r7, sp, #0
 800310a:	6078      	str	r0, [r7, #4]
 800310c:	bf00      	nop
 800310e:	370c      	adds	r7, #12
 8003110:	46bd      	mov	sp, r7
 8003112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003116:	4770      	bx	lr

08003118 <HAL_CAN_TxMailbox2CompleteCallback>:
 8003118:	b480      	push	{r7}
 800311a:	b083      	sub	sp, #12
 800311c:	af00      	add	r7, sp, #0
 800311e:	6078      	str	r0, [r7, #4]
 8003120:	bf00      	nop
 8003122:	370c      	adds	r7, #12
 8003124:	46bd      	mov	sp, r7
 8003126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800312a:	4770      	bx	lr

0800312c <HAL_CAN_TxMailbox0AbortCallback>:
 800312c:	b480      	push	{r7}
 800312e:	b083      	sub	sp, #12
 8003130:	af00      	add	r7, sp, #0
 8003132:	6078      	str	r0, [r7, #4]
 8003134:	bf00      	nop
 8003136:	370c      	adds	r7, #12
 8003138:	46bd      	mov	sp, r7
 800313a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800313e:	4770      	bx	lr

08003140 <HAL_CAN_TxMailbox1AbortCallback>:
 8003140:	b480      	push	{r7}
 8003142:	b083      	sub	sp, #12
 8003144:	af00      	add	r7, sp, #0
 8003146:	6078      	str	r0, [r7, #4]
 8003148:	bf00      	nop
 800314a:	370c      	adds	r7, #12
 800314c:	46bd      	mov	sp, r7
 800314e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003152:	4770      	bx	lr

08003154 <HAL_CAN_TxMailbox2AbortCallback>:
 8003154:	b480      	push	{r7}
 8003156:	b083      	sub	sp, #12
 8003158:	af00      	add	r7, sp, #0
 800315a:	6078      	str	r0, [r7, #4]
 800315c:	bf00      	nop
 800315e:	370c      	adds	r7, #12
 8003160:	46bd      	mov	sp, r7
 8003162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003166:	4770      	bx	lr

08003168 <HAL_CAN_RxFifo0FullCallback>:
 8003168:	b480      	push	{r7}
 800316a:	b083      	sub	sp, #12
 800316c:	af00      	add	r7, sp, #0
 800316e:	6078      	str	r0, [r7, #4]
 8003170:	bf00      	nop
 8003172:	370c      	adds	r7, #12
 8003174:	46bd      	mov	sp, r7
 8003176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800317a:	4770      	bx	lr

0800317c <HAL_CAN_RxFifo1MsgPendingCallback>:
 800317c:	b480      	push	{r7}
 800317e:	b083      	sub	sp, #12
 8003180:	af00      	add	r7, sp, #0
 8003182:	6078      	str	r0, [r7, #4]
 8003184:	bf00      	nop
 8003186:	370c      	adds	r7, #12
 8003188:	46bd      	mov	sp, r7
 800318a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800318e:	4770      	bx	lr

08003190 <HAL_CAN_RxFifo1FullCallback>:
 8003190:	b480      	push	{r7}
 8003192:	b083      	sub	sp, #12
 8003194:	af00      	add	r7, sp, #0
 8003196:	6078      	str	r0, [r7, #4]
 8003198:	bf00      	nop
 800319a:	370c      	adds	r7, #12
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr

080031a4 <HAL_CAN_SleepCallback>:
 80031a4:	b480      	push	{r7}
 80031a6:	b083      	sub	sp, #12
 80031a8:	af00      	add	r7, sp, #0
 80031aa:	6078      	str	r0, [r7, #4]
 80031ac:	bf00      	nop
 80031ae:	370c      	adds	r7, #12
 80031b0:	46bd      	mov	sp, r7
 80031b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b6:	4770      	bx	lr

080031b8 <HAL_CAN_WakeUpFromRxMsgCallback>:
 80031b8:	b480      	push	{r7}
 80031ba:	b083      	sub	sp, #12
 80031bc:	af00      	add	r7, sp, #0
 80031be:	6078      	str	r0, [r7, #4]
 80031c0:	bf00      	nop
 80031c2:	370c      	adds	r7, #12
 80031c4:	46bd      	mov	sp, r7
 80031c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ca:	4770      	bx	lr

080031cc <HAL_CAN_ErrorCallback>:
 80031cc:	b480      	push	{r7}
 80031ce:	b083      	sub	sp, #12
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	6078      	str	r0, [r7, #4]
 80031d4:	bf00      	nop
 80031d6:	370c      	adds	r7, #12
 80031d8:	46bd      	mov	sp, r7
 80031da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031de:	4770      	bx	lr

080031e0 <__NVIC_SetPriorityGrouping>:
 80031e0:	b480      	push	{r7}
 80031e2:	b085      	sub	sp, #20
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	6078      	str	r0, [r7, #4]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	f003 0307 	and.w	r3, r3, #7
 80031ee:	60fb      	str	r3, [r7, #12]
 80031f0:	4b0c      	ldr	r3, [pc, #48]	@ (8003224 <__NVIC_SetPriorityGrouping+0x44>)
 80031f2:	68db      	ldr	r3, [r3, #12]
 80031f4:	60bb      	str	r3, [r7, #8]
 80031f6:	68ba      	ldr	r2, [r7, #8]
 80031f8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80031fc:	4013      	ands	r3, r2
 80031fe:	60bb      	str	r3, [r7, #8]
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	021a      	lsls	r2, r3, #8
 8003204:	68bb      	ldr	r3, [r7, #8]
 8003206:	4313      	orrs	r3, r2
 8003208:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800320c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003210:	60bb      	str	r3, [r7, #8]
 8003212:	4a04      	ldr	r2, [pc, #16]	@ (8003224 <__NVIC_SetPriorityGrouping+0x44>)
 8003214:	68bb      	ldr	r3, [r7, #8]
 8003216:	60d3      	str	r3, [r2, #12]
 8003218:	bf00      	nop
 800321a:	3714      	adds	r7, #20
 800321c:	46bd      	mov	sp, r7
 800321e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003222:	4770      	bx	lr
 8003224:	e000ed00 	.word	0xe000ed00

08003228 <__NVIC_GetPriorityGrouping>:
 8003228:	b480      	push	{r7}
 800322a:	af00      	add	r7, sp, #0
 800322c:	4b04      	ldr	r3, [pc, #16]	@ (8003240 <__NVIC_GetPriorityGrouping+0x18>)
 800322e:	68db      	ldr	r3, [r3, #12]
 8003230:	0a1b      	lsrs	r3, r3, #8
 8003232:	f003 0307 	and.w	r3, r3, #7
 8003236:	4618      	mov	r0, r3
 8003238:	46bd      	mov	sp, r7
 800323a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800323e:	4770      	bx	lr
 8003240:	e000ed00 	.word	0xe000ed00

08003244 <__NVIC_EnableIRQ>:
 8003244:	b480      	push	{r7}
 8003246:	b083      	sub	sp, #12
 8003248:	af00      	add	r7, sp, #0
 800324a:	4603      	mov	r3, r0
 800324c:	71fb      	strb	r3, [r7, #7]
 800324e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003252:	2b00      	cmp	r3, #0
 8003254:	db0b      	blt.n	800326e <__NVIC_EnableIRQ+0x2a>
 8003256:	79fb      	ldrb	r3, [r7, #7]
 8003258:	f003 021f 	and.w	r2, r3, #31
 800325c:	4907      	ldr	r1, [pc, #28]	@ (800327c <__NVIC_EnableIRQ+0x38>)
 800325e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003262:	095b      	lsrs	r3, r3, #5
 8003264:	2001      	movs	r0, #1
 8003266:	fa00 f202 	lsl.w	r2, r0, r2
 800326a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800326e:	bf00      	nop
 8003270:	370c      	adds	r7, #12
 8003272:	46bd      	mov	sp, r7
 8003274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003278:	4770      	bx	lr
 800327a:	bf00      	nop
 800327c:	e000e100 	.word	0xe000e100

08003280 <__NVIC_SetPriority>:
 8003280:	b480      	push	{r7}
 8003282:	b083      	sub	sp, #12
 8003284:	af00      	add	r7, sp, #0
 8003286:	4603      	mov	r3, r0
 8003288:	6039      	str	r1, [r7, #0]
 800328a:	71fb      	strb	r3, [r7, #7]
 800328c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003290:	2b00      	cmp	r3, #0
 8003292:	db0a      	blt.n	80032aa <__NVIC_SetPriority+0x2a>
 8003294:	683b      	ldr	r3, [r7, #0]
 8003296:	b2da      	uxtb	r2, r3
 8003298:	490c      	ldr	r1, [pc, #48]	@ (80032cc <__NVIC_SetPriority+0x4c>)
 800329a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800329e:	0112      	lsls	r2, r2, #4
 80032a0:	b2d2      	uxtb	r2, r2
 80032a2:	440b      	add	r3, r1
 80032a4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80032a8:	e00a      	b.n	80032c0 <__NVIC_SetPriority+0x40>
 80032aa:	683b      	ldr	r3, [r7, #0]
 80032ac:	b2da      	uxtb	r2, r3
 80032ae:	4908      	ldr	r1, [pc, #32]	@ (80032d0 <__NVIC_SetPriority+0x50>)
 80032b0:	79fb      	ldrb	r3, [r7, #7]
 80032b2:	f003 030f 	and.w	r3, r3, #15
 80032b6:	3b04      	subs	r3, #4
 80032b8:	0112      	lsls	r2, r2, #4
 80032ba:	b2d2      	uxtb	r2, r2
 80032bc:	440b      	add	r3, r1
 80032be:	761a      	strb	r2, [r3, #24]
 80032c0:	bf00      	nop
 80032c2:	370c      	adds	r7, #12
 80032c4:	46bd      	mov	sp, r7
 80032c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ca:	4770      	bx	lr
 80032cc:	e000e100 	.word	0xe000e100
 80032d0:	e000ed00 	.word	0xe000ed00

080032d4 <NVIC_EncodePriority>:
 80032d4:	b480      	push	{r7}
 80032d6:	b089      	sub	sp, #36	@ 0x24
 80032d8:	af00      	add	r7, sp, #0
 80032da:	60f8      	str	r0, [r7, #12]
 80032dc:	60b9      	str	r1, [r7, #8]
 80032de:	607a      	str	r2, [r7, #4]
 80032e0:	68fb      	ldr	r3, [r7, #12]
 80032e2:	f003 0307 	and.w	r3, r3, #7
 80032e6:	61fb      	str	r3, [r7, #28]
 80032e8:	69fb      	ldr	r3, [r7, #28]
 80032ea:	f1c3 0307 	rsb	r3, r3, #7
 80032ee:	2b04      	cmp	r3, #4
 80032f0:	bf28      	it	cs
 80032f2:	2304      	movcs	r3, #4
 80032f4:	61bb      	str	r3, [r7, #24]
 80032f6:	69fb      	ldr	r3, [r7, #28]
 80032f8:	3304      	adds	r3, #4
 80032fa:	2b06      	cmp	r3, #6
 80032fc:	d902      	bls.n	8003304 <NVIC_EncodePriority+0x30>
 80032fe:	69fb      	ldr	r3, [r7, #28]
 8003300:	3b03      	subs	r3, #3
 8003302:	e000      	b.n	8003306 <NVIC_EncodePriority+0x32>
 8003304:	2300      	movs	r3, #0
 8003306:	617b      	str	r3, [r7, #20]
 8003308:	f04f 32ff 	mov.w	r2, #4294967295
 800330c:	69bb      	ldr	r3, [r7, #24]
 800330e:	fa02 f303 	lsl.w	r3, r2, r3
 8003312:	43da      	mvns	r2, r3
 8003314:	68bb      	ldr	r3, [r7, #8]
 8003316:	401a      	ands	r2, r3
 8003318:	697b      	ldr	r3, [r7, #20]
 800331a:	409a      	lsls	r2, r3
 800331c:	f04f 31ff 	mov.w	r1, #4294967295
 8003320:	697b      	ldr	r3, [r7, #20]
 8003322:	fa01 f303 	lsl.w	r3, r1, r3
 8003326:	43d9      	mvns	r1, r3
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	400b      	ands	r3, r1
 800332c:	4313      	orrs	r3, r2
 800332e:	4618      	mov	r0, r3
 8003330:	3724      	adds	r7, #36	@ 0x24
 8003332:	46bd      	mov	sp, r7
 8003334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003338:	4770      	bx	lr
	...

0800333c <SysTick_Config>:
 800333c:	b580      	push	{r7, lr}
 800333e:	b082      	sub	sp, #8
 8003340:	af00      	add	r7, sp, #0
 8003342:	6078      	str	r0, [r7, #4]
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	3b01      	subs	r3, #1
 8003348:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800334c:	d301      	bcc.n	8003352 <SysTick_Config+0x16>
 800334e:	2301      	movs	r3, #1
 8003350:	e00f      	b.n	8003372 <SysTick_Config+0x36>
 8003352:	4a0a      	ldr	r2, [pc, #40]	@ (800337c <SysTick_Config+0x40>)
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	3b01      	subs	r3, #1
 8003358:	6053      	str	r3, [r2, #4]
 800335a:	210f      	movs	r1, #15
 800335c:	f04f 30ff 	mov.w	r0, #4294967295
 8003360:	f7ff ff8e 	bl	8003280 <__NVIC_SetPriority>
 8003364:	4b05      	ldr	r3, [pc, #20]	@ (800337c <SysTick_Config+0x40>)
 8003366:	2200      	movs	r2, #0
 8003368:	609a      	str	r2, [r3, #8]
 800336a:	4b04      	ldr	r3, [pc, #16]	@ (800337c <SysTick_Config+0x40>)
 800336c:	2207      	movs	r2, #7
 800336e:	601a      	str	r2, [r3, #0]
 8003370:	2300      	movs	r3, #0
 8003372:	4618      	mov	r0, r3
 8003374:	3708      	adds	r7, #8
 8003376:	46bd      	mov	sp, r7
 8003378:	bd80      	pop	{r7, pc}
 800337a:	bf00      	nop
 800337c:	e000e010 	.word	0xe000e010

08003380 <HAL_NVIC_SetPriorityGrouping>:
 8003380:	b580      	push	{r7, lr}
 8003382:	b082      	sub	sp, #8
 8003384:	af00      	add	r7, sp, #0
 8003386:	6078      	str	r0, [r7, #4]
 8003388:	6878      	ldr	r0, [r7, #4]
 800338a:	f7ff ff29 	bl	80031e0 <__NVIC_SetPriorityGrouping>
 800338e:	bf00      	nop
 8003390:	3708      	adds	r7, #8
 8003392:	46bd      	mov	sp, r7
 8003394:	bd80      	pop	{r7, pc}

08003396 <HAL_NVIC_SetPriority>:
 8003396:	b580      	push	{r7, lr}
 8003398:	b086      	sub	sp, #24
 800339a:	af00      	add	r7, sp, #0
 800339c:	4603      	mov	r3, r0
 800339e:	60b9      	str	r1, [r7, #8]
 80033a0:	607a      	str	r2, [r7, #4]
 80033a2:	73fb      	strb	r3, [r7, #15]
 80033a4:	2300      	movs	r3, #0
 80033a6:	617b      	str	r3, [r7, #20]
 80033a8:	f7ff ff3e 	bl	8003228 <__NVIC_GetPriorityGrouping>
 80033ac:	6178      	str	r0, [r7, #20]
 80033ae:	687a      	ldr	r2, [r7, #4]
 80033b0:	68b9      	ldr	r1, [r7, #8]
 80033b2:	6978      	ldr	r0, [r7, #20]
 80033b4:	f7ff ff8e 	bl	80032d4 <NVIC_EncodePriority>
 80033b8:	4602      	mov	r2, r0
 80033ba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80033be:	4611      	mov	r1, r2
 80033c0:	4618      	mov	r0, r3
 80033c2:	f7ff ff5d 	bl	8003280 <__NVIC_SetPriority>
 80033c6:	bf00      	nop
 80033c8:	3718      	adds	r7, #24
 80033ca:	46bd      	mov	sp, r7
 80033cc:	bd80      	pop	{r7, pc}

080033ce <HAL_NVIC_EnableIRQ>:
 80033ce:	b580      	push	{r7, lr}
 80033d0:	b082      	sub	sp, #8
 80033d2:	af00      	add	r7, sp, #0
 80033d4:	4603      	mov	r3, r0
 80033d6:	71fb      	strb	r3, [r7, #7]
 80033d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033dc:	4618      	mov	r0, r3
 80033de:	f7ff ff31 	bl	8003244 <__NVIC_EnableIRQ>
 80033e2:	bf00      	nop
 80033e4:	3708      	adds	r7, #8
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bd80      	pop	{r7, pc}

080033ea <HAL_SYSTICK_Config>:
 80033ea:	b580      	push	{r7, lr}
 80033ec:	b082      	sub	sp, #8
 80033ee:	af00      	add	r7, sp, #0
 80033f0:	6078      	str	r0, [r7, #4]
 80033f2:	6878      	ldr	r0, [r7, #4]
 80033f4:	f7ff ffa2 	bl	800333c <SysTick_Config>
 80033f8:	4603      	mov	r3, r0
 80033fa:	4618      	mov	r0, r3
 80033fc:	3708      	adds	r7, #8
 80033fe:	46bd      	mov	sp, r7
 8003400:	bd80      	pop	{r7, pc}

08003402 <HAL_DMA_Abort>:
 8003402:	b580      	push	{r7, lr}
 8003404:	b084      	sub	sp, #16
 8003406:	af00      	add	r7, sp, #0
 8003408:	6078      	str	r0, [r7, #4]
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800340e:	60fb      	str	r3, [r7, #12]
 8003410:	f7fe fc88 	bl	8001d24 <HAL_GetTick>
 8003414:	60b8      	str	r0, [r7, #8]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800341c:	b2db      	uxtb	r3, r3
 800341e:	2b02      	cmp	r3, #2
 8003420:	d008      	beq.n	8003434 <HAL_DMA_Abort+0x32>
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	2280      	movs	r2, #128	@ 0x80
 8003426:	655a      	str	r2, [r3, #84]	@ 0x54
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	2200      	movs	r2, #0
 800342c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003430:	2301      	movs	r3, #1
 8003432:	e052      	b.n	80034da <HAL_DMA_Abort+0xd8>
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	681a      	ldr	r2, [r3, #0]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	f022 0216 	bic.w	r2, r2, #22
 8003442:	601a      	str	r2, [r3, #0]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	695a      	ldr	r2, [r3, #20]
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003452:	615a      	str	r2, [r3, #20]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003458:	2b00      	cmp	r3, #0
 800345a:	d103      	bne.n	8003464 <HAL_DMA_Abort+0x62>
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003460:	2b00      	cmp	r3, #0
 8003462:	d007      	beq.n	8003474 <HAL_DMA_Abort+0x72>
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	681a      	ldr	r2, [r3, #0]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	f022 0208 	bic.w	r2, r2, #8
 8003472:	601a      	str	r2, [r3, #0]
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	681a      	ldr	r2, [r3, #0]
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	f022 0201 	bic.w	r2, r2, #1
 8003482:	601a      	str	r2, [r3, #0]
 8003484:	e013      	b.n	80034ae <HAL_DMA_Abort+0xac>
 8003486:	f7fe fc4d 	bl	8001d24 <HAL_GetTick>
 800348a:	4602      	mov	r2, r0
 800348c:	68bb      	ldr	r3, [r7, #8]
 800348e:	1ad3      	subs	r3, r2, r3
 8003490:	2b05      	cmp	r3, #5
 8003492:	d90c      	bls.n	80034ae <HAL_DMA_Abort+0xac>
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	2220      	movs	r2, #32
 8003498:	655a      	str	r2, [r3, #84]	@ 0x54
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	2203      	movs	r2, #3
 800349e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	2200      	movs	r2, #0
 80034a6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80034aa:	2303      	movs	r3, #3
 80034ac:	e015      	b.n	80034da <HAL_DMA_Abort+0xd8>
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	f003 0301 	and.w	r3, r3, #1
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d1e4      	bne.n	8003486 <HAL_DMA_Abort+0x84>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80034c0:	223f      	movs	r2, #63	@ 0x3f
 80034c2:	409a      	lsls	r2, r3
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	609a      	str	r2, [r3, #8]
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	2201      	movs	r2, #1
 80034cc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	2200      	movs	r2, #0
 80034d4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80034d8:	2300      	movs	r3, #0
 80034da:	4618      	mov	r0, r3
 80034dc:	3710      	adds	r7, #16
 80034de:	46bd      	mov	sp, r7
 80034e0:	bd80      	pop	{r7, pc}

080034e2 <HAL_DMA_Abort_IT>:
 80034e2:	b480      	push	{r7}
 80034e4:	b083      	sub	sp, #12
 80034e6:	af00      	add	r7, sp, #0
 80034e8:	6078      	str	r0, [r7, #4]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80034f0:	b2db      	uxtb	r3, r3
 80034f2:	2b02      	cmp	r3, #2
 80034f4:	d004      	beq.n	8003500 <HAL_DMA_Abort_IT+0x1e>
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	2280      	movs	r2, #128	@ 0x80
 80034fa:	655a      	str	r2, [r3, #84]	@ 0x54
 80034fc:	2301      	movs	r3, #1
 80034fe:	e00c      	b.n	800351a <HAL_DMA_Abort_IT+0x38>
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	2205      	movs	r2, #5
 8003504:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	681a      	ldr	r2, [r3, #0]
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	f022 0201 	bic.w	r2, r2, #1
 8003516:	601a      	str	r2, [r3, #0]
 8003518:	2300      	movs	r3, #0
 800351a:	4618      	mov	r0, r3
 800351c:	370c      	adds	r7, #12
 800351e:	46bd      	mov	sp, r7
 8003520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003524:	4770      	bx	lr
	...

08003528 <HAL_GPIO_Init>:
 8003528:	b480      	push	{r7}
 800352a:	b089      	sub	sp, #36	@ 0x24
 800352c:	af00      	add	r7, sp, #0
 800352e:	6078      	str	r0, [r7, #4]
 8003530:	6039      	str	r1, [r7, #0]
 8003532:	2300      	movs	r3, #0
 8003534:	617b      	str	r3, [r7, #20]
 8003536:	2300      	movs	r3, #0
 8003538:	613b      	str	r3, [r7, #16]
 800353a:	2300      	movs	r3, #0
 800353c:	61bb      	str	r3, [r7, #24]
 800353e:	2300      	movs	r3, #0
 8003540:	61fb      	str	r3, [r7, #28]
 8003542:	e16b      	b.n	800381c <HAL_GPIO_Init+0x2f4>
 8003544:	2201      	movs	r2, #1
 8003546:	69fb      	ldr	r3, [r7, #28]
 8003548:	fa02 f303 	lsl.w	r3, r2, r3
 800354c:	617b      	str	r3, [r7, #20]
 800354e:	683b      	ldr	r3, [r7, #0]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	697a      	ldr	r2, [r7, #20]
 8003554:	4013      	ands	r3, r2
 8003556:	613b      	str	r3, [r7, #16]
 8003558:	693a      	ldr	r2, [r7, #16]
 800355a:	697b      	ldr	r3, [r7, #20]
 800355c:	429a      	cmp	r2, r3
 800355e:	f040 815a 	bne.w	8003816 <HAL_GPIO_Init+0x2ee>
 8003562:	683b      	ldr	r3, [r7, #0]
 8003564:	685b      	ldr	r3, [r3, #4]
 8003566:	f003 0303 	and.w	r3, r3, #3
 800356a:	2b01      	cmp	r3, #1
 800356c:	d005      	beq.n	800357a <HAL_GPIO_Init+0x52>
 800356e:	683b      	ldr	r3, [r7, #0]
 8003570:	685b      	ldr	r3, [r3, #4]
 8003572:	f003 0303 	and.w	r3, r3, #3
 8003576:	2b02      	cmp	r3, #2
 8003578:	d130      	bne.n	80035dc <HAL_GPIO_Init+0xb4>
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	689b      	ldr	r3, [r3, #8]
 800357e:	61bb      	str	r3, [r7, #24]
 8003580:	69fb      	ldr	r3, [r7, #28]
 8003582:	005b      	lsls	r3, r3, #1
 8003584:	2203      	movs	r2, #3
 8003586:	fa02 f303 	lsl.w	r3, r2, r3
 800358a:	43db      	mvns	r3, r3
 800358c:	69ba      	ldr	r2, [r7, #24]
 800358e:	4013      	ands	r3, r2
 8003590:	61bb      	str	r3, [r7, #24]
 8003592:	683b      	ldr	r3, [r7, #0]
 8003594:	68da      	ldr	r2, [r3, #12]
 8003596:	69fb      	ldr	r3, [r7, #28]
 8003598:	005b      	lsls	r3, r3, #1
 800359a:	fa02 f303 	lsl.w	r3, r2, r3
 800359e:	69ba      	ldr	r2, [r7, #24]
 80035a0:	4313      	orrs	r3, r2
 80035a2:	61bb      	str	r3, [r7, #24]
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	69ba      	ldr	r2, [r7, #24]
 80035a8:	609a      	str	r2, [r3, #8]
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	685b      	ldr	r3, [r3, #4]
 80035ae:	61bb      	str	r3, [r7, #24]
 80035b0:	2201      	movs	r2, #1
 80035b2:	69fb      	ldr	r3, [r7, #28]
 80035b4:	fa02 f303 	lsl.w	r3, r2, r3
 80035b8:	43db      	mvns	r3, r3
 80035ba:	69ba      	ldr	r2, [r7, #24]
 80035bc:	4013      	ands	r3, r2
 80035be:	61bb      	str	r3, [r7, #24]
 80035c0:	683b      	ldr	r3, [r7, #0]
 80035c2:	685b      	ldr	r3, [r3, #4]
 80035c4:	091b      	lsrs	r3, r3, #4
 80035c6:	f003 0201 	and.w	r2, r3, #1
 80035ca:	69fb      	ldr	r3, [r7, #28]
 80035cc:	fa02 f303 	lsl.w	r3, r2, r3
 80035d0:	69ba      	ldr	r2, [r7, #24]
 80035d2:	4313      	orrs	r3, r2
 80035d4:	61bb      	str	r3, [r7, #24]
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	69ba      	ldr	r2, [r7, #24]
 80035da:	605a      	str	r2, [r3, #4]
 80035dc:	683b      	ldr	r3, [r7, #0]
 80035de:	685b      	ldr	r3, [r3, #4]
 80035e0:	f003 0303 	and.w	r3, r3, #3
 80035e4:	2b03      	cmp	r3, #3
 80035e6:	d017      	beq.n	8003618 <HAL_GPIO_Init+0xf0>
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	68db      	ldr	r3, [r3, #12]
 80035ec:	61bb      	str	r3, [r7, #24]
 80035ee:	69fb      	ldr	r3, [r7, #28]
 80035f0:	005b      	lsls	r3, r3, #1
 80035f2:	2203      	movs	r2, #3
 80035f4:	fa02 f303 	lsl.w	r3, r2, r3
 80035f8:	43db      	mvns	r3, r3
 80035fa:	69ba      	ldr	r2, [r7, #24]
 80035fc:	4013      	ands	r3, r2
 80035fe:	61bb      	str	r3, [r7, #24]
 8003600:	683b      	ldr	r3, [r7, #0]
 8003602:	689a      	ldr	r2, [r3, #8]
 8003604:	69fb      	ldr	r3, [r7, #28]
 8003606:	005b      	lsls	r3, r3, #1
 8003608:	fa02 f303 	lsl.w	r3, r2, r3
 800360c:	69ba      	ldr	r2, [r7, #24]
 800360e:	4313      	orrs	r3, r2
 8003610:	61bb      	str	r3, [r7, #24]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	69ba      	ldr	r2, [r7, #24]
 8003616:	60da      	str	r2, [r3, #12]
 8003618:	683b      	ldr	r3, [r7, #0]
 800361a:	685b      	ldr	r3, [r3, #4]
 800361c:	f003 0303 	and.w	r3, r3, #3
 8003620:	2b02      	cmp	r3, #2
 8003622:	d123      	bne.n	800366c <HAL_GPIO_Init+0x144>
 8003624:	69fb      	ldr	r3, [r7, #28]
 8003626:	08da      	lsrs	r2, r3, #3
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	3208      	adds	r2, #8
 800362c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003630:	61bb      	str	r3, [r7, #24]
 8003632:	69fb      	ldr	r3, [r7, #28]
 8003634:	f003 0307 	and.w	r3, r3, #7
 8003638:	009b      	lsls	r3, r3, #2
 800363a:	220f      	movs	r2, #15
 800363c:	fa02 f303 	lsl.w	r3, r2, r3
 8003640:	43db      	mvns	r3, r3
 8003642:	69ba      	ldr	r2, [r7, #24]
 8003644:	4013      	ands	r3, r2
 8003646:	61bb      	str	r3, [r7, #24]
 8003648:	683b      	ldr	r3, [r7, #0]
 800364a:	691a      	ldr	r2, [r3, #16]
 800364c:	69fb      	ldr	r3, [r7, #28]
 800364e:	f003 0307 	and.w	r3, r3, #7
 8003652:	009b      	lsls	r3, r3, #2
 8003654:	fa02 f303 	lsl.w	r3, r2, r3
 8003658:	69ba      	ldr	r2, [r7, #24]
 800365a:	4313      	orrs	r3, r2
 800365c:	61bb      	str	r3, [r7, #24]
 800365e:	69fb      	ldr	r3, [r7, #28]
 8003660:	08da      	lsrs	r2, r3, #3
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	3208      	adds	r2, #8
 8003666:	69b9      	ldr	r1, [r7, #24]
 8003668:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	61bb      	str	r3, [r7, #24]
 8003672:	69fb      	ldr	r3, [r7, #28]
 8003674:	005b      	lsls	r3, r3, #1
 8003676:	2203      	movs	r2, #3
 8003678:	fa02 f303 	lsl.w	r3, r2, r3
 800367c:	43db      	mvns	r3, r3
 800367e:	69ba      	ldr	r2, [r7, #24]
 8003680:	4013      	ands	r3, r2
 8003682:	61bb      	str	r3, [r7, #24]
 8003684:	683b      	ldr	r3, [r7, #0]
 8003686:	685b      	ldr	r3, [r3, #4]
 8003688:	f003 0203 	and.w	r2, r3, #3
 800368c:	69fb      	ldr	r3, [r7, #28]
 800368e:	005b      	lsls	r3, r3, #1
 8003690:	fa02 f303 	lsl.w	r3, r2, r3
 8003694:	69ba      	ldr	r2, [r7, #24]
 8003696:	4313      	orrs	r3, r2
 8003698:	61bb      	str	r3, [r7, #24]
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	69ba      	ldr	r2, [r7, #24]
 800369e:	601a      	str	r2, [r3, #0]
 80036a0:	683b      	ldr	r3, [r7, #0]
 80036a2:	685b      	ldr	r3, [r3, #4]
 80036a4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80036a8:	2b00      	cmp	r3, #0
 80036aa:	f000 80b4 	beq.w	8003816 <HAL_GPIO_Init+0x2ee>
 80036ae:	2300      	movs	r3, #0
 80036b0:	60fb      	str	r3, [r7, #12]
 80036b2:	4b60      	ldr	r3, [pc, #384]	@ (8003834 <HAL_GPIO_Init+0x30c>)
 80036b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036b6:	4a5f      	ldr	r2, [pc, #380]	@ (8003834 <HAL_GPIO_Init+0x30c>)
 80036b8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80036bc:	6453      	str	r3, [r2, #68]	@ 0x44
 80036be:	4b5d      	ldr	r3, [pc, #372]	@ (8003834 <HAL_GPIO_Init+0x30c>)
 80036c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036c2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80036c6:	60fb      	str	r3, [r7, #12]
 80036c8:	68fb      	ldr	r3, [r7, #12]
 80036ca:	4a5b      	ldr	r2, [pc, #364]	@ (8003838 <HAL_GPIO_Init+0x310>)
 80036cc:	69fb      	ldr	r3, [r7, #28]
 80036ce:	089b      	lsrs	r3, r3, #2
 80036d0:	3302      	adds	r3, #2
 80036d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80036d6:	61bb      	str	r3, [r7, #24]
 80036d8:	69fb      	ldr	r3, [r7, #28]
 80036da:	f003 0303 	and.w	r3, r3, #3
 80036de:	009b      	lsls	r3, r3, #2
 80036e0:	220f      	movs	r2, #15
 80036e2:	fa02 f303 	lsl.w	r3, r2, r3
 80036e6:	43db      	mvns	r3, r3
 80036e8:	69ba      	ldr	r2, [r7, #24]
 80036ea:	4013      	ands	r3, r2
 80036ec:	61bb      	str	r3, [r7, #24]
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	4a52      	ldr	r2, [pc, #328]	@ (800383c <HAL_GPIO_Init+0x314>)
 80036f2:	4293      	cmp	r3, r2
 80036f4:	d02b      	beq.n	800374e <HAL_GPIO_Init+0x226>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	4a51      	ldr	r2, [pc, #324]	@ (8003840 <HAL_GPIO_Init+0x318>)
 80036fa:	4293      	cmp	r3, r2
 80036fc:	d025      	beq.n	800374a <HAL_GPIO_Init+0x222>
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	4a50      	ldr	r2, [pc, #320]	@ (8003844 <HAL_GPIO_Init+0x31c>)
 8003702:	4293      	cmp	r3, r2
 8003704:	d01f      	beq.n	8003746 <HAL_GPIO_Init+0x21e>
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	4a4f      	ldr	r2, [pc, #316]	@ (8003848 <HAL_GPIO_Init+0x320>)
 800370a:	4293      	cmp	r3, r2
 800370c:	d019      	beq.n	8003742 <HAL_GPIO_Init+0x21a>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	4a4e      	ldr	r2, [pc, #312]	@ (800384c <HAL_GPIO_Init+0x324>)
 8003712:	4293      	cmp	r3, r2
 8003714:	d013      	beq.n	800373e <HAL_GPIO_Init+0x216>
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	4a4d      	ldr	r2, [pc, #308]	@ (8003850 <HAL_GPIO_Init+0x328>)
 800371a:	4293      	cmp	r3, r2
 800371c:	d00d      	beq.n	800373a <HAL_GPIO_Init+0x212>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	4a4c      	ldr	r2, [pc, #304]	@ (8003854 <HAL_GPIO_Init+0x32c>)
 8003722:	4293      	cmp	r3, r2
 8003724:	d007      	beq.n	8003736 <HAL_GPIO_Init+0x20e>
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	4a4b      	ldr	r2, [pc, #300]	@ (8003858 <HAL_GPIO_Init+0x330>)
 800372a:	4293      	cmp	r3, r2
 800372c:	d101      	bne.n	8003732 <HAL_GPIO_Init+0x20a>
 800372e:	2307      	movs	r3, #7
 8003730:	e00e      	b.n	8003750 <HAL_GPIO_Init+0x228>
 8003732:	2308      	movs	r3, #8
 8003734:	e00c      	b.n	8003750 <HAL_GPIO_Init+0x228>
 8003736:	2306      	movs	r3, #6
 8003738:	e00a      	b.n	8003750 <HAL_GPIO_Init+0x228>
 800373a:	2305      	movs	r3, #5
 800373c:	e008      	b.n	8003750 <HAL_GPIO_Init+0x228>
 800373e:	2304      	movs	r3, #4
 8003740:	e006      	b.n	8003750 <HAL_GPIO_Init+0x228>
 8003742:	2303      	movs	r3, #3
 8003744:	e004      	b.n	8003750 <HAL_GPIO_Init+0x228>
 8003746:	2302      	movs	r3, #2
 8003748:	e002      	b.n	8003750 <HAL_GPIO_Init+0x228>
 800374a:	2301      	movs	r3, #1
 800374c:	e000      	b.n	8003750 <HAL_GPIO_Init+0x228>
 800374e:	2300      	movs	r3, #0
 8003750:	69fa      	ldr	r2, [r7, #28]
 8003752:	f002 0203 	and.w	r2, r2, #3
 8003756:	0092      	lsls	r2, r2, #2
 8003758:	4093      	lsls	r3, r2
 800375a:	69ba      	ldr	r2, [r7, #24]
 800375c:	4313      	orrs	r3, r2
 800375e:	61bb      	str	r3, [r7, #24]
 8003760:	4935      	ldr	r1, [pc, #212]	@ (8003838 <HAL_GPIO_Init+0x310>)
 8003762:	69fb      	ldr	r3, [r7, #28]
 8003764:	089b      	lsrs	r3, r3, #2
 8003766:	3302      	adds	r3, #2
 8003768:	69ba      	ldr	r2, [r7, #24]
 800376a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800376e:	4b3b      	ldr	r3, [pc, #236]	@ (800385c <HAL_GPIO_Init+0x334>)
 8003770:	689b      	ldr	r3, [r3, #8]
 8003772:	61bb      	str	r3, [r7, #24]
 8003774:	693b      	ldr	r3, [r7, #16]
 8003776:	43db      	mvns	r3, r3
 8003778:	69ba      	ldr	r2, [r7, #24]
 800377a:	4013      	ands	r3, r2
 800377c:	61bb      	str	r3, [r7, #24]
 800377e:	683b      	ldr	r3, [r7, #0]
 8003780:	685b      	ldr	r3, [r3, #4]
 8003782:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003786:	2b00      	cmp	r3, #0
 8003788:	d003      	beq.n	8003792 <HAL_GPIO_Init+0x26a>
 800378a:	69ba      	ldr	r2, [r7, #24]
 800378c:	693b      	ldr	r3, [r7, #16]
 800378e:	4313      	orrs	r3, r2
 8003790:	61bb      	str	r3, [r7, #24]
 8003792:	4a32      	ldr	r2, [pc, #200]	@ (800385c <HAL_GPIO_Init+0x334>)
 8003794:	69bb      	ldr	r3, [r7, #24]
 8003796:	6093      	str	r3, [r2, #8]
 8003798:	4b30      	ldr	r3, [pc, #192]	@ (800385c <HAL_GPIO_Init+0x334>)
 800379a:	68db      	ldr	r3, [r3, #12]
 800379c:	61bb      	str	r3, [r7, #24]
 800379e:	693b      	ldr	r3, [r7, #16]
 80037a0:	43db      	mvns	r3, r3
 80037a2:	69ba      	ldr	r2, [r7, #24]
 80037a4:	4013      	ands	r3, r2
 80037a6:	61bb      	str	r3, [r7, #24]
 80037a8:	683b      	ldr	r3, [r7, #0]
 80037aa:	685b      	ldr	r3, [r3, #4]
 80037ac:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d003      	beq.n	80037bc <HAL_GPIO_Init+0x294>
 80037b4:	69ba      	ldr	r2, [r7, #24]
 80037b6:	693b      	ldr	r3, [r7, #16]
 80037b8:	4313      	orrs	r3, r2
 80037ba:	61bb      	str	r3, [r7, #24]
 80037bc:	4a27      	ldr	r2, [pc, #156]	@ (800385c <HAL_GPIO_Init+0x334>)
 80037be:	69bb      	ldr	r3, [r7, #24]
 80037c0:	60d3      	str	r3, [r2, #12]
 80037c2:	4b26      	ldr	r3, [pc, #152]	@ (800385c <HAL_GPIO_Init+0x334>)
 80037c4:	685b      	ldr	r3, [r3, #4]
 80037c6:	61bb      	str	r3, [r7, #24]
 80037c8:	693b      	ldr	r3, [r7, #16]
 80037ca:	43db      	mvns	r3, r3
 80037cc:	69ba      	ldr	r2, [r7, #24]
 80037ce:	4013      	ands	r3, r2
 80037d0:	61bb      	str	r3, [r7, #24]
 80037d2:	683b      	ldr	r3, [r7, #0]
 80037d4:	685b      	ldr	r3, [r3, #4]
 80037d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80037da:	2b00      	cmp	r3, #0
 80037dc:	d003      	beq.n	80037e6 <HAL_GPIO_Init+0x2be>
 80037de:	69ba      	ldr	r2, [r7, #24]
 80037e0:	693b      	ldr	r3, [r7, #16]
 80037e2:	4313      	orrs	r3, r2
 80037e4:	61bb      	str	r3, [r7, #24]
 80037e6:	4a1d      	ldr	r2, [pc, #116]	@ (800385c <HAL_GPIO_Init+0x334>)
 80037e8:	69bb      	ldr	r3, [r7, #24]
 80037ea:	6053      	str	r3, [r2, #4]
 80037ec:	4b1b      	ldr	r3, [pc, #108]	@ (800385c <HAL_GPIO_Init+0x334>)
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	61bb      	str	r3, [r7, #24]
 80037f2:	693b      	ldr	r3, [r7, #16]
 80037f4:	43db      	mvns	r3, r3
 80037f6:	69ba      	ldr	r2, [r7, #24]
 80037f8:	4013      	ands	r3, r2
 80037fa:	61bb      	str	r3, [r7, #24]
 80037fc:	683b      	ldr	r3, [r7, #0]
 80037fe:	685b      	ldr	r3, [r3, #4]
 8003800:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003804:	2b00      	cmp	r3, #0
 8003806:	d003      	beq.n	8003810 <HAL_GPIO_Init+0x2e8>
 8003808:	69ba      	ldr	r2, [r7, #24]
 800380a:	693b      	ldr	r3, [r7, #16]
 800380c:	4313      	orrs	r3, r2
 800380e:	61bb      	str	r3, [r7, #24]
 8003810:	4a12      	ldr	r2, [pc, #72]	@ (800385c <HAL_GPIO_Init+0x334>)
 8003812:	69bb      	ldr	r3, [r7, #24]
 8003814:	6013      	str	r3, [r2, #0]
 8003816:	69fb      	ldr	r3, [r7, #28]
 8003818:	3301      	adds	r3, #1
 800381a:	61fb      	str	r3, [r7, #28]
 800381c:	69fb      	ldr	r3, [r7, #28]
 800381e:	2b0f      	cmp	r3, #15
 8003820:	f67f ae90 	bls.w	8003544 <HAL_GPIO_Init+0x1c>
 8003824:	bf00      	nop
 8003826:	bf00      	nop
 8003828:	3724      	adds	r7, #36	@ 0x24
 800382a:	46bd      	mov	sp, r7
 800382c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003830:	4770      	bx	lr
 8003832:	bf00      	nop
 8003834:	40023800 	.word	0x40023800
 8003838:	40013800 	.word	0x40013800
 800383c:	40020000 	.word	0x40020000
 8003840:	40020400 	.word	0x40020400
 8003844:	40020800 	.word	0x40020800
 8003848:	40020c00 	.word	0x40020c00
 800384c:	40021000 	.word	0x40021000
 8003850:	40021400 	.word	0x40021400
 8003854:	40021800 	.word	0x40021800
 8003858:	40021c00 	.word	0x40021c00
 800385c:	40013c00 	.word	0x40013c00

08003860 <HAL_GPIO_WritePin>:
 8003860:	b480      	push	{r7}
 8003862:	b083      	sub	sp, #12
 8003864:	af00      	add	r7, sp, #0
 8003866:	6078      	str	r0, [r7, #4]
 8003868:	460b      	mov	r3, r1
 800386a:	807b      	strh	r3, [r7, #2]
 800386c:	4613      	mov	r3, r2
 800386e:	707b      	strb	r3, [r7, #1]
 8003870:	787b      	ldrb	r3, [r7, #1]
 8003872:	2b00      	cmp	r3, #0
 8003874:	d003      	beq.n	800387e <HAL_GPIO_WritePin+0x1e>
 8003876:	887a      	ldrh	r2, [r7, #2]
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	619a      	str	r2, [r3, #24]
 800387c:	e003      	b.n	8003886 <HAL_GPIO_WritePin+0x26>
 800387e:	887b      	ldrh	r3, [r7, #2]
 8003880:	041a      	lsls	r2, r3, #16
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	619a      	str	r2, [r3, #24]
 8003886:	bf00      	nop
 8003888:	370c      	adds	r7, #12
 800388a:	46bd      	mov	sp, r7
 800388c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003890:	4770      	bx	lr
	...

08003894 <HAL_GPIO_EXTI_IRQHandler>:
 8003894:	b580      	push	{r7, lr}
 8003896:	b082      	sub	sp, #8
 8003898:	af00      	add	r7, sp, #0
 800389a:	4603      	mov	r3, r0
 800389c:	80fb      	strh	r3, [r7, #6]
 800389e:	4b08      	ldr	r3, [pc, #32]	@ (80038c0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80038a0:	695a      	ldr	r2, [r3, #20]
 80038a2:	88fb      	ldrh	r3, [r7, #6]
 80038a4:	4013      	ands	r3, r2
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d006      	beq.n	80038b8 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80038aa:	4a05      	ldr	r2, [pc, #20]	@ (80038c0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80038ac:	88fb      	ldrh	r3, [r7, #6]
 80038ae:	6153      	str	r3, [r2, #20]
 80038b0:	88fb      	ldrh	r3, [r7, #6]
 80038b2:	4618      	mov	r0, r3
 80038b4:	f7fd fb00 	bl	8000eb8 <HAL_GPIO_EXTI_Callback>
 80038b8:	bf00      	nop
 80038ba:	3708      	adds	r7, #8
 80038bc:	46bd      	mov	sp, r7
 80038be:	bd80      	pop	{r7, pc}
 80038c0:	40013c00 	.word	0x40013c00

080038c4 <HAL_RCC_OscConfig>:
 80038c4:	b580      	push	{r7, lr}
 80038c6:	b086      	sub	sp, #24
 80038c8:	af00      	add	r7, sp, #0
 80038ca:	6078      	str	r0, [r7, #4]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d101      	bne.n	80038d6 <HAL_RCC_OscConfig+0x12>
 80038d2:	2301      	movs	r3, #1
 80038d4:	e267      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	f003 0301 	and.w	r3, r3, #1
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d075      	beq.n	80039ce <HAL_RCC_OscConfig+0x10a>
 80038e2:	4b88      	ldr	r3, [pc, #544]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80038e4:	689b      	ldr	r3, [r3, #8]
 80038e6:	f003 030c 	and.w	r3, r3, #12
 80038ea:	2b04      	cmp	r3, #4
 80038ec:	d00c      	beq.n	8003908 <HAL_RCC_OscConfig+0x44>
 80038ee:	4b85      	ldr	r3, [pc, #532]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80038f0:	689b      	ldr	r3, [r3, #8]
 80038f2:	f003 030c 	and.w	r3, r3, #12
 80038f6:	2b08      	cmp	r3, #8
 80038f8:	d112      	bne.n	8003920 <HAL_RCC_OscConfig+0x5c>
 80038fa:	4b82      	ldr	r3, [pc, #520]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80038fc:	685b      	ldr	r3, [r3, #4]
 80038fe:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003902:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003906:	d10b      	bne.n	8003920 <HAL_RCC_OscConfig+0x5c>
 8003908:	4b7e      	ldr	r3, [pc, #504]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003910:	2b00      	cmp	r3, #0
 8003912:	d05b      	beq.n	80039cc <HAL_RCC_OscConfig+0x108>
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	685b      	ldr	r3, [r3, #4]
 8003918:	2b00      	cmp	r3, #0
 800391a:	d157      	bne.n	80039cc <HAL_RCC_OscConfig+0x108>
 800391c:	2301      	movs	r3, #1
 800391e:	e242      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	685b      	ldr	r3, [r3, #4]
 8003924:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003928:	d106      	bne.n	8003938 <HAL_RCC_OscConfig+0x74>
 800392a:	4b76      	ldr	r3, [pc, #472]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	4a75      	ldr	r2, [pc, #468]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003930:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003934:	6013      	str	r3, [r2, #0]
 8003936:	e01d      	b.n	8003974 <HAL_RCC_OscConfig+0xb0>
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	685b      	ldr	r3, [r3, #4]
 800393c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003940:	d10c      	bne.n	800395c <HAL_RCC_OscConfig+0x98>
 8003942:	4b70      	ldr	r3, [pc, #448]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	4a6f      	ldr	r2, [pc, #444]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003948:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800394c:	6013      	str	r3, [r2, #0]
 800394e:	4b6d      	ldr	r3, [pc, #436]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	4a6c      	ldr	r2, [pc, #432]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003954:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003958:	6013      	str	r3, [r2, #0]
 800395a:	e00b      	b.n	8003974 <HAL_RCC_OscConfig+0xb0>
 800395c:	4b69      	ldr	r3, [pc, #420]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	4a68      	ldr	r2, [pc, #416]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003962:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003966:	6013      	str	r3, [r2, #0]
 8003968:	4b66      	ldr	r3, [pc, #408]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	4a65      	ldr	r2, [pc, #404]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 800396e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003972:	6013      	str	r3, [r2, #0]
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	685b      	ldr	r3, [r3, #4]
 8003978:	2b00      	cmp	r3, #0
 800397a:	d013      	beq.n	80039a4 <HAL_RCC_OscConfig+0xe0>
 800397c:	f7fe f9d2 	bl	8001d24 <HAL_GetTick>
 8003980:	6138      	str	r0, [r7, #16]
 8003982:	e008      	b.n	8003996 <HAL_RCC_OscConfig+0xd2>
 8003984:	f7fe f9ce 	bl	8001d24 <HAL_GetTick>
 8003988:	4602      	mov	r2, r0
 800398a:	693b      	ldr	r3, [r7, #16]
 800398c:	1ad3      	subs	r3, r2, r3
 800398e:	2b64      	cmp	r3, #100	@ 0x64
 8003990:	d901      	bls.n	8003996 <HAL_RCC_OscConfig+0xd2>
 8003992:	2303      	movs	r3, #3
 8003994:	e207      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003996:	4b5b      	ldr	r3, [pc, #364]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d0f0      	beq.n	8003984 <HAL_RCC_OscConfig+0xc0>
 80039a2:	e014      	b.n	80039ce <HAL_RCC_OscConfig+0x10a>
 80039a4:	f7fe f9be 	bl	8001d24 <HAL_GetTick>
 80039a8:	6138      	str	r0, [r7, #16]
 80039aa:	e008      	b.n	80039be <HAL_RCC_OscConfig+0xfa>
 80039ac:	f7fe f9ba 	bl	8001d24 <HAL_GetTick>
 80039b0:	4602      	mov	r2, r0
 80039b2:	693b      	ldr	r3, [r7, #16]
 80039b4:	1ad3      	subs	r3, r2, r3
 80039b6:	2b64      	cmp	r3, #100	@ 0x64
 80039b8:	d901      	bls.n	80039be <HAL_RCC_OscConfig+0xfa>
 80039ba:	2303      	movs	r3, #3
 80039bc:	e1f3      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 80039be:	4b51      	ldr	r3, [pc, #324]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d1f0      	bne.n	80039ac <HAL_RCC_OscConfig+0xe8>
 80039ca:	e000      	b.n	80039ce <HAL_RCC_OscConfig+0x10a>
 80039cc:	bf00      	nop
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	f003 0302 	and.w	r3, r3, #2
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d063      	beq.n	8003aa2 <HAL_RCC_OscConfig+0x1de>
 80039da:	4b4a      	ldr	r3, [pc, #296]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80039dc:	689b      	ldr	r3, [r3, #8]
 80039de:	f003 030c 	and.w	r3, r3, #12
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d00b      	beq.n	80039fe <HAL_RCC_OscConfig+0x13a>
 80039e6:	4b47      	ldr	r3, [pc, #284]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80039e8:	689b      	ldr	r3, [r3, #8]
 80039ea:	f003 030c 	and.w	r3, r3, #12
 80039ee:	2b08      	cmp	r3, #8
 80039f0:	d11c      	bne.n	8003a2c <HAL_RCC_OscConfig+0x168>
 80039f2:	4b44      	ldr	r3, [pc, #272]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 80039f4:	685b      	ldr	r3, [r3, #4]
 80039f6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80039fa:	2b00      	cmp	r3, #0
 80039fc:	d116      	bne.n	8003a2c <HAL_RCC_OscConfig+0x168>
 80039fe:	4b41      	ldr	r3, [pc, #260]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	f003 0302 	and.w	r3, r3, #2
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d005      	beq.n	8003a16 <HAL_RCC_OscConfig+0x152>
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	68db      	ldr	r3, [r3, #12]
 8003a0e:	2b01      	cmp	r3, #1
 8003a10:	d001      	beq.n	8003a16 <HAL_RCC_OscConfig+0x152>
 8003a12:	2301      	movs	r3, #1
 8003a14:	e1c7      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003a16:	4b3b      	ldr	r3, [pc, #236]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	691b      	ldr	r3, [r3, #16]
 8003a22:	00db      	lsls	r3, r3, #3
 8003a24:	4937      	ldr	r1, [pc, #220]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a26:	4313      	orrs	r3, r2
 8003a28:	600b      	str	r3, [r1, #0]
 8003a2a:	e03a      	b.n	8003aa2 <HAL_RCC_OscConfig+0x1de>
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	68db      	ldr	r3, [r3, #12]
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	d020      	beq.n	8003a76 <HAL_RCC_OscConfig+0x1b2>
 8003a34:	4b34      	ldr	r3, [pc, #208]	@ (8003b08 <HAL_RCC_OscConfig+0x244>)
 8003a36:	2201      	movs	r2, #1
 8003a38:	601a      	str	r2, [r3, #0]
 8003a3a:	f7fe f973 	bl	8001d24 <HAL_GetTick>
 8003a3e:	6138      	str	r0, [r7, #16]
 8003a40:	e008      	b.n	8003a54 <HAL_RCC_OscConfig+0x190>
 8003a42:	f7fe f96f 	bl	8001d24 <HAL_GetTick>
 8003a46:	4602      	mov	r2, r0
 8003a48:	693b      	ldr	r3, [r7, #16]
 8003a4a:	1ad3      	subs	r3, r2, r3
 8003a4c:	2b02      	cmp	r3, #2
 8003a4e:	d901      	bls.n	8003a54 <HAL_RCC_OscConfig+0x190>
 8003a50:	2303      	movs	r3, #3
 8003a52:	e1a8      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003a54:	4b2b      	ldr	r3, [pc, #172]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	f003 0302 	and.w	r3, r3, #2
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d0f0      	beq.n	8003a42 <HAL_RCC_OscConfig+0x17e>
 8003a60:	4b28      	ldr	r3, [pc, #160]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	691b      	ldr	r3, [r3, #16]
 8003a6c:	00db      	lsls	r3, r3, #3
 8003a6e:	4925      	ldr	r1, [pc, #148]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a70:	4313      	orrs	r3, r2
 8003a72:	600b      	str	r3, [r1, #0]
 8003a74:	e015      	b.n	8003aa2 <HAL_RCC_OscConfig+0x1de>
 8003a76:	4b24      	ldr	r3, [pc, #144]	@ (8003b08 <HAL_RCC_OscConfig+0x244>)
 8003a78:	2200      	movs	r2, #0
 8003a7a:	601a      	str	r2, [r3, #0]
 8003a7c:	f7fe f952 	bl	8001d24 <HAL_GetTick>
 8003a80:	6138      	str	r0, [r7, #16]
 8003a82:	e008      	b.n	8003a96 <HAL_RCC_OscConfig+0x1d2>
 8003a84:	f7fe f94e 	bl	8001d24 <HAL_GetTick>
 8003a88:	4602      	mov	r2, r0
 8003a8a:	693b      	ldr	r3, [r7, #16]
 8003a8c:	1ad3      	subs	r3, r2, r3
 8003a8e:	2b02      	cmp	r3, #2
 8003a90:	d901      	bls.n	8003a96 <HAL_RCC_OscConfig+0x1d2>
 8003a92:	2303      	movs	r3, #3
 8003a94:	e187      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003a96:	4b1b      	ldr	r3, [pc, #108]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	f003 0302 	and.w	r3, r3, #2
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d1f0      	bne.n	8003a84 <HAL_RCC_OscConfig+0x1c0>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	f003 0308 	and.w	r3, r3, #8
 8003aaa:	2b00      	cmp	r3, #0
 8003aac:	d036      	beq.n	8003b1c <HAL_RCC_OscConfig+0x258>
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	695b      	ldr	r3, [r3, #20]
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d016      	beq.n	8003ae4 <HAL_RCC_OscConfig+0x220>
 8003ab6:	4b15      	ldr	r3, [pc, #84]	@ (8003b0c <HAL_RCC_OscConfig+0x248>)
 8003ab8:	2201      	movs	r2, #1
 8003aba:	601a      	str	r2, [r3, #0]
 8003abc:	f7fe f932 	bl	8001d24 <HAL_GetTick>
 8003ac0:	6138      	str	r0, [r7, #16]
 8003ac2:	e008      	b.n	8003ad6 <HAL_RCC_OscConfig+0x212>
 8003ac4:	f7fe f92e 	bl	8001d24 <HAL_GetTick>
 8003ac8:	4602      	mov	r2, r0
 8003aca:	693b      	ldr	r3, [r7, #16]
 8003acc:	1ad3      	subs	r3, r2, r3
 8003ace:	2b02      	cmp	r3, #2
 8003ad0:	d901      	bls.n	8003ad6 <HAL_RCC_OscConfig+0x212>
 8003ad2:	2303      	movs	r3, #3
 8003ad4:	e167      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003ad6:	4b0b      	ldr	r3, [pc, #44]	@ (8003b04 <HAL_RCC_OscConfig+0x240>)
 8003ad8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003ada:	f003 0302 	and.w	r3, r3, #2
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d0f0      	beq.n	8003ac4 <HAL_RCC_OscConfig+0x200>
 8003ae2:	e01b      	b.n	8003b1c <HAL_RCC_OscConfig+0x258>
 8003ae4:	4b09      	ldr	r3, [pc, #36]	@ (8003b0c <HAL_RCC_OscConfig+0x248>)
 8003ae6:	2200      	movs	r2, #0
 8003ae8:	601a      	str	r2, [r3, #0]
 8003aea:	f7fe f91b 	bl	8001d24 <HAL_GetTick>
 8003aee:	6138      	str	r0, [r7, #16]
 8003af0:	e00e      	b.n	8003b10 <HAL_RCC_OscConfig+0x24c>
 8003af2:	f7fe f917 	bl	8001d24 <HAL_GetTick>
 8003af6:	4602      	mov	r2, r0
 8003af8:	693b      	ldr	r3, [r7, #16]
 8003afa:	1ad3      	subs	r3, r2, r3
 8003afc:	2b02      	cmp	r3, #2
 8003afe:	d907      	bls.n	8003b10 <HAL_RCC_OscConfig+0x24c>
 8003b00:	2303      	movs	r3, #3
 8003b02:	e150      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003b04:	40023800 	.word	0x40023800
 8003b08:	42470000 	.word	0x42470000
 8003b0c:	42470e80 	.word	0x42470e80
 8003b10:	4b88      	ldr	r3, [pc, #544]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003b12:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003b14:	f003 0302 	and.w	r3, r3, #2
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	d1ea      	bne.n	8003af2 <HAL_RCC_OscConfig+0x22e>
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	f003 0304 	and.w	r3, r3, #4
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	f000 8097 	beq.w	8003c58 <HAL_RCC_OscConfig+0x394>
 8003b2a:	2300      	movs	r3, #0
 8003b2c:	75fb      	strb	r3, [r7, #23]
 8003b2e:	4b81      	ldr	r3, [pc, #516]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003b30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d10f      	bne.n	8003b5a <HAL_RCC_OscConfig+0x296>
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	60bb      	str	r3, [r7, #8]
 8003b3e:	4b7d      	ldr	r3, [pc, #500]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003b40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b42:	4a7c      	ldr	r2, [pc, #496]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003b44:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003b48:	6413      	str	r3, [r2, #64]	@ 0x40
 8003b4a:	4b7a      	ldr	r3, [pc, #488]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003b4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b4e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003b52:	60bb      	str	r3, [r7, #8]
 8003b54:	68bb      	ldr	r3, [r7, #8]
 8003b56:	2301      	movs	r3, #1
 8003b58:	75fb      	strb	r3, [r7, #23]
 8003b5a:	4b77      	ldr	r3, [pc, #476]	@ (8003d38 <HAL_RCC_OscConfig+0x474>)
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d118      	bne.n	8003b98 <HAL_RCC_OscConfig+0x2d4>
 8003b66:	4b74      	ldr	r3, [pc, #464]	@ (8003d38 <HAL_RCC_OscConfig+0x474>)
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	4a73      	ldr	r2, [pc, #460]	@ (8003d38 <HAL_RCC_OscConfig+0x474>)
 8003b6c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003b70:	6013      	str	r3, [r2, #0]
 8003b72:	f7fe f8d7 	bl	8001d24 <HAL_GetTick>
 8003b76:	6138      	str	r0, [r7, #16]
 8003b78:	e008      	b.n	8003b8c <HAL_RCC_OscConfig+0x2c8>
 8003b7a:	f7fe f8d3 	bl	8001d24 <HAL_GetTick>
 8003b7e:	4602      	mov	r2, r0
 8003b80:	693b      	ldr	r3, [r7, #16]
 8003b82:	1ad3      	subs	r3, r2, r3
 8003b84:	2b02      	cmp	r3, #2
 8003b86:	d901      	bls.n	8003b8c <HAL_RCC_OscConfig+0x2c8>
 8003b88:	2303      	movs	r3, #3
 8003b8a:	e10c      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003b8c:	4b6a      	ldr	r3, [pc, #424]	@ (8003d38 <HAL_RCC_OscConfig+0x474>)
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d0f0      	beq.n	8003b7a <HAL_RCC_OscConfig+0x2b6>
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	689b      	ldr	r3, [r3, #8]
 8003b9c:	2b01      	cmp	r3, #1
 8003b9e:	d106      	bne.n	8003bae <HAL_RCC_OscConfig+0x2ea>
 8003ba0:	4b64      	ldr	r3, [pc, #400]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003ba2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003ba4:	4a63      	ldr	r2, [pc, #396]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003ba6:	f043 0301 	orr.w	r3, r3, #1
 8003baa:	6713      	str	r3, [r2, #112]	@ 0x70
 8003bac:	e01c      	b.n	8003be8 <HAL_RCC_OscConfig+0x324>
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	689b      	ldr	r3, [r3, #8]
 8003bb2:	2b05      	cmp	r3, #5
 8003bb4:	d10c      	bne.n	8003bd0 <HAL_RCC_OscConfig+0x30c>
 8003bb6:	4b5f      	ldr	r3, [pc, #380]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bb8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003bba:	4a5e      	ldr	r2, [pc, #376]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bbc:	f043 0304 	orr.w	r3, r3, #4
 8003bc0:	6713      	str	r3, [r2, #112]	@ 0x70
 8003bc2:	4b5c      	ldr	r3, [pc, #368]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bc4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003bc6:	4a5b      	ldr	r2, [pc, #364]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bc8:	f043 0301 	orr.w	r3, r3, #1
 8003bcc:	6713      	str	r3, [r2, #112]	@ 0x70
 8003bce:	e00b      	b.n	8003be8 <HAL_RCC_OscConfig+0x324>
 8003bd0:	4b58      	ldr	r3, [pc, #352]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bd2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003bd4:	4a57      	ldr	r2, [pc, #348]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bd6:	f023 0301 	bic.w	r3, r3, #1
 8003bda:	6713      	str	r3, [r2, #112]	@ 0x70
 8003bdc:	4b55      	ldr	r3, [pc, #340]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003bde:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003be0:	4a54      	ldr	r2, [pc, #336]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003be2:	f023 0304 	bic.w	r3, r3, #4
 8003be6:	6713      	str	r3, [r2, #112]	@ 0x70
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	689b      	ldr	r3, [r3, #8]
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d015      	beq.n	8003c1c <HAL_RCC_OscConfig+0x358>
 8003bf0:	f7fe f898 	bl	8001d24 <HAL_GetTick>
 8003bf4:	6138      	str	r0, [r7, #16]
 8003bf6:	e00a      	b.n	8003c0e <HAL_RCC_OscConfig+0x34a>
 8003bf8:	f7fe f894 	bl	8001d24 <HAL_GetTick>
 8003bfc:	4602      	mov	r2, r0
 8003bfe:	693b      	ldr	r3, [r7, #16]
 8003c00:	1ad3      	subs	r3, r2, r3
 8003c02:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c06:	4293      	cmp	r3, r2
 8003c08:	d901      	bls.n	8003c0e <HAL_RCC_OscConfig+0x34a>
 8003c0a:	2303      	movs	r3, #3
 8003c0c:	e0cb      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003c0e:	4b49      	ldr	r3, [pc, #292]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003c10:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c12:	f003 0302 	and.w	r3, r3, #2
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d0ee      	beq.n	8003bf8 <HAL_RCC_OscConfig+0x334>
 8003c1a:	e014      	b.n	8003c46 <HAL_RCC_OscConfig+0x382>
 8003c1c:	f7fe f882 	bl	8001d24 <HAL_GetTick>
 8003c20:	6138      	str	r0, [r7, #16]
 8003c22:	e00a      	b.n	8003c3a <HAL_RCC_OscConfig+0x376>
 8003c24:	f7fe f87e 	bl	8001d24 <HAL_GetTick>
 8003c28:	4602      	mov	r2, r0
 8003c2a:	693b      	ldr	r3, [r7, #16]
 8003c2c:	1ad3      	subs	r3, r2, r3
 8003c2e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c32:	4293      	cmp	r3, r2
 8003c34:	d901      	bls.n	8003c3a <HAL_RCC_OscConfig+0x376>
 8003c36:	2303      	movs	r3, #3
 8003c38:	e0b5      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003c3a:	4b3e      	ldr	r3, [pc, #248]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003c3c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c3e:	f003 0302 	and.w	r3, r3, #2
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d1ee      	bne.n	8003c24 <HAL_RCC_OscConfig+0x360>
 8003c46:	7dfb      	ldrb	r3, [r7, #23]
 8003c48:	2b01      	cmp	r3, #1
 8003c4a:	d105      	bne.n	8003c58 <HAL_RCC_OscConfig+0x394>
 8003c4c:	4b39      	ldr	r3, [pc, #228]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003c4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c50:	4a38      	ldr	r2, [pc, #224]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003c52:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003c56:	6413      	str	r3, [r2, #64]	@ 0x40
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	699b      	ldr	r3, [r3, #24]
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	f000 80a1 	beq.w	8003da4 <HAL_RCC_OscConfig+0x4e0>
 8003c62:	4b34      	ldr	r3, [pc, #208]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003c64:	689b      	ldr	r3, [r3, #8]
 8003c66:	f003 030c 	and.w	r3, r3, #12
 8003c6a:	2b08      	cmp	r3, #8
 8003c6c:	d05c      	beq.n	8003d28 <HAL_RCC_OscConfig+0x464>
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	699b      	ldr	r3, [r3, #24]
 8003c72:	2b02      	cmp	r3, #2
 8003c74:	d141      	bne.n	8003cfa <HAL_RCC_OscConfig+0x436>
 8003c76:	4b31      	ldr	r3, [pc, #196]	@ (8003d3c <HAL_RCC_OscConfig+0x478>)
 8003c78:	2200      	movs	r2, #0
 8003c7a:	601a      	str	r2, [r3, #0]
 8003c7c:	f7fe f852 	bl	8001d24 <HAL_GetTick>
 8003c80:	6138      	str	r0, [r7, #16]
 8003c82:	e008      	b.n	8003c96 <HAL_RCC_OscConfig+0x3d2>
 8003c84:	f7fe f84e 	bl	8001d24 <HAL_GetTick>
 8003c88:	4602      	mov	r2, r0
 8003c8a:	693b      	ldr	r3, [r7, #16]
 8003c8c:	1ad3      	subs	r3, r2, r3
 8003c8e:	2b02      	cmp	r3, #2
 8003c90:	d901      	bls.n	8003c96 <HAL_RCC_OscConfig+0x3d2>
 8003c92:	2303      	movs	r3, #3
 8003c94:	e087      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003c96:	4b27      	ldr	r3, [pc, #156]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d1f0      	bne.n	8003c84 <HAL_RCC_OscConfig+0x3c0>
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	69da      	ldr	r2, [r3, #28]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	6a1b      	ldr	r3, [r3, #32]
 8003caa:	431a      	orrs	r2, r3
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003cb0:	019b      	lsls	r3, r3, #6
 8003cb2:	431a      	orrs	r2, r3
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003cb8:	085b      	lsrs	r3, r3, #1
 8003cba:	3b01      	subs	r3, #1
 8003cbc:	041b      	lsls	r3, r3, #16
 8003cbe:	431a      	orrs	r2, r3
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003cc4:	061b      	lsls	r3, r3, #24
 8003cc6:	491b      	ldr	r1, [pc, #108]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003cc8:	4313      	orrs	r3, r2
 8003cca:	604b      	str	r3, [r1, #4]
 8003ccc:	4b1b      	ldr	r3, [pc, #108]	@ (8003d3c <HAL_RCC_OscConfig+0x478>)
 8003cce:	2201      	movs	r2, #1
 8003cd0:	601a      	str	r2, [r3, #0]
 8003cd2:	f7fe f827 	bl	8001d24 <HAL_GetTick>
 8003cd6:	6138      	str	r0, [r7, #16]
 8003cd8:	e008      	b.n	8003cec <HAL_RCC_OscConfig+0x428>
 8003cda:	f7fe f823 	bl	8001d24 <HAL_GetTick>
 8003cde:	4602      	mov	r2, r0
 8003ce0:	693b      	ldr	r3, [r7, #16]
 8003ce2:	1ad3      	subs	r3, r2, r3
 8003ce4:	2b02      	cmp	r3, #2
 8003ce6:	d901      	bls.n	8003cec <HAL_RCC_OscConfig+0x428>
 8003ce8:	2303      	movs	r3, #3
 8003cea:	e05c      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003cec:	4b11      	ldr	r3, [pc, #68]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d0f0      	beq.n	8003cda <HAL_RCC_OscConfig+0x416>
 8003cf8:	e054      	b.n	8003da4 <HAL_RCC_OscConfig+0x4e0>
 8003cfa:	4b10      	ldr	r3, [pc, #64]	@ (8003d3c <HAL_RCC_OscConfig+0x478>)
 8003cfc:	2200      	movs	r2, #0
 8003cfe:	601a      	str	r2, [r3, #0]
 8003d00:	f7fe f810 	bl	8001d24 <HAL_GetTick>
 8003d04:	6138      	str	r0, [r7, #16]
 8003d06:	e008      	b.n	8003d1a <HAL_RCC_OscConfig+0x456>
 8003d08:	f7fe f80c 	bl	8001d24 <HAL_GetTick>
 8003d0c:	4602      	mov	r2, r0
 8003d0e:	693b      	ldr	r3, [r7, #16]
 8003d10:	1ad3      	subs	r3, r2, r3
 8003d12:	2b02      	cmp	r3, #2
 8003d14:	d901      	bls.n	8003d1a <HAL_RCC_OscConfig+0x456>
 8003d16:	2303      	movs	r3, #3
 8003d18:	e045      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003d1a:	4b06      	ldr	r3, [pc, #24]	@ (8003d34 <HAL_RCC_OscConfig+0x470>)
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003d22:	2b00      	cmp	r3, #0
 8003d24:	d1f0      	bne.n	8003d08 <HAL_RCC_OscConfig+0x444>
 8003d26:	e03d      	b.n	8003da4 <HAL_RCC_OscConfig+0x4e0>
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	699b      	ldr	r3, [r3, #24]
 8003d2c:	2b01      	cmp	r3, #1
 8003d2e:	d107      	bne.n	8003d40 <HAL_RCC_OscConfig+0x47c>
 8003d30:	2301      	movs	r3, #1
 8003d32:	e038      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003d34:	40023800 	.word	0x40023800
 8003d38:	40007000 	.word	0x40007000
 8003d3c:	42470060 	.word	0x42470060
 8003d40:	4b1b      	ldr	r3, [pc, #108]	@ (8003db0 <HAL_RCC_OscConfig+0x4ec>)
 8003d42:	685b      	ldr	r3, [r3, #4]
 8003d44:	60fb      	str	r3, [r7, #12]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	699b      	ldr	r3, [r3, #24]
 8003d4a:	2b01      	cmp	r3, #1
 8003d4c:	d028      	beq.n	8003da0 <HAL_RCC_OscConfig+0x4dc>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	69db      	ldr	r3, [r3, #28]
 8003d58:	429a      	cmp	r2, r3
 8003d5a:	d121      	bne.n	8003da0 <HAL_RCC_OscConfig+0x4dc>
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	6a1b      	ldr	r3, [r3, #32]
 8003d66:	429a      	cmp	r2, r3
 8003d68:	d11a      	bne.n	8003da0 <HAL_RCC_OscConfig+0x4dc>
 8003d6a:	68fa      	ldr	r2, [r7, #12]
 8003d6c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003d70:	4013      	ands	r3, r2
 8003d72:	687a      	ldr	r2, [r7, #4]
 8003d74:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8003d76:	0192      	lsls	r2, r2, #6
 8003d78:	4293      	cmp	r3, r2
 8003d7a:	d111      	bne.n	8003da0 <HAL_RCC_OscConfig+0x4dc>
 8003d7c:	68fb      	ldr	r3, [r7, #12]
 8003d7e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003d86:	085b      	lsrs	r3, r3, #1
 8003d88:	3b01      	subs	r3, #1
 8003d8a:	041b      	lsls	r3, r3, #16
 8003d8c:	429a      	cmp	r2, r3
 8003d8e:	d107      	bne.n	8003da0 <HAL_RCC_OscConfig+0x4dc>
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d9a:	061b      	lsls	r3, r3, #24
 8003d9c:	429a      	cmp	r2, r3
 8003d9e:	d001      	beq.n	8003da4 <HAL_RCC_OscConfig+0x4e0>
 8003da0:	2301      	movs	r3, #1
 8003da2:	e000      	b.n	8003da6 <HAL_RCC_OscConfig+0x4e2>
 8003da4:	2300      	movs	r3, #0
 8003da6:	4618      	mov	r0, r3
 8003da8:	3718      	adds	r7, #24
 8003daa:	46bd      	mov	sp, r7
 8003dac:	bd80      	pop	{r7, pc}
 8003dae:	bf00      	nop
 8003db0:	40023800 	.word	0x40023800

08003db4 <HAL_RCC_ClockConfig>:
 8003db4:	b580      	push	{r7, lr}
 8003db6:	b084      	sub	sp, #16
 8003db8:	af00      	add	r7, sp, #0
 8003dba:	6078      	str	r0, [r7, #4]
 8003dbc:	6039      	str	r1, [r7, #0]
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d101      	bne.n	8003dc8 <HAL_RCC_ClockConfig+0x14>
 8003dc4:	2301      	movs	r3, #1
 8003dc6:	e0cc      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003dc8:	4b68      	ldr	r3, [pc, #416]	@ (8003f6c <HAL_RCC_ClockConfig+0x1b8>)
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	f003 0307 	and.w	r3, r3, #7
 8003dd0:	683a      	ldr	r2, [r7, #0]
 8003dd2:	429a      	cmp	r2, r3
 8003dd4:	d90c      	bls.n	8003df0 <HAL_RCC_ClockConfig+0x3c>
 8003dd6:	4b65      	ldr	r3, [pc, #404]	@ (8003f6c <HAL_RCC_ClockConfig+0x1b8>)
 8003dd8:	683a      	ldr	r2, [r7, #0]
 8003dda:	b2d2      	uxtb	r2, r2
 8003ddc:	701a      	strb	r2, [r3, #0]
 8003dde:	4b63      	ldr	r3, [pc, #396]	@ (8003f6c <HAL_RCC_ClockConfig+0x1b8>)
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	f003 0307 	and.w	r3, r3, #7
 8003de6:	683a      	ldr	r2, [r7, #0]
 8003de8:	429a      	cmp	r2, r3
 8003dea:	d001      	beq.n	8003df0 <HAL_RCC_ClockConfig+0x3c>
 8003dec:	2301      	movs	r3, #1
 8003dee:	e0b8      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	f003 0302 	and.w	r3, r3, #2
 8003df8:	2b00      	cmp	r3, #0
 8003dfa:	d020      	beq.n	8003e3e <HAL_RCC_ClockConfig+0x8a>
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	f003 0304 	and.w	r3, r3, #4
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d005      	beq.n	8003e14 <HAL_RCC_ClockConfig+0x60>
 8003e08:	4b59      	ldr	r3, [pc, #356]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e0a:	689b      	ldr	r3, [r3, #8]
 8003e0c:	4a58      	ldr	r2, [pc, #352]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e0e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8003e12:	6093      	str	r3, [r2, #8]
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	f003 0308 	and.w	r3, r3, #8
 8003e1c:	2b00      	cmp	r3, #0
 8003e1e:	d005      	beq.n	8003e2c <HAL_RCC_ClockConfig+0x78>
 8003e20:	4b53      	ldr	r3, [pc, #332]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e22:	689b      	ldr	r3, [r3, #8]
 8003e24:	4a52      	ldr	r2, [pc, #328]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e26:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003e2a:	6093      	str	r3, [r2, #8]
 8003e2c:	4b50      	ldr	r3, [pc, #320]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e2e:	689b      	ldr	r3, [r3, #8]
 8003e30:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	689b      	ldr	r3, [r3, #8]
 8003e38:	494d      	ldr	r1, [pc, #308]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e3a:	4313      	orrs	r3, r2
 8003e3c:	608b      	str	r3, [r1, #8]
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	f003 0301 	and.w	r3, r3, #1
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d044      	beq.n	8003ed4 <HAL_RCC_ClockConfig+0x120>
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	685b      	ldr	r3, [r3, #4]
 8003e4e:	2b01      	cmp	r3, #1
 8003e50:	d107      	bne.n	8003e62 <HAL_RCC_ClockConfig+0xae>
 8003e52:	4b47      	ldr	r3, [pc, #284]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	d119      	bne.n	8003e92 <HAL_RCC_ClockConfig+0xde>
 8003e5e:	2301      	movs	r3, #1
 8003e60:	e07f      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	685b      	ldr	r3, [r3, #4]
 8003e66:	2b02      	cmp	r3, #2
 8003e68:	d003      	beq.n	8003e72 <HAL_RCC_ClockConfig+0xbe>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	685b      	ldr	r3, [r3, #4]
 8003e6e:	2b03      	cmp	r3, #3
 8003e70:	d107      	bne.n	8003e82 <HAL_RCC_ClockConfig+0xce>
 8003e72:	4b3f      	ldr	r3, [pc, #252]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003e7a:	2b00      	cmp	r3, #0
 8003e7c:	d109      	bne.n	8003e92 <HAL_RCC_ClockConfig+0xde>
 8003e7e:	2301      	movs	r3, #1
 8003e80:	e06f      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003e82:	4b3b      	ldr	r3, [pc, #236]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	f003 0302 	and.w	r3, r3, #2
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d101      	bne.n	8003e92 <HAL_RCC_ClockConfig+0xde>
 8003e8e:	2301      	movs	r3, #1
 8003e90:	e067      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003e92:	4b37      	ldr	r3, [pc, #220]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003e94:	689b      	ldr	r3, [r3, #8]
 8003e96:	f023 0203 	bic.w	r2, r3, #3
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	685b      	ldr	r3, [r3, #4]
 8003e9e:	4934      	ldr	r1, [pc, #208]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003ea0:	4313      	orrs	r3, r2
 8003ea2:	608b      	str	r3, [r1, #8]
 8003ea4:	f7fd ff3e 	bl	8001d24 <HAL_GetTick>
 8003ea8:	60f8      	str	r0, [r7, #12]
 8003eaa:	e00a      	b.n	8003ec2 <HAL_RCC_ClockConfig+0x10e>
 8003eac:	f7fd ff3a 	bl	8001d24 <HAL_GetTick>
 8003eb0:	4602      	mov	r2, r0
 8003eb2:	68fb      	ldr	r3, [r7, #12]
 8003eb4:	1ad3      	subs	r3, r2, r3
 8003eb6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003eba:	4293      	cmp	r3, r2
 8003ebc:	d901      	bls.n	8003ec2 <HAL_RCC_ClockConfig+0x10e>
 8003ebe:	2303      	movs	r3, #3
 8003ec0:	e04f      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003ec2:	4b2b      	ldr	r3, [pc, #172]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003ec4:	689b      	ldr	r3, [r3, #8]
 8003ec6:	f003 020c 	and.w	r2, r3, #12
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	685b      	ldr	r3, [r3, #4]
 8003ece:	009b      	lsls	r3, r3, #2
 8003ed0:	429a      	cmp	r2, r3
 8003ed2:	d1eb      	bne.n	8003eac <HAL_RCC_ClockConfig+0xf8>
 8003ed4:	4b25      	ldr	r3, [pc, #148]	@ (8003f6c <HAL_RCC_ClockConfig+0x1b8>)
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	f003 0307 	and.w	r3, r3, #7
 8003edc:	683a      	ldr	r2, [r7, #0]
 8003ede:	429a      	cmp	r2, r3
 8003ee0:	d20c      	bcs.n	8003efc <HAL_RCC_ClockConfig+0x148>
 8003ee2:	4b22      	ldr	r3, [pc, #136]	@ (8003f6c <HAL_RCC_ClockConfig+0x1b8>)
 8003ee4:	683a      	ldr	r2, [r7, #0]
 8003ee6:	b2d2      	uxtb	r2, r2
 8003ee8:	701a      	strb	r2, [r3, #0]
 8003eea:	4b20      	ldr	r3, [pc, #128]	@ (8003f6c <HAL_RCC_ClockConfig+0x1b8>)
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	f003 0307 	and.w	r3, r3, #7
 8003ef2:	683a      	ldr	r2, [r7, #0]
 8003ef4:	429a      	cmp	r2, r3
 8003ef6:	d001      	beq.n	8003efc <HAL_RCC_ClockConfig+0x148>
 8003ef8:	2301      	movs	r3, #1
 8003efa:	e032      	b.n	8003f62 <HAL_RCC_ClockConfig+0x1ae>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	f003 0304 	and.w	r3, r3, #4
 8003f04:	2b00      	cmp	r3, #0
 8003f06:	d008      	beq.n	8003f1a <HAL_RCC_ClockConfig+0x166>
 8003f08:	4b19      	ldr	r3, [pc, #100]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003f0a:	689b      	ldr	r3, [r3, #8]
 8003f0c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	68db      	ldr	r3, [r3, #12]
 8003f14:	4916      	ldr	r1, [pc, #88]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003f16:	4313      	orrs	r3, r2
 8003f18:	608b      	str	r3, [r1, #8]
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	f003 0308 	and.w	r3, r3, #8
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d009      	beq.n	8003f3a <HAL_RCC_ClockConfig+0x186>
 8003f26:	4b12      	ldr	r3, [pc, #72]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003f28:	689b      	ldr	r3, [r3, #8]
 8003f2a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	691b      	ldr	r3, [r3, #16]
 8003f32:	00db      	lsls	r3, r3, #3
 8003f34:	490e      	ldr	r1, [pc, #56]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003f36:	4313      	orrs	r3, r2
 8003f38:	608b      	str	r3, [r1, #8]
 8003f3a:	f000 f821 	bl	8003f80 <HAL_RCC_GetSysClockFreq>
 8003f3e:	4602      	mov	r2, r0
 8003f40:	4b0b      	ldr	r3, [pc, #44]	@ (8003f70 <HAL_RCC_ClockConfig+0x1bc>)
 8003f42:	689b      	ldr	r3, [r3, #8]
 8003f44:	091b      	lsrs	r3, r3, #4
 8003f46:	f003 030f 	and.w	r3, r3, #15
 8003f4a:	490a      	ldr	r1, [pc, #40]	@ (8003f74 <HAL_RCC_ClockConfig+0x1c0>)
 8003f4c:	5ccb      	ldrb	r3, [r1, r3]
 8003f4e:	fa22 f303 	lsr.w	r3, r2, r3
 8003f52:	4a09      	ldr	r2, [pc, #36]	@ (8003f78 <HAL_RCC_ClockConfig+0x1c4>)
 8003f54:	6013      	str	r3, [r2, #0]
 8003f56:	4b09      	ldr	r3, [pc, #36]	@ (8003f7c <HAL_RCC_ClockConfig+0x1c8>)
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	4618      	mov	r0, r3
 8003f5c:	f7fd fe9e 	bl	8001c9c <HAL_InitTick>
 8003f60:	2300      	movs	r3, #0
 8003f62:	4618      	mov	r0, r3
 8003f64:	3710      	adds	r7, #16
 8003f66:	46bd      	mov	sp, r7
 8003f68:	bd80      	pop	{r7, pc}
 8003f6a:	bf00      	nop
 8003f6c:	40023c00 	.word	0x40023c00
 8003f70:	40023800 	.word	0x40023800
 8003f74:	08005c84 	.word	0x08005c84
 8003f78:	20000008 	.word	0x20000008
 8003f7c:	2000000c 	.word	0x2000000c

08003f80 <HAL_RCC_GetSysClockFreq>:
 8003f80:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003f84:	b094      	sub	sp, #80	@ 0x50
 8003f86:	af00      	add	r7, sp, #0
 8003f88:	2300      	movs	r3, #0
 8003f8a:	647b      	str	r3, [r7, #68]	@ 0x44
 8003f8c:	2300      	movs	r3, #0
 8003f8e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003f90:	2300      	movs	r3, #0
 8003f92:	643b      	str	r3, [r7, #64]	@ 0x40
 8003f94:	2300      	movs	r3, #0
 8003f96:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003f98:	4b79      	ldr	r3, [pc, #484]	@ (8004180 <HAL_RCC_GetSysClockFreq+0x200>)
 8003f9a:	689b      	ldr	r3, [r3, #8]
 8003f9c:	f003 030c 	and.w	r3, r3, #12
 8003fa0:	2b08      	cmp	r3, #8
 8003fa2:	d00d      	beq.n	8003fc0 <HAL_RCC_GetSysClockFreq+0x40>
 8003fa4:	2b08      	cmp	r3, #8
 8003fa6:	f200 80e1 	bhi.w	800416c <HAL_RCC_GetSysClockFreq+0x1ec>
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d002      	beq.n	8003fb4 <HAL_RCC_GetSysClockFreq+0x34>
 8003fae:	2b04      	cmp	r3, #4
 8003fb0:	d003      	beq.n	8003fba <HAL_RCC_GetSysClockFreq+0x3a>
 8003fb2:	e0db      	b.n	800416c <HAL_RCC_GetSysClockFreq+0x1ec>
 8003fb4:	4b73      	ldr	r3, [pc, #460]	@ (8004184 <HAL_RCC_GetSysClockFreq+0x204>)
 8003fb6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003fb8:	e0db      	b.n	8004172 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003fba:	4b73      	ldr	r3, [pc, #460]	@ (8004188 <HAL_RCC_GetSysClockFreq+0x208>)
 8003fbc:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003fbe:	e0d8      	b.n	8004172 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003fc0:	4b6f      	ldr	r3, [pc, #444]	@ (8004180 <HAL_RCC_GetSysClockFreq+0x200>)
 8003fc2:	685b      	ldr	r3, [r3, #4]
 8003fc4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003fc8:	647b      	str	r3, [r7, #68]	@ 0x44
 8003fca:	4b6d      	ldr	r3, [pc, #436]	@ (8004180 <HAL_RCC_GetSysClockFreq+0x200>)
 8003fcc:	685b      	ldr	r3, [r3, #4]
 8003fce:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	d063      	beq.n	800409e <HAL_RCC_GetSysClockFreq+0x11e>
 8003fd6:	4b6a      	ldr	r3, [pc, #424]	@ (8004180 <HAL_RCC_GetSysClockFreq+0x200>)
 8003fd8:	685b      	ldr	r3, [r3, #4]
 8003fda:	099b      	lsrs	r3, r3, #6
 8003fdc:	2200      	movs	r2, #0
 8003fde:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003fe0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8003fe2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003fe4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003fe8:	633b      	str	r3, [r7, #48]	@ 0x30
 8003fea:	2300      	movs	r3, #0
 8003fec:	637b      	str	r3, [r7, #52]	@ 0x34
 8003fee:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8003ff2:	4622      	mov	r2, r4
 8003ff4:	462b      	mov	r3, r5
 8003ff6:	f04f 0000 	mov.w	r0, #0
 8003ffa:	f04f 0100 	mov.w	r1, #0
 8003ffe:	0159      	lsls	r1, r3, #5
 8004000:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004004:	0150      	lsls	r0, r2, #5
 8004006:	4602      	mov	r2, r0
 8004008:	460b      	mov	r3, r1
 800400a:	4621      	mov	r1, r4
 800400c:	1a51      	subs	r1, r2, r1
 800400e:	6139      	str	r1, [r7, #16]
 8004010:	4629      	mov	r1, r5
 8004012:	eb63 0301 	sbc.w	r3, r3, r1
 8004016:	617b      	str	r3, [r7, #20]
 8004018:	f04f 0200 	mov.w	r2, #0
 800401c:	f04f 0300 	mov.w	r3, #0
 8004020:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004024:	4659      	mov	r1, fp
 8004026:	018b      	lsls	r3, r1, #6
 8004028:	4651      	mov	r1, sl
 800402a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800402e:	4651      	mov	r1, sl
 8004030:	018a      	lsls	r2, r1, #6
 8004032:	4651      	mov	r1, sl
 8004034:	ebb2 0801 	subs.w	r8, r2, r1
 8004038:	4659      	mov	r1, fp
 800403a:	eb63 0901 	sbc.w	r9, r3, r1
 800403e:	f04f 0200 	mov.w	r2, #0
 8004042:	f04f 0300 	mov.w	r3, #0
 8004046:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800404a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800404e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004052:	4690      	mov	r8, r2
 8004054:	4699      	mov	r9, r3
 8004056:	4623      	mov	r3, r4
 8004058:	eb18 0303 	adds.w	r3, r8, r3
 800405c:	60bb      	str	r3, [r7, #8]
 800405e:	462b      	mov	r3, r5
 8004060:	eb49 0303 	adc.w	r3, r9, r3
 8004064:	60fb      	str	r3, [r7, #12]
 8004066:	f04f 0200 	mov.w	r2, #0
 800406a:	f04f 0300 	mov.w	r3, #0
 800406e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8004072:	4629      	mov	r1, r5
 8004074:	024b      	lsls	r3, r1, #9
 8004076:	4621      	mov	r1, r4
 8004078:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800407c:	4621      	mov	r1, r4
 800407e:	024a      	lsls	r2, r1, #9
 8004080:	4610      	mov	r0, r2
 8004082:	4619      	mov	r1, r3
 8004084:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004086:	2200      	movs	r2, #0
 8004088:	62bb      	str	r3, [r7, #40]	@ 0x28
 800408a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800408c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004090:	f7fc f8ee 	bl	8000270 <__aeabi_uldivmod>
 8004094:	4602      	mov	r2, r0
 8004096:	460b      	mov	r3, r1
 8004098:	4613      	mov	r3, r2
 800409a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800409c:	e058      	b.n	8004150 <HAL_RCC_GetSysClockFreq+0x1d0>
 800409e:	4b38      	ldr	r3, [pc, #224]	@ (8004180 <HAL_RCC_GetSysClockFreq+0x200>)
 80040a0:	685b      	ldr	r3, [r3, #4]
 80040a2:	099b      	lsrs	r3, r3, #6
 80040a4:	2200      	movs	r2, #0
 80040a6:	4618      	mov	r0, r3
 80040a8:	4611      	mov	r1, r2
 80040aa:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80040ae:	623b      	str	r3, [r7, #32]
 80040b0:	2300      	movs	r3, #0
 80040b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80040b4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80040b8:	4642      	mov	r2, r8
 80040ba:	464b      	mov	r3, r9
 80040bc:	f04f 0000 	mov.w	r0, #0
 80040c0:	f04f 0100 	mov.w	r1, #0
 80040c4:	0159      	lsls	r1, r3, #5
 80040c6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80040ca:	0150      	lsls	r0, r2, #5
 80040cc:	4602      	mov	r2, r0
 80040ce:	460b      	mov	r3, r1
 80040d0:	4641      	mov	r1, r8
 80040d2:	ebb2 0a01 	subs.w	sl, r2, r1
 80040d6:	4649      	mov	r1, r9
 80040d8:	eb63 0b01 	sbc.w	fp, r3, r1
 80040dc:	f04f 0200 	mov.w	r2, #0
 80040e0:	f04f 0300 	mov.w	r3, #0
 80040e4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80040e8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80040ec:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80040f0:	ebb2 040a 	subs.w	r4, r2, sl
 80040f4:	eb63 050b 	sbc.w	r5, r3, fp
 80040f8:	f04f 0200 	mov.w	r2, #0
 80040fc:	f04f 0300 	mov.w	r3, #0
 8004100:	00eb      	lsls	r3, r5, #3
 8004102:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004106:	00e2      	lsls	r2, r4, #3
 8004108:	4614      	mov	r4, r2
 800410a:	461d      	mov	r5, r3
 800410c:	4643      	mov	r3, r8
 800410e:	18e3      	adds	r3, r4, r3
 8004110:	603b      	str	r3, [r7, #0]
 8004112:	464b      	mov	r3, r9
 8004114:	eb45 0303 	adc.w	r3, r5, r3
 8004118:	607b      	str	r3, [r7, #4]
 800411a:	f04f 0200 	mov.w	r2, #0
 800411e:	f04f 0300 	mov.w	r3, #0
 8004122:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004126:	4629      	mov	r1, r5
 8004128:	028b      	lsls	r3, r1, #10
 800412a:	4621      	mov	r1, r4
 800412c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004130:	4621      	mov	r1, r4
 8004132:	028a      	lsls	r2, r1, #10
 8004134:	4610      	mov	r0, r2
 8004136:	4619      	mov	r1, r3
 8004138:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800413a:	2200      	movs	r2, #0
 800413c:	61bb      	str	r3, [r7, #24]
 800413e:	61fa      	str	r2, [r7, #28]
 8004140:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004144:	f7fc f894 	bl	8000270 <__aeabi_uldivmod>
 8004148:	4602      	mov	r2, r0
 800414a:	460b      	mov	r3, r1
 800414c:	4613      	mov	r3, r2
 800414e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004150:	4b0b      	ldr	r3, [pc, #44]	@ (8004180 <HAL_RCC_GetSysClockFreq+0x200>)
 8004152:	685b      	ldr	r3, [r3, #4]
 8004154:	0c1b      	lsrs	r3, r3, #16
 8004156:	f003 0303 	and.w	r3, r3, #3
 800415a:	3301      	adds	r3, #1
 800415c:	005b      	lsls	r3, r3, #1
 800415e:	643b      	str	r3, [r7, #64]	@ 0x40
 8004160:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004162:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004164:	fbb2 f3f3 	udiv	r3, r2, r3
 8004168:	64bb      	str	r3, [r7, #72]	@ 0x48
 800416a:	e002      	b.n	8004172 <HAL_RCC_GetSysClockFreq+0x1f2>
 800416c:	4b05      	ldr	r3, [pc, #20]	@ (8004184 <HAL_RCC_GetSysClockFreq+0x204>)
 800416e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004170:	bf00      	nop
 8004172:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004174:	4618      	mov	r0, r3
 8004176:	3750      	adds	r7, #80	@ 0x50
 8004178:	46bd      	mov	sp, r7
 800417a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800417e:	bf00      	nop
 8004180:	40023800 	.word	0x40023800
 8004184:	00f42400 	.word	0x00f42400
 8004188:	007a1200 	.word	0x007a1200

0800418c <HAL_RCC_GetHCLKFreq>:
 800418c:	b480      	push	{r7}
 800418e:	af00      	add	r7, sp, #0
 8004190:	4b03      	ldr	r3, [pc, #12]	@ (80041a0 <HAL_RCC_GetHCLKFreq+0x14>)
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	4618      	mov	r0, r3
 8004196:	46bd      	mov	sp, r7
 8004198:	f85d 7b04 	ldr.w	r7, [sp], #4
 800419c:	4770      	bx	lr
 800419e:	bf00      	nop
 80041a0:	20000008 	.word	0x20000008

080041a4 <HAL_RCC_GetPCLK1Freq>:
 80041a4:	b580      	push	{r7, lr}
 80041a6:	af00      	add	r7, sp, #0
 80041a8:	f7ff fff0 	bl	800418c <HAL_RCC_GetHCLKFreq>
 80041ac:	4602      	mov	r2, r0
 80041ae:	4b05      	ldr	r3, [pc, #20]	@ (80041c4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80041b0:	689b      	ldr	r3, [r3, #8]
 80041b2:	0a9b      	lsrs	r3, r3, #10
 80041b4:	f003 0307 	and.w	r3, r3, #7
 80041b8:	4903      	ldr	r1, [pc, #12]	@ (80041c8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80041ba:	5ccb      	ldrb	r3, [r1, r3]
 80041bc:	fa22 f303 	lsr.w	r3, r2, r3
 80041c0:	4618      	mov	r0, r3
 80041c2:	bd80      	pop	{r7, pc}
 80041c4:	40023800 	.word	0x40023800
 80041c8:	08005c94 	.word	0x08005c94

080041cc <HAL_RCC_GetPCLK2Freq>:
 80041cc:	b580      	push	{r7, lr}
 80041ce:	af00      	add	r7, sp, #0
 80041d0:	f7ff ffdc 	bl	800418c <HAL_RCC_GetHCLKFreq>
 80041d4:	4602      	mov	r2, r0
 80041d6:	4b05      	ldr	r3, [pc, #20]	@ (80041ec <HAL_RCC_GetPCLK2Freq+0x20>)
 80041d8:	689b      	ldr	r3, [r3, #8]
 80041da:	0b5b      	lsrs	r3, r3, #13
 80041dc:	f003 0307 	and.w	r3, r3, #7
 80041e0:	4903      	ldr	r1, [pc, #12]	@ (80041f0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80041e2:	5ccb      	ldrb	r3, [r1, r3]
 80041e4:	fa22 f303 	lsr.w	r3, r2, r3
 80041e8:	4618      	mov	r0, r3
 80041ea:	bd80      	pop	{r7, pc}
 80041ec:	40023800 	.word	0x40023800
 80041f0:	08005c94 	.word	0x08005c94

080041f4 <HAL_UART_Init>:
 80041f4:	b580      	push	{r7, lr}
 80041f6:	b082      	sub	sp, #8
 80041f8:	af00      	add	r7, sp, #0
 80041fa:	6078      	str	r0, [r7, #4]
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d101      	bne.n	8004206 <HAL_UART_Init+0x12>
 8004202:	2301      	movs	r3, #1
 8004204:	e03f      	b.n	8004286 <HAL_UART_Init+0x92>
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800420c:	b2db      	uxtb	r3, r3
 800420e:	2b00      	cmp	r3, #0
 8004210:	d106      	bne.n	8004220 <HAL_UART_Init+0x2c>
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	2200      	movs	r2, #0
 8004216:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800421a:	6878      	ldr	r0, [r7, #4]
 800421c:	f7fd fbf6 	bl	8001a0c <HAL_UART_MspInit>
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	2224      	movs	r2, #36	@ 0x24
 8004224:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	68da      	ldr	r2, [r3, #12]
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004236:	60da      	str	r2, [r3, #12]
 8004238:	6878      	ldr	r0, [r7, #4]
 800423a:	f000 fddf 	bl	8004dfc <UART_SetConfig>
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	691a      	ldr	r2, [r3, #16]
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800424c:	611a      	str	r2, [r3, #16]
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	695a      	ldr	r2, [r3, #20]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800425c:	615a      	str	r2, [r3, #20]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	68da      	ldr	r2, [r3, #12]
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800426c:	60da      	str	r2, [r3, #12]
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	2200      	movs	r2, #0
 8004272:	641a      	str	r2, [r3, #64]	@ 0x40
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2220      	movs	r2, #32
 8004278:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	2220      	movs	r2, #32
 8004280:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004284:	2300      	movs	r3, #0
 8004286:	4618      	mov	r0, r3
 8004288:	3708      	adds	r7, #8
 800428a:	46bd      	mov	sp, r7
 800428c:	bd80      	pop	{r7, pc}

0800428e <HAL_UART_Transmit>:
 800428e:	b580      	push	{r7, lr}
 8004290:	b08a      	sub	sp, #40	@ 0x28
 8004292:	af02      	add	r7, sp, #8
 8004294:	60f8      	str	r0, [r7, #12]
 8004296:	60b9      	str	r1, [r7, #8]
 8004298:	603b      	str	r3, [r7, #0]
 800429a:	4613      	mov	r3, r2
 800429c:	80fb      	strh	r3, [r7, #6]
 800429e:	2300      	movs	r3, #0
 80042a0:	617b      	str	r3, [r7, #20]
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80042a8:	b2db      	uxtb	r3, r3
 80042aa:	2b20      	cmp	r3, #32
 80042ac:	d17c      	bne.n	80043a8 <HAL_UART_Transmit+0x11a>
 80042ae:	68bb      	ldr	r3, [r7, #8]
 80042b0:	2b00      	cmp	r3, #0
 80042b2:	d002      	beq.n	80042ba <HAL_UART_Transmit+0x2c>
 80042b4:	88fb      	ldrh	r3, [r7, #6]
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d101      	bne.n	80042be <HAL_UART_Transmit+0x30>
 80042ba:	2301      	movs	r3, #1
 80042bc:	e075      	b.n	80043aa <HAL_UART_Transmit+0x11c>
 80042be:	68fb      	ldr	r3, [r7, #12]
 80042c0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80042c4:	2b01      	cmp	r3, #1
 80042c6:	d101      	bne.n	80042cc <HAL_UART_Transmit+0x3e>
 80042c8:	2302      	movs	r3, #2
 80042ca:	e06e      	b.n	80043aa <HAL_UART_Transmit+0x11c>
 80042cc:	68fb      	ldr	r3, [r7, #12]
 80042ce:	2201      	movs	r2, #1
 80042d0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	2200      	movs	r2, #0
 80042d8:	641a      	str	r2, [r3, #64]	@ 0x40
 80042da:	68fb      	ldr	r3, [r7, #12]
 80042dc:	2221      	movs	r2, #33	@ 0x21
 80042de:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80042e2:	f7fd fd1f 	bl	8001d24 <HAL_GetTick>
 80042e6:	6178      	str	r0, [r7, #20]
 80042e8:	68fb      	ldr	r3, [r7, #12]
 80042ea:	88fa      	ldrh	r2, [r7, #6]
 80042ec:	849a      	strh	r2, [r3, #36]	@ 0x24
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	88fa      	ldrh	r2, [r7, #6]
 80042f2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	689b      	ldr	r3, [r3, #8]
 80042f8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80042fc:	d108      	bne.n	8004310 <HAL_UART_Transmit+0x82>
 80042fe:	68fb      	ldr	r3, [r7, #12]
 8004300:	691b      	ldr	r3, [r3, #16]
 8004302:	2b00      	cmp	r3, #0
 8004304:	d104      	bne.n	8004310 <HAL_UART_Transmit+0x82>
 8004306:	2300      	movs	r3, #0
 8004308:	61fb      	str	r3, [r7, #28]
 800430a:	68bb      	ldr	r3, [r7, #8]
 800430c:	61bb      	str	r3, [r7, #24]
 800430e:	e003      	b.n	8004318 <HAL_UART_Transmit+0x8a>
 8004310:	68bb      	ldr	r3, [r7, #8]
 8004312:	61fb      	str	r3, [r7, #28]
 8004314:	2300      	movs	r3, #0
 8004316:	61bb      	str	r3, [r7, #24]
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	2200      	movs	r2, #0
 800431c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004320:	e02a      	b.n	8004378 <HAL_UART_Transmit+0xea>
 8004322:	683b      	ldr	r3, [r7, #0]
 8004324:	9300      	str	r3, [sp, #0]
 8004326:	697b      	ldr	r3, [r7, #20]
 8004328:	2200      	movs	r2, #0
 800432a:	2180      	movs	r1, #128	@ 0x80
 800432c:	68f8      	ldr	r0, [r7, #12]
 800432e:	f000 fb1f 	bl	8004970 <UART_WaitOnFlagUntilTimeout>
 8004332:	4603      	mov	r3, r0
 8004334:	2b00      	cmp	r3, #0
 8004336:	d001      	beq.n	800433c <HAL_UART_Transmit+0xae>
 8004338:	2303      	movs	r3, #3
 800433a:	e036      	b.n	80043aa <HAL_UART_Transmit+0x11c>
 800433c:	69fb      	ldr	r3, [r7, #28]
 800433e:	2b00      	cmp	r3, #0
 8004340:	d10b      	bne.n	800435a <HAL_UART_Transmit+0xcc>
 8004342:	69bb      	ldr	r3, [r7, #24]
 8004344:	881b      	ldrh	r3, [r3, #0]
 8004346:	461a      	mov	r2, r3
 8004348:	68fb      	ldr	r3, [r7, #12]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004350:	605a      	str	r2, [r3, #4]
 8004352:	69bb      	ldr	r3, [r7, #24]
 8004354:	3302      	adds	r3, #2
 8004356:	61bb      	str	r3, [r7, #24]
 8004358:	e007      	b.n	800436a <HAL_UART_Transmit+0xdc>
 800435a:	69fb      	ldr	r3, [r7, #28]
 800435c:	781a      	ldrb	r2, [r3, #0]
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	605a      	str	r2, [r3, #4]
 8004364:	69fb      	ldr	r3, [r7, #28]
 8004366:	3301      	adds	r3, #1
 8004368:	61fb      	str	r3, [r7, #28]
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800436e:	b29b      	uxth	r3, r3
 8004370:	3b01      	subs	r3, #1
 8004372:	b29a      	uxth	r2, r3
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800437c:	b29b      	uxth	r3, r3
 800437e:	2b00      	cmp	r3, #0
 8004380:	d1cf      	bne.n	8004322 <HAL_UART_Transmit+0x94>
 8004382:	683b      	ldr	r3, [r7, #0]
 8004384:	9300      	str	r3, [sp, #0]
 8004386:	697b      	ldr	r3, [r7, #20]
 8004388:	2200      	movs	r2, #0
 800438a:	2140      	movs	r1, #64	@ 0x40
 800438c:	68f8      	ldr	r0, [r7, #12]
 800438e:	f000 faef 	bl	8004970 <UART_WaitOnFlagUntilTimeout>
 8004392:	4603      	mov	r3, r0
 8004394:	2b00      	cmp	r3, #0
 8004396:	d001      	beq.n	800439c <HAL_UART_Transmit+0x10e>
 8004398:	2303      	movs	r3, #3
 800439a:	e006      	b.n	80043aa <HAL_UART_Transmit+0x11c>
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	2220      	movs	r2, #32
 80043a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80043a4:	2300      	movs	r3, #0
 80043a6:	e000      	b.n	80043aa <HAL_UART_Transmit+0x11c>
 80043a8:	2302      	movs	r3, #2
 80043aa:	4618      	mov	r0, r3
 80043ac:	3720      	adds	r7, #32
 80043ae:	46bd      	mov	sp, r7
 80043b0:	bd80      	pop	{r7, pc}

080043b2 <HAL_UART_Receive_IT>:
 80043b2:	b580      	push	{r7, lr}
 80043b4:	b084      	sub	sp, #16
 80043b6:	af00      	add	r7, sp, #0
 80043b8:	60f8      	str	r0, [r7, #12]
 80043ba:	60b9      	str	r1, [r7, #8]
 80043bc:	4613      	mov	r3, r2
 80043be:	80fb      	strh	r3, [r7, #6]
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80043c6:	b2db      	uxtb	r3, r3
 80043c8:	2b20      	cmp	r3, #32
 80043ca:	d11d      	bne.n	8004408 <HAL_UART_Receive_IT+0x56>
 80043cc:	68bb      	ldr	r3, [r7, #8]
 80043ce:	2b00      	cmp	r3, #0
 80043d0:	d002      	beq.n	80043d8 <HAL_UART_Receive_IT+0x26>
 80043d2:	88fb      	ldrh	r3, [r7, #6]
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	d101      	bne.n	80043dc <HAL_UART_Receive_IT+0x2a>
 80043d8:	2301      	movs	r3, #1
 80043da:	e016      	b.n	800440a <HAL_UART_Receive_IT+0x58>
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80043e2:	2b01      	cmp	r3, #1
 80043e4:	d101      	bne.n	80043ea <HAL_UART_Receive_IT+0x38>
 80043e6:	2302      	movs	r3, #2
 80043e8:	e00f      	b.n	800440a <HAL_UART_Receive_IT+0x58>
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	2201      	movs	r2, #1
 80043ee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80043f2:	68fb      	ldr	r3, [r7, #12]
 80043f4:	2200      	movs	r2, #0
 80043f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80043f8:	88fb      	ldrh	r3, [r7, #6]
 80043fa:	461a      	mov	r2, r3
 80043fc:	68b9      	ldr	r1, [r7, #8]
 80043fe:	68f8      	ldr	r0, [r7, #12]
 8004400:	f000 fb24 	bl	8004a4c <UART_Start_Receive_IT>
 8004404:	4603      	mov	r3, r0
 8004406:	e000      	b.n	800440a <HAL_UART_Receive_IT+0x58>
 8004408:	2302      	movs	r3, #2
 800440a:	4618      	mov	r0, r3
 800440c:	3710      	adds	r7, #16
 800440e:	46bd      	mov	sp, r7
 8004410:	bd80      	pop	{r7, pc}
	...

08004414 <HAL_UART_IRQHandler>:
 8004414:	b580      	push	{r7, lr}
 8004416:	b0ba      	sub	sp, #232	@ 0xe8
 8004418:	af00      	add	r7, sp, #0
 800441a:	6078      	str	r0, [r7, #4]
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	68db      	ldr	r3, [r3, #12]
 800442c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	695b      	ldr	r3, [r3, #20]
 8004436:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800443a:	2300      	movs	r3, #0
 800443c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004440:	2300      	movs	r3, #0
 8004442:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004446:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800444a:	f003 030f 	and.w	r3, r3, #15
 800444e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004452:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8004456:	2b00      	cmp	r3, #0
 8004458:	d10f      	bne.n	800447a <HAL_UART_IRQHandler+0x66>
 800445a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800445e:	f003 0320 	and.w	r3, r3, #32
 8004462:	2b00      	cmp	r3, #0
 8004464:	d009      	beq.n	800447a <HAL_UART_IRQHandler+0x66>
 8004466:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800446a:	f003 0320 	and.w	r3, r3, #32
 800446e:	2b00      	cmp	r3, #0
 8004470:	d003      	beq.n	800447a <HAL_UART_IRQHandler+0x66>
 8004472:	6878      	ldr	r0, [r7, #4]
 8004474:	f000 fc07 	bl	8004c86 <UART_Receive_IT>
 8004478:	e256      	b.n	8004928 <HAL_UART_IRQHandler+0x514>
 800447a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800447e:	2b00      	cmp	r3, #0
 8004480:	f000 80de 	beq.w	8004640 <HAL_UART_IRQHandler+0x22c>
 8004484:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004488:	f003 0301 	and.w	r3, r3, #1
 800448c:	2b00      	cmp	r3, #0
 800448e:	d106      	bne.n	800449e <HAL_UART_IRQHandler+0x8a>
 8004490:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004494:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8004498:	2b00      	cmp	r3, #0
 800449a:	f000 80d1 	beq.w	8004640 <HAL_UART_IRQHandler+0x22c>
 800449e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80044a2:	f003 0301 	and.w	r3, r3, #1
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d00b      	beq.n	80044c2 <HAL_UART_IRQHandler+0xae>
 80044aa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80044ae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d005      	beq.n	80044c2 <HAL_UART_IRQHandler+0xae>
 80044b6:	687b      	ldr	r3, [r7, #4]
 80044b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80044ba:	f043 0201 	orr.w	r2, r3, #1
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	641a      	str	r2, [r3, #64]	@ 0x40
 80044c2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80044c6:	f003 0304 	and.w	r3, r3, #4
 80044ca:	2b00      	cmp	r3, #0
 80044cc:	d00b      	beq.n	80044e6 <HAL_UART_IRQHandler+0xd2>
 80044ce:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80044d2:	f003 0301 	and.w	r3, r3, #1
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d005      	beq.n	80044e6 <HAL_UART_IRQHandler+0xd2>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80044de:	f043 0202 	orr.w	r2, r3, #2
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80044e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80044ea:	f003 0302 	and.w	r3, r3, #2
 80044ee:	2b00      	cmp	r3, #0
 80044f0:	d00b      	beq.n	800450a <HAL_UART_IRQHandler+0xf6>
 80044f2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80044f6:	f003 0301 	and.w	r3, r3, #1
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d005      	beq.n	800450a <HAL_UART_IRQHandler+0xf6>
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004502:	f043 0204 	orr.w	r2, r3, #4
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	641a      	str	r2, [r3, #64]	@ 0x40
 800450a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800450e:	f003 0308 	and.w	r3, r3, #8
 8004512:	2b00      	cmp	r3, #0
 8004514:	d011      	beq.n	800453a <HAL_UART_IRQHandler+0x126>
 8004516:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800451a:	f003 0320 	and.w	r3, r3, #32
 800451e:	2b00      	cmp	r3, #0
 8004520:	d105      	bne.n	800452e <HAL_UART_IRQHandler+0x11a>
 8004522:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8004526:	f003 0301 	and.w	r3, r3, #1
 800452a:	2b00      	cmp	r3, #0
 800452c:	d005      	beq.n	800453a <HAL_UART_IRQHandler+0x126>
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004532:	f043 0208 	orr.w	r2, r3, #8
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	641a      	str	r2, [r3, #64]	@ 0x40
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800453e:	2b00      	cmp	r3, #0
 8004540:	f000 81ed 	beq.w	800491e <HAL_UART_IRQHandler+0x50a>
 8004544:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004548:	f003 0320 	and.w	r3, r3, #32
 800454c:	2b00      	cmp	r3, #0
 800454e:	d008      	beq.n	8004562 <HAL_UART_IRQHandler+0x14e>
 8004550:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004554:	f003 0320 	and.w	r3, r3, #32
 8004558:	2b00      	cmp	r3, #0
 800455a:	d002      	beq.n	8004562 <HAL_UART_IRQHandler+0x14e>
 800455c:	6878      	ldr	r0, [r7, #4]
 800455e:	f000 fb92 	bl	8004c86 <UART_Receive_IT>
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	681b      	ldr	r3, [r3, #0]
 8004566:	695b      	ldr	r3, [r3, #20]
 8004568:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800456c:	2b40      	cmp	r3, #64	@ 0x40
 800456e:	bf0c      	ite	eq
 8004570:	2301      	moveq	r3, #1
 8004572:	2300      	movne	r3, #0
 8004574:	b2db      	uxtb	r3, r3
 8004576:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800457e:	f003 0308 	and.w	r3, r3, #8
 8004582:	2b00      	cmp	r3, #0
 8004584:	d103      	bne.n	800458e <HAL_UART_IRQHandler+0x17a>
 8004586:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800458a:	2b00      	cmp	r3, #0
 800458c:	d04f      	beq.n	800462e <HAL_UART_IRQHandler+0x21a>
 800458e:	6878      	ldr	r0, [r7, #4]
 8004590:	f000 fa9a 	bl	8004ac8 <UART_EndRxTransfer>
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	695b      	ldr	r3, [r3, #20]
 800459a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800459e:	2b40      	cmp	r3, #64	@ 0x40
 80045a0:	d141      	bne.n	8004626 <HAL_UART_IRQHandler+0x212>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	3314      	adds	r3, #20
 80045a8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80045ac:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80045b0:	e853 3f00 	ldrex	r3, [r3]
 80045b4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80045b8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80045bc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80045c0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	3314      	adds	r3, #20
 80045ca:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80045ce:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80045d2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80045d6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80045da:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80045de:	e841 2300 	strex	r3, r2, [r1]
 80045e2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80045e6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80045ea:	2b00      	cmp	r3, #0
 80045ec:	d1d9      	bne.n	80045a2 <HAL_UART_IRQHandler+0x18e>
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d013      	beq.n	800461e <HAL_UART_IRQHandler+0x20a>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80045fa:	4a7d      	ldr	r2, [pc, #500]	@ (80047f0 <HAL_UART_IRQHandler+0x3dc>)
 80045fc:	651a      	str	r2, [r3, #80]	@ 0x50
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004602:	4618      	mov	r0, r3
 8004604:	f7fe ff6d 	bl	80034e2 <HAL_DMA_Abort_IT>
 8004608:	4603      	mov	r3, r0
 800460a:	2b00      	cmp	r3, #0
 800460c:	d016      	beq.n	800463c <HAL_UART_IRQHandler+0x228>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004612:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004614:	687a      	ldr	r2, [r7, #4]
 8004616:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8004618:	4610      	mov	r0, r2
 800461a:	4798      	blx	r3
 800461c:	e00e      	b.n	800463c <HAL_UART_IRQHandler+0x228>
 800461e:	6878      	ldr	r0, [r7, #4]
 8004620:	f000 f990 	bl	8004944 <HAL_UART_ErrorCallback>
 8004624:	e00a      	b.n	800463c <HAL_UART_IRQHandler+0x228>
 8004626:	6878      	ldr	r0, [r7, #4]
 8004628:	f000 f98c 	bl	8004944 <HAL_UART_ErrorCallback>
 800462c:	e006      	b.n	800463c <HAL_UART_IRQHandler+0x228>
 800462e:	6878      	ldr	r0, [r7, #4]
 8004630:	f000 f988 	bl	8004944 <HAL_UART_ErrorCallback>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	2200      	movs	r2, #0
 8004638:	641a      	str	r2, [r3, #64]	@ 0x40
 800463a:	e170      	b.n	800491e <HAL_UART_IRQHandler+0x50a>
 800463c:	bf00      	nop
 800463e:	e16e      	b.n	800491e <HAL_UART_IRQHandler+0x50a>
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004644:	2b01      	cmp	r3, #1
 8004646:	f040 814a 	bne.w	80048de <HAL_UART_IRQHandler+0x4ca>
 800464a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800464e:	f003 0310 	and.w	r3, r3, #16
 8004652:	2b00      	cmp	r3, #0
 8004654:	f000 8143 	beq.w	80048de <HAL_UART_IRQHandler+0x4ca>
 8004658:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800465c:	f003 0310 	and.w	r3, r3, #16
 8004660:	2b00      	cmp	r3, #0
 8004662:	f000 813c 	beq.w	80048de <HAL_UART_IRQHandler+0x4ca>
 8004666:	2300      	movs	r3, #0
 8004668:	60bb      	str	r3, [r7, #8]
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	60bb      	str	r3, [r7, #8]
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	685b      	ldr	r3, [r3, #4]
 8004678:	60bb      	str	r3, [r7, #8]
 800467a:	68bb      	ldr	r3, [r7, #8]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	695b      	ldr	r3, [r3, #20]
 8004682:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004686:	2b40      	cmp	r3, #64	@ 0x40
 8004688:	f040 80b4 	bne.w	80047f4 <HAL_UART_IRQHandler+0x3e0>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	685b      	ldr	r3, [r3, #4]
 8004694:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004698:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800469c:	2b00      	cmp	r3, #0
 800469e:	f000 8140 	beq.w	8004922 <HAL_UART_IRQHandler+0x50e>
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80046a6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80046aa:	429a      	cmp	r2, r3
 80046ac:	f080 8139 	bcs.w	8004922 <HAL_UART_IRQHandler+0x50e>
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80046b6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80046bc:	69db      	ldr	r3, [r3, #28]
 80046be:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80046c2:	f000 8088 	beq.w	80047d6 <HAL_UART_IRQHandler+0x3c2>
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	330c      	adds	r3, #12
 80046cc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80046d0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80046d4:	e853 3f00 	ldrex	r3, [r3]
 80046d8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80046dc:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80046e0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80046e4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	330c      	adds	r3, #12
 80046ee:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80046f2:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80046f6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80046fa:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80046fe:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004702:	e841 2300 	strex	r3, r2, [r1]
 8004706:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800470a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800470e:	2b00      	cmp	r3, #0
 8004710:	d1d9      	bne.n	80046c6 <HAL_UART_IRQHandler+0x2b2>
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	3314      	adds	r3, #20
 8004718:	677b      	str	r3, [r7, #116]	@ 0x74
 800471a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800471c:	e853 3f00 	ldrex	r3, [r3]
 8004720:	673b      	str	r3, [r7, #112]	@ 0x70
 8004722:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004724:	f023 0301 	bic.w	r3, r3, #1
 8004728:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	3314      	adds	r3, #20
 8004732:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004736:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800473a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800473c:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800473e:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004742:	e841 2300 	strex	r3, r2, [r1]
 8004746:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004748:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800474a:	2b00      	cmp	r3, #0
 800474c:	d1e1      	bne.n	8004712 <HAL_UART_IRQHandler+0x2fe>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	3314      	adds	r3, #20
 8004754:	663b      	str	r3, [r7, #96]	@ 0x60
 8004756:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004758:	e853 3f00 	ldrex	r3, [r3]
 800475c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800475e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004760:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004764:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	3314      	adds	r3, #20
 800476e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8004772:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004774:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004776:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004778:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800477a:	e841 2300 	strex	r3, r2, [r1]
 800477e:	667b      	str	r3, [r7, #100]	@ 0x64
 8004780:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004782:	2b00      	cmp	r3, #0
 8004784:	d1e3      	bne.n	800474e <HAL_UART_IRQHandler+0x33a>
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	2220      	movs	r2, #32
 800478a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	2200      	movs	r2, #0
 8004792:	631a      	str	r2, [r3, #48]	@ 0x30
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	330c      	adds	r3, #12
 800479a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800479c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800479e:	e853 3f00 	ldrex	r3, [r3]
 80047a2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80047a4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80047a6:	f023 0310 	bic.w	r3, r3, #16
 80047aa:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	330c      	adds	r3, #12
 80047b4:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80047b8:	65ba      	str	r2, [r7, #88]	@ 0x58
 80047ba:	657b      	str	r3, [r7, #84]	@ 0x54
 80047bc:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80047be:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80047c0:	e841 2300 	strex	r3, r2, [r1]
 80047c4:	653b      	str	r3, [r7, #80]	@ 0x50
 80047c6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	d1e3      	bne.n	8004794 <HAL_UART_IRQHandler+0x380>
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80047d0:	4618      	mov	r0, r3
 80047d2:	f7fe fe16 	bl	8003402 <HAL_DMA_Abort>
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80047de:	b29b      	uxth	r3, r3
 80047e0:	1ad3      	subs	r3, r2, r3
 80047e2:	b29b      	uxth	r3, r3
 80047e4:	4619      	mov	r1, r3
 80047e6:	6878      	ldr	r0, [r7, #4]
 80047e8:	f000 f8b6 	bl	8004958 <HAL_UARTEx_RxEventCallback>
 80047ec:	e099      	b.n	8004922 <HAL_UART_IRQHandler+0x50e>
 80047ee:	bf00      	nop
 80047f0:	08004b8f 	.word	0x08004b8f
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80047fc:	b29b      	uxth	r3, r3
 80047fe:	1ad3      	subs	r3, r2, r3
 8004800:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004808:	b29b      	uxth	r3, r3
 800480a:	2b00      	cmp	r3, #0
 800480c:	f000 808b 	beq.w	8004926 <HAL_UART_IRQHandler+0x512>
 8004810:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004814:	2b00      	cmp	r3, #0
 8004816:	f000 8086 	beq.w	8004926 <HAL_UART_IRQHandler+0x512>
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	330c      	adds	r3, #12
 8004820:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004822:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004824:	e853 3f00 	ldrex	r3, [r3]
 8004828:	637b      	str	r3, [r7, #52]	@ 0x34
 800482a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800482c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004830:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	330c      	adds	r3, #12
 800483a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800483e:	647a      	str	r2, [r7, #68]	@ 0x44
 8004840:	643b      	str	r3, [r7, #64]	@ 0x40
 8004842:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004844:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004846:	e841 2300 	strex	r3, r2, [r1]
 800484a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800484c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800484e:	2b00      	cmp	r3, #0
 8004850:	d1e3      	bne.n	800481a <HAL_UART_IRQHandler+0x406>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	3314      	adds	r3, #20
 8004858:	627b      	str	r3, [r7, #36]	@ 0x24
 800485a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800485c:	e853 3f00 	ldrex	r3, [r3]
 8004860:	623b      	str	r3, [r7, #32]
 8004862:	6a3b      	ldr	r3, [r7, #32]
 8004864:	f023 0301 	bic.w	r3, r3, #1
 8004868:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	3314      	adds	r3, #20
 8004872:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004876:	633a      	str	r2, [r7, #48]	@ 0x30
 8004878:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800487a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800487c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800487e:	e841 2300 	strex	r3, r2, [r1]
 8004882:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004884:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004886:	2b00      	cmp	r3, #0
 8004888:	d1e3      	bne.n	8004852 <HAL_UART_IRQHandler+0x43e>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	2220      	movs	r2, #32
 800488e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	2200      	movs	r2, #0
 8004896:	631a      	str	r2, [r3, #48]	@ 0x30
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	330c      	adds	r3, #12
 800489e:	613b      	str	r3, [r7, #16]
 80048a0:	693b      	ldr	r3, [r7, #16]
 80048a2:	e853 3f00 	ldrex	r3, [r3]
 80048a6:	60fb      	str	r3, [r7, #12]
 80048a8:	68fb      	ldr	r3, [r7, #12]
 80048aa:	f023 0310 	bic.w	r3, r3, #16
 80048ae:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	330c      	adds	r3, #12
 80048b8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80048bc:	61fa      	str	r2, [r7, #28]
 80048be:	61bb      	str	r3, [r7, #24]
 80048c0:	69b9      	ldr	r1, [r7, #24]
 80048c2:	69fa      	ldr	r2, [r7, #28]
 80048c4:	e841 2300 	strex	r3, r2, [r1]
 80048c8:	617b      	str	r3, [r7, #20]
 80048ca:	697b      	ldr	r3, [r7, #20]
 80048cc:	2b00      	cmp	r3, #0
 80048ce:	d1e3      	bne.n	8004898 <HAL_UART_IRQHandler+0x484>
 80048d0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80048d4:	4619      	mov	r1, r3
 80048d6:	6878      	ldr	r0, [r7, #4]
 80048d8:	f000 f83e 	bl	8004958 <HAL_UARTEx_RxEventCallback>
 80048dc:	e023      	b.n	8004926 <HAL_UART_IRQHandler+0x512>
 80048de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80048e2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80048e6:	2b00      	cmp	r3, #0
 80048e8:	d009      	beq.n	80048fe <HAL_UART_IRQHandler+0x4ea>
 80048ea:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80048ee:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d003      	beq.n	80048fe <HAL_UART_IRQHandler+0x4ea>
 80048f6:	6878      	ldr	r0, [r7, #4]
 80048f8:	f000 f95d 	bl	8004bb6 <UART_Transmit_IT>
 80048fc:	e014      	b.n	8004928 <HAL_UART_IRQHandler+0x514>
 80048fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004902:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004906:	2b00      	cmp	r3, #0
 8004908:	d00e      	beq.n	8004928 <HAL_UART_IRQHandler+0x514>
 800490a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800490e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004912:	2b00      	cmp	r3, #0
 8004914:	d008      	beq.n	8004928 <HAL_UART_IRQHandler+0x514>
 8004916:	6878      	ldr	r0, [r7, #4]
 8004918:	f000 f99d 	bl	8004c56 <UART_EndTransmit_IT>
 800491c:	e004      	b.n	8004928 <HAL_UART_IRQHandler+0x514>
 800491e:	bf00      	nop
 8004920:	e002      	b.n	8004928 <HAL_UART_IRQHandler+0x514>
 8004922:	bf00      	nop
 8004924:	e000      	b.n	8004928 <HAL_UART_IRQHandler+0x514>
 8004926:	bf00      	nop
 8004928:	37e8      	adds	r7, #232	@ 0xe8
 800492a:	46bd      	mov	sp, r7
 800492c:	bd80      	pop	{r7, pc}
 800492e:	bf00      	nop

08004930 <HAL_UART_TxCpltCallback>:
 8004930:	b480      	push	{r7}
 8004932:	b083      	sub	sp, #12
 8004934:	af00      	add	r7, sp, #0
 8004936:	6078      	str	r0, [r7, #4]
 8004938:	bf00      	nop
 800493a:	370c      	adds	r7, #12
 800493c:	46bd      	mov	sp, r7
 800493e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004942:	4770      	bx	lr

08004944 <HAL_UART_ErrorCallback>:
 8004944:	b480      	push	{r7}
 8004946:	b083      	sub	sp, #12
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
 800494c:	bf00      	nop
 800494e:	370c      	adds	r7, #12
 8004950:	46bd      	mov	sp, r7
 8004952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004956:	4770      	bx	lr

08004958 <HAL_UARTEx_RxEventCallback>:
 8004958:	b480      	push	{r7}
 800495a:	b083      	sub	sp, #12
 800495c:	af00      	add	r7, sp, #0
 800495e:	6078      	str	r0, [r7, #4]
 8004960:	460b      	mov	r3, r1
 8004962:	807b      	strh	r3, [r7, #2]
 8004964:	bf00      	nop
 8004966:	370c      	adds	r7, #12
 8004968:	46bd      	mov	sp, r7
 800496a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800496e:	4770      	bx	lr

08004970 <UART_WaitOnFlagUntilTimeout>:
 8004970:	b580      	push	{r7, lr}
 8004972:	b090      	sub	sp, #64	@ 0x40
 8004974:	af00      	add	r7, sp, #0
 8004976:	60f8      	str	r0, [r7, #12]
 8004978:	60b9      	str	r1, [r7, #8]
 800497a:	603b      	str	r3, [r7, #0]
 800497c:	4613      	mov	r3, r2
 800497e:	71fb      	strb	r3, [r7, #7]
 8004980:	e050      	b.n	8004a24 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004982:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004984:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004988:	d04c      	beq.n	8004a24 <UART_WaitOnFlagUntilTimeout+0xb4>
 800498a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800498c:	2b00      	cmp	r3, #0
 800498e:	d007      	beq.n	80049a0 <UART_WaitOnFlagUntilTimeout+0x30>
 8004990:	f7fd f9c8 	bl	8001d24 <HAL_GetTick>
 8004994:	4602      	mov	r2, r0
 8004996:	683b      	ldr	r3, [r7, #0]
 8004998:	1ad3      	subs	r3, r2, r3
 800499a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800499c:	429a      	cmp	r2, r3
 800499e:	d241      	bcs.n	8004a24 <UART_WaitOnFlagUntilTimeout+0xb4>
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	330c      	adds	r3, #12
 80049a6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80049a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049aa:	e853 3f00 	ldrex	r3, [r3]
 80049ae:	627b      	str	r3, [r7, #36]	@ 0x24
 80049b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049b2:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 80049b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80049b8:	68fb      	ldr	r3, [r7, #12]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	330c      	adds	r3, #12
 80049be:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80049c0:	637a      	str	r2, [r7, #52]	@ 0x34
 80049c2:	633b      	str	r3, [r7, #48]	@ 0x30
 80049c4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80049c6:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80049c8:	e841 2300 	strex	r3, r2, [r1]
 80049cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80049ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d1e5      	bne.n	80049a0 <UART_WaitOnFlagUntilTimeout+0x30>
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	3314      	adds	r3, #20
 80049da:	617b      	str	r3, [r7, #20]
 80049dc:	697b      	ldr	r3, [r7, #20]
 80049de:	e853 3f00 	ldrex	r3, [r3]
 80049e2:	613b      	str	r3, [r7, #16]
 80049e4:	693b      	ldr	r3, [r7, #16]
 80049e6:	f023 0301 	bic.w	r3, r3, #1
 80049ea:	63bb      	str	r3, [r7, #56]	@ 0x38
 80049ec:	68fb      	ldr	r3, [r7, #12]
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	3314      	adds	r3, #20
 80049f2:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80049f4:	623a      	str	r2, [r7, #32]
 80049f6:	61fb      	str	r3, [r7, #28]
 80049f8:	69f9      	ldr	r1, [r7, #28]
 80049fa:	6a3a      	ldr	r2, [r7, #32]
 80049fc:	e841 2300 	strex	r3, r2, [r1]
 8004a00:	61bb      	str	r3, [r7, #24]
 8004a02:	69bb      	ldr	r3, [r7, #24]
 8004a04:	2b00      	cmp	r3, #0
 8004a06:	d1e5      	bne.n	80049d4 <UART_WaitOnFlagUntilTimeout+0x64>
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	2220      	movs	r2, #32
 8004a0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	2220      	movs	r2, #32
 8004a14:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004a18:	68fb      	ldr	r3, [r7, #12]
 8004a1a:	2200      	movs	r2, #0
 8004a1c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004a20:	2303      	movs	r3, #3
 8004a22:	e00f      	b.n	8004a44 <UART_WaitOnFlagUntilTimeout+0xd4>
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	681a      	ldr	r2, [r3, #0]
 8004a2a:	68bb      	ldr	r3, [r7, #8]
 8004a2c:	4013      	ands	r3, r2
 8004a2e:	68ba      	ldr	r2, [r7, #8]
 8004a30:	429a      	cmp	r2, r3
 8004a32:	bf0c      	ite	eq
 8004a34:	2301      	moveq	r3, #1
 8004a36:	2300      	movne	r3, #0
 8004a38:	b2db      	uxtb	r3, r3
 8004a3a:	461a      	mov	r2, r3
 8004a3c:	79fb      	ldrb	r3, [r7, #7]
 8004a3e:	429a      	cmp	r2, r3
 8004a40:	d09f      	beq.n	8004982 <UART_WaitOnFlagUntilTimeout+0x12>
 8004a42:	2300      	movs	r3, #0
 8004a44:	4618      	mov	r0, r3
 8004a46:	3740      	adds	r7, #64	@ 0x40
 8004a48:	46bd      	mov	sp, r7
 8004a4a:	bd80      	pop	{r7, pc}

08004a4c <UART_Start_Receive_IT>:
 8004a4c:	b480      	push	{r7}
 8004a4e:	b085      	sub	sp, #20
 8004a50:	af00      	add	r7, sp, #0
 8004a52:	60f8      	str	r0, [r7, #12]
 8004a54:	60b9      	str	r1, [r7, #8]
 8004a56:	4613      	mov	r3, r2
 8004a58:	80fb      	strh	r3, [r7, #6]
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	68ba      	ldr	r2, [r7, #8]
 8004a5e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	88fa      	ldrh	r2, [r7, #6]
 8004a64:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004a66:	68fb      	ldr	r3, [r7, #12]
 8004a68:	88fa      	ldrh	r2, [r7, #6]
 8004a6a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	2200      	movs	r2, #0
 8004a70:	641a      	str	r2, [r3, #64]	@ 0x40
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	2222      	movs	r2, #34	@ 0x22
 8004a76:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	2200      	movs	r2, #0
 8004a7e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	691b      	ldr	r3, [r3, #16]
 8004a86:	2b00      	cmp	r3, #0
 8004a88:	d007      	beq.n	8004a9a <UART_Start_Receive_IT+0x4e>
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	68da      	ldr	r2, [r3, #12]
 8004a90:	68fb      	ldr	r3, [r7, #12]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004a98:	60da      	str	r2, [r3, #12]
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	695a      	ldr	r2, [r3, #20]
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	f042 0201 	orr.w	r2, r2, #1
 8004aa8:	615a      	str	r2, [r3, #20]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	68da      	ldr	r2, [r3, #12]
 8004ab0:	68fb      	ldr	r3, [r7, #12]
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	f042 0220 	orr.w	r2, r2, #32
 8004ab8:	60da      	str	r2, [r3, #12]
 8004aba:	2300      	movs	r3, #0
 8004abc:	4618      	mov	r0, r3
 8004abe:	3714      	adds	r7, #20
 8004ac0:	46bd      	mov	sp, r7
 8004ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ac6:	4770      	bx	lr

08004ac8 <UART_EndRxTransfer>:
 8004ac8:	b480      	push	{r7}
 8004aca:	b095      	sub	sp, #84	@ 0x54
 8004acc:	af00      	add	r7, sp, #0
 8004ace:	6078      	str	r0, [r7, #4]
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	330c      	adds	r3, #12
 8004ad6:	637b      	str	r3, [r7, #52]	@ 0x34
 8004ad8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004ada:	e853 3f00 	ldrex	r3, [r3]
 8004ade:	633b      	str	r3, [r7, #48]	@ 0x30
 8004ae0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004ae2:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004ae6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	330c      	adds	r3, #12
 8004aee:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004af0:	643a      	str	r2, [r7, #64]	@ 0x40
 8004af2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004af4:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004af6:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004af8:	e841 2300 	strex	r3, r2, [r1]
 8004afc:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004afe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	d1e5      	bne.n	8004ad0 <UART_EndRxTransfer+0x8>
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	3314      	adds	r3, #20
 8004b0a:	623b      	str	r3, [r7, #32]
 8004b0c:	6a3b      	ldr	r3, [r7, #32]
 8004b0e:	e853 3f00 	ldrex	r3, [r3]
 8004b12:	61fb      	str	r3, [r7, #28]
 8004b14:	69fb      	ldr	r3, [r7, #28]
 8004b16:	f023 0301 	bic.w	r3, r3, #1
 8004b1a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004b1c:	687b      	ldr	r3, [r7, #4]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	3314      	adds	r3, #20
 8004b22:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004b24:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004b26:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004b28:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004b2a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004b2c:	e841 2300 	strex	r3, r2, [r1]
 8004b30:	627b      	str	r3, [r7, #36]	@ 0x24
 8004b32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	d1e5      	bne.n	8004b04 <UART_EndRxTransfer+0x3c>
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b3c:	2b01      	cmp	r3, #1
 8004b3e:	d119      	bne.n	8004b74 <UART_EndRxTransfer+0xac>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	330c      	adds	r3, #12
 8004b46:	60fb      	str	r3, [r7, #12]
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	e853 3f00 	ldrex	r3, [r3]
 8004b4e:	60bb      	str	r3, [r7, #8]
 8004b50:	68bb      	ldr	r3, [r7, #8]
 8004b52:	f023 0310 	bic.w	r3, r3, #16
 8004b56:	647b      	str	r3, [r7, #68]	@ 0x44
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	330c      	adds	r3, #12
 8004b5e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004b60:	61ba      	str	r2, [r7, #24]
 8004b62:	617b      	str	r3, [r7, #20]
 8004b64:	6979      	ldr	r1, [r7, #20]
 8004b66:	69ba      	ldr	r2, [r7, #24]
 8004b68:	e841 2300 	strex	r3, r2, [r1]
 8004b6c:	613b      	str	r3, [r7, #16]
 8004b6e:	693b      	ldr	r3, [r7, #16]
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d1e5      	bne.n	8004b40 <UART_EndRxTransfer+0x78>
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2220      	movs	r2, #32
 8004b78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	2200      	movs	r2, #0
 8004b80:	631a      	str	r2, [r3, #48]	@ 0x30
 8004b82:	bf00      	nop
 8004b84:	3754      	adds	r7, #84	@ 0x54
 8004b86:	46bd      	mov	sp, r7
 8004b88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b8c:	4770      	bx	lr

08004b8e <UART_DMAAbortOnError>:
 8004b8e:	b580      	push	{r7, lr}
 8004b90:	b084      	sub	sp, #16
 8004b92:	af00      	add	r7, sp, #0
 8004b94:	6078      	str	r0, [r7, #4]
 8004b96:	687b      	ldr	r3, [r7, #4]
 8004b98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004b9a:	60fb      	str	r3, [r7, #12]
 8004b9c:	68fb      	ldr	r3, [r7, #12]
 8004b9e:	2200      	movs	r2, #0
 8004ba0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	2200      	movs	r2, #0
 8004ba6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004ba8:	68f8      	ldr	r0, [r7, #12]
 8004baa:	f7ff fecb 	bl	8004944 <HAL_UART_ErrorCallback>
 8004bae:	bf00      	nop
 8004bb0:	3710      	adds	r7, #16
 8004bb2:	46bd      	mov	sp, r7
 8004bb4:	bd80      	pop	{r7, pc}

08004bb6 <UART_Transmit_IT>:
 8004bb6:	b480      	push	{r7}
 8004bb8:	b085      	sub	sp, #20
 8004bba:	af00      	add	r7, sp, #0
 8004bbc:	6078      	str	r0, [r7, #4]
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004bc4:	b2db      	uxtb	r3, r3
 8004bc6:	2b21      	cmp	r3, #33	@ 0x21
 8004bc8:	d13e      	bne.n	8004c48 <UART_Transmit_IT+0x92>
 8004bca:	687b      	ldr	r3, [r7, #4]
 8004bcc:	689b      	ldr	r3, [r3, #8]
 8004bce:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004bd2:	d114      	bne.n	8004bfe <UART_Transmit_IT+0x48>
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	691b      	ldr	r3, [r3, #16]
 8004bd8:	2b00      	cmp	r3, #0
 8004bda:	d110      	bne.n	8004bfe <UART_Transmit_IT+0x48>
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	6a1b      	ldr	r3, [r3, #32]
 8004be0:	60fb      	str	r3, [r7, #12]
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	881b      	ldrh	r3, [r3, #0]
 8004be6:	461a      	mov	r2, r3
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	681b      	ldr	r3, [r3, #0]
 8004bec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004bf0:	605a      	str	r2, [r3, #4]
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	6a1b      	ldr	r3, [r3, #32]
 8004bf6:	1c9a      	adds	r2, r3, #2
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	621a      	str	r2, [r3, #32]
 8004bfc:	e008      	b.n	8004c10 <UART_Transmit_IT+0x5a>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	6a1b      	ldr	r3, [r3, #32]
 8004c02:	1c59      	adds	r1, r3, #1
 8004c04:	687a      	ldr	r2, [r7, #4]
 8004c06:	6211      	str	r1, [r2, #32]
 8004c08:	781a      	ldrb	r2, [r3, #0]
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	605a      	str	r2, [r3, #4]
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004c14:	b29b      	uxth	r3, r3
 8004c16:	3b01      	subs	r3, #1
 8004c18:	b29b      	uxth	r3, r3
 8004c1a:	687a      	ldr	r2, [r7, #4]
 8004c1c:	4619      	mov	r1, r3
 8004c1e:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d10f      	bne.n	8004c44 <UART_Transmit_IT+0x8e>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	68da      	ldr	r2, [r3, #12]
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004c32:	60da      	str	r2, [r3, #12]
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	681b      	ldr	r3, [r3, #0]
 8004c38:	68da      	ldr	r2, [r3, #12]
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004c42:	60da      	str	r2, [r3, #12]
 8004c44:	2300      	movs	r3, #0
 8004c46:	e000      	b.n	8004c4a <UART_Transmit_IT+0x94>
 8004c48:	2302      	movs	r3, #2
 8004c4a:	4618      	mov	r0, r3
 8004c4c:	3714      	adds	r7, #20
 8004c4e:	46bd      	mov	sp, r7
 8004c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c54:	4770      	bx	lr

08004c56 <UART_EndTransmit_IT>:
 8004c56:	b580      	push	{r7, lr}
 8004c58:	b082      	sub	sp, #8
 8004c5a:	af00      	add	r7, sp, #0
 8004c5c:	6078      	str	r0, [r7, #4]
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	68da      	ldr	r2, [r3, #12]
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004c6c:	60da      	str	r2, [r3, #12]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	2220      	movs	r2, #32
 8004c72:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c76:	6878      	ldr	r0, [r7, #4]
 8004c78:	f7ff fe5a 	bl	8004930 <HAL_UART_TxCpltCallback>
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	4618      	mov	r0, r3
 8004c80:	3708      	adds	r7, #8
 8004c82:	46bd      	mov	sp, r7
 8004c84:	bd80      	pop	{r7, pc}

08004c86 <UART_Receive_IT>:
 8004c86:	b580      	push	{r7, lr}
 8004c88:	b08c      	sub	sp, #48	@ 0x30
 8004c8a:	af00      	add	r7, sp, #0
 8004c8c:	6078      	str	r0, [r7, #4]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004c94:	b2db      	uxtb	r3, r3
 8004c96:	2b22      	cmp	r3, #34	@ 0x22
 8004c98:	f040 80ab 	bne.w	8004df2 <UART_Receive_IT+0x16c>
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	689b      	ldr	r3, [r3, #8]
 8004ca0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004ca4:	d117      	bne.n	8004cd6 <UART_Receive_IT+0x50>
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	691b      	ldr	r3, [r3, #16]
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d113      	bne.n	8004cd6 <UART_Receive_IT+0x50>
 8004cae:	2300      	movs	r3, #0
 8004cb0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004cb6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	685b      	ldr	r3, [r3, #4]
 8004cbe:	b29b      	uxth	r3, r3
 8004cc0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004cc4:	b29a      	uxth	r2, r3
 8004cc6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004cc8:	801a      	strh	r2, [r3, #0]
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004cce:	1c9a      	adds	r2, r3, #2
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	629a      	str	r2, [r3, #40]	@ 0x28
 8004cd4:	e026      	b.n	8004d24 <UART_Receive_IT+0x9e>
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004cda:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004cdc:	2300      	movs	r3, #0
 8004cde:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	689b      	ldr	r3, [r3, #8]
 8004ce4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004ce8:	d007      	beq.n	8004cfa <UART_Receive_IT+0x74>
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	689b      	ldr	r3, [r3, #8]
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	d10a      	bne.n	8004d08 <UART_Receive_IT+0x82>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	691b      	ldr	r3, [r3, #16]
 8004cf6:	2b00      	cmp	r3, #0
 8004cf8:	d106      	bne.n	8004d08 <UART_Receive_IT+0x82>
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	685b      	ldr	r3, [r3, #4]
 8004d00:	b2da      	uxtb	r2, r3
 8004d02:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004d04:	701a      	strb	r2, [r3, #0]
 8004d06:	e008      	b.n	8004d1a <UART_Receive_IT+0x94>
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	685b      	ldr	r3, [r3, #4]
 8004d0e:	b2db      	uxtb	r3, r3
 8004d10:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8004d14:	b2da      	uxtb	r2, r3
 8004d16:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004d18:	701a      	strb	r2, [r3, #0]
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004d1e:	1c5a      	adds	r2, r3, #1
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	629a      	str	r2, [r3, #40]	@ 0x28
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004d28:	b29b      	uxth	r3, r3
 8004d2a:	3b01      	subs	r3, #1
 8004d2c:	b29b      	uxth	r3, r3
 8004d2e:	687a      	ldr	r2, [r7, #4]
 8004d30:	4619      	mov	r1, r3
 8004d32:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d15a      	bne.n	8004dee <UART_Receive_IT+0x168>
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	68da      	ldr	r2, [r3, #12]
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	f022 0220 	bic.w	r2, r2, #32
 8004d46:	60da      	str	r2, [r3, #12]
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	68da      	ldr	r2, [r3, #12]
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004d56:	60da      	str	r2, [r3, #12]
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	695a      	ldr	r2, [r3, #20]
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	681b      	ldr	r3, [r3, #0]
 8004d62:	f022 0201 	bic.w	r2, r2, #1
 8004d66:	615a      	str	r2, [r3, #20]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	2220      	movs	r2, #32
 8004d6c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d74:	2b01      	cmp	r3, #1
 8004d76:	d135      	bne.n	8004de4 <UART_Receive_IT+0x15e>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	2200      	movs	r2, #0
 8004d7c:	631a      	str	r2, [r3, #48]	@ 0x30
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	681b      	ldr	r3, [r3, #0]
 8004d82:	330c      	adds	r3, #12
 8004d84:	617b      	str	r3, [r7, #20]
 8004d86:	697b      	ldr	r3, [r7, #20]
 8004d88:	e853 3f00 	ldrex	r3, [r3]
 8004d8c:	613b      	str	r3, [r7, #16]
 8004d8e:	693b      	ldr	r3, [r7, #16]
 8004d90:	f023 0310 	bic.w	r3, r3, #16
 8004d94:	627b      	str	r3, [r7, #36]	@ 0x24
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	330c      	adds	r3, #12
 8004d9c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004d9e:	623a      	str	r2, [r7, #32]
 8004da0:	61fb      	str	r3, [r7, #28]
 8004da2:	69f9      	ldr	r1, [r7, #28]
 8004da4:	6a3a      	ldr	r2, [r7, #32]
 8004da6:	e841 2300 	strex	r3, r2, [r1]
 8004daa:	61bb      	str	r3, [r7, #24]
 8004dac:	69bb      	ldr	r3, [r7, #24]
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d1e5      	bne.n	8004d7e <UART_Receive_IT+0xf8>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	f003 0310 	and.w	r3, r3, #16
 8004dbc:	2b10      	cmp	r3, #16
 8004dbe:	d10a      	bne.n	8004dd6 <UART_Receive_IT+0x150>
 8004dc0:	2300      	movs	r3, #0
 8004dc2:	60fb      	str	r3, [r7, #12]
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	60fb      	str	r3, [r7, #12]
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	685b      	ldr	r3, [r3, #4]
 8004dd2:	60fb      	str	r3, [r7, #12]
 8004dd4:	68fb      	ldr	r3, [r7, #12]
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004dda:	4619      	mov	r1, r3
 8004ddc:	6878      	ldr	r0, [r7, #4]
 8004dde:	f7ff fdbb 	bl	8004958 <HAL_UARTEx_RxEventCallback>
 8004de2:	e002      	b.n	8004dea <UART_Receive_IT+0x164>
 8004de4:	6878      	ldr	r0, [r7, #4]
 8004de6:	f7fc fccd 	bl	8001784 <HAL_UART_RxCpltCallback>
 8004dea:	2300      	movs	r3, #0
 8004dec:	e002      	b.n	8004df4 <UART_Receive_IT+0x16e>
 8004dee:	2300      	movs	r3, #0
 8004df0:	e000      	b.n	8004df4 <UART_Receive_IT+0x16e>
 8004df2:	2302      	movs	r3, #2
 8004df4:	4618      	mov	r0, r3
 8004df6:	3730      	adds	r7, #48	@ 0x30
 8004df8:	46bd      	mov	sp, r7
 8004dfa:	bd80      	pop	{r7, pc}

08004dfc <UART_SetConfig>:
 8004dfc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004e00:	b0c0      	sub	sp, #256	@ 0x100
 8004e02:	af00      	add	r7, sp, #0
 8004e04:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8004e08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	691b      	ldr	r3, [r3, #16]
 8004e10:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8004e14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e18:	68d9      	ldr	r1, [r3, #12]
 8004e1a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e1e:	681a      	ldr	r2, [r3, #0]
 8004e20:	ea40 0301 	orr.w	r3, r0, r1
 8004e24:	6113      	str	r3, [r2, #16]
 8004e26:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e2a:	689a      	ldr	r2, [r3, #8]
 8004e2c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e30:	691b      	ldr	r3, [r3, #16]
 8004e32:	431a      	orrs	r2, r3
 8004e34:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e38:	695b      	ldr	r3, [r3, #20]
 8004e3a:	431a      	orrs	r2, r3
 8004e3c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e40:	69db      	ldr	r3, [r3, #28]
 8004e42:	4313      	orrs	r3, r2
 8004e44:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8004e48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	68db      	ldr	r3, [r3, #12]
 8004e50:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8004e54:	f021 010c 	bic.w	r1, r1, #12
 8004e58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e5c:	681a      	ldr	r2, [r3, #0]
 8004e5e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8004e62:	430b      	orrs	r3, r1
 8004e64:	60d3      	str	r3, [r2, #12]
 8004e66:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	695b      	ldr	r3, [r3, #20]
 8004e6e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8004e72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e76:	6999      	ldr	r1, [r3, #24]
 8004e78:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e7c:	681a      	ldr	r2, [r3, #0]
 8004e7e:	ea40 0301 	orr.w	r3, r0, r1
 8004e82:	6153      	str	r3, [r2, #20]
 8004e84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e88:	681a      	ldr	r2, [r3, #0]
 8004e8a:	4b8f      	ldr	r3, [pc, #572]	@ (80050c8 <UART_SetConfig+0x2cc>)
 8004e8c:	429a      	cmp	r2, r3
 8004e8e:	d005      	beq.n	8004e9c <UART_SetConfig+0xa0>
 8004e90:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004e94:	681a      	ldr	r2, [r3, #0]
 8004e96:	4b8d      	ldr	r3, [pc, #564]	@ (80050cc <UART_SetConfig+0x2d0>)
 8004e98:	429a      	cmp	r2, r3
 8004e9a:	d104      	bne.n	8004ea6 <UART_SetConfig+0xaa>
 8004e9c:	f7ff f996 	bl	80041cc <HAL_RCC_GetPCLK2Freq>
 8004ea0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004ea4:	e003      	b.n	8004eae <UART_SetConfig+0xb2>
 8004ea6:	f7ff f97d 	bl	80041a4 <HAL_RCC_GetPCLK1Freq>
 8004eaa:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004eae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004eb2:	69db      	ldr	r3, [r3, #28]
 8004eb4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004eb8:	f040 810c 	bne.w	80050d4 <UART_SetConfig+0x2d8>
 8004ebc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004ec0:	2200      	movs	r2, #0
 8004ec2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8004ec6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8004eca:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8004ece:	4622      	mov	r2, r4
 8004ed0:	462b      	mov	r3, r5
 8004ed2:	1891      	adds	r1, r2, r2
 8004ed4:	65b9      	str	r1, [r7, #88]	@ 0x58
 8004ed6:	415b      	adcs	r3, r3
 8004ed8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004eda:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004ede:	4621      	mov	r1, r4
 8004ee0:	eb12 0801 	adds.w	r8, r2, r1
 8004ee4:	4629      	mov	r1, r5
 8004ee6:	eb43 0901 	adc.w	r9, r3, r1
 8004eea:	f04f 0200 	mov.w	r2, #0
 8004eee:	f04f 0300 	mov.w	r3, #0
 8004ef2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004ef6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004efa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004efe:	4690      	mov	r8, r2
 8004f00:	4699      	mov	r9, r3
 8004f02:	4623      	mov	r3, r4
 8004f04:	eb18 0303 	adds.w	r3, r8, r3
 8004f08:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8004f0c:	462b      	mov	r3, r5
 8004f0e:	eb49 0303 	adc.w	r3, r9, r3
 8004f12:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004f16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004f1a:	685b      	ldr	r3, [r3, #4]
 8004f1c:	2200      	movs	r2, #0
 8004f1e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004f22:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8004f26:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8004f2a:	460b      	mov	r3, r1
 8004f2c:	18db      	adds	r3, r3, r3
 8004f2e:	653b      	str	r3, [r7, #80]	@ 0x50
 8004f30:	4613      	mov	r3, r2
 8004f32:	eb42 0303 	adc.w	r3, r2, r3
 8004f36:	657b      	str	r3, [r7, #84]	@ 0x54
 8004f38:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8004f3c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8004f40:	f7fb f996 	bl	8000270 <__aeabi_uldivmod>
 8004f44:	4602      	mov	r2, r0
 8004f46:	460b      	mov	r3, r1
 8004f48:	4b61      	ldr	r3, [pc, #388]	@ (80050d0 <UART_SetConfig+0x2d4>)
 8004f4a:	fba3 2302 	umull	r2, r3, r3, r2
 8004f4e:	095b      	lsrs	r3, r3, #5
 8004f50:	011c      	lsls	r4, r3, #4
 8004f52:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004f56:	2200      	movs	r2, #0
 8004f58:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004f5c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8004f60:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8004f64:	4642      	mov	r2, r8
 8004f66:	464b      	mov	r3, r9
 8004f68:	1891      	adds	r1, r2, r2
 8004f6a:	64b9      	str	r1, [r7, #72]	@ 0x48
 8004f6c:	415b      	adcs	r3, r3
 8004f6e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004f70:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004f74:	4641      	mov	r1, r8
 8004f76:	eb12 0a01 	adds.w	sl, r2, r1
 8004f7a:	4649      	mov	r1, r9
 8004f7c:	eb43 0b01 	adc.w	fp, r3, r1
 8004f80:	f04f 0200 	mov.w	r2, #0
 8004f84:	f04f 0300 	mov.w	r3, #0
 8004f88:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004f8c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004f90:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004f94:	4692      	mov	sl, r2
 8004f96:	469b      	mov	fp, r3
 8004f98:	4643      	mov	r3, r8
 8004f9a:	eb1a 0303 	adds.w	r3, sl, r3
 8004f9e:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004fa2:	464b      	mov	r3, r9
 8004fa4:	eb4b 0303 	adc.w	r3, fp, r3
 8004fa8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8004fac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004fb0:	685b      	ldr	r3, [r3, #4]
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004fb8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8004fbc:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8004fc0:	460b      	mov	r3, r1
 8004fc2:	18db      	adds	r3, r3, r3
 8004fc4:	643b      	str	r3, [r7, #64]	@ 0x40
 8004fc6:	4613      	mov	r3, r2
 8004fc8:	eb42 0303 	adc.w	r3, r2, r3
 8004fcc:	647b      	str	r3, [r7, #68]	@ 0x44
 8004fce:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8004fd2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8004fd6:	f7fb f94b 	bl	8000270 <__aeabi_uldivmod>
 8004fda:	4602      	mov	r2, r0
 8004fdc:	460b      	mov	r3, r1
 8004fde:	4611      	mov	r1, r2
 8004fe0:	4b3b      	ldr	r3, [pc, #236]	@ (80050d0 <UART_SetConfig+0x2d4>)
 8004fe2:	fba3 2301 	umull	r2, r3, r3, r1
 8004fe6:	095b      	lsrs	r3, r3, #5
 8004fe8:	2264      	movs	r2, #100	@ 0x64
 8004fea:	fb02 f303 	mul.w	r3, r2, r3
 8004fee:	1acb      	subs	r3, r1, r3
 8004ff0:	00db      	lsls	r3, r3, #3
 8004ff2:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8004ff6:	4b36      	ldr	r3, [pc, #216]	@ (80050d0 <UART_SetConfig+0x2d4>)
 8004ff8:	fba3 2302 	umull	r2, r3, r3, r2
 8004ffc:	095b      	lsrs	r3, r3, #5
 8004ffe:	005b      	lsls	r3, r3, #1
 8005000:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005004:	441c      	add	r4, r3
 8005006:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800500a:	2200      	movs	r2, #0
 800500c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005010:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005014:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005018:	4642      	mov	r2, r8
 800501a:	464b      	mov	r3, r9
 800501c:	1891      	adds	r1, r2, r2
 800501e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005020:	415b      	adcs	r3, r3
 8005022:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005024:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005028:	4641      	mov	r1, r8
 800502a:	1851      	adds	r1, r2, r1
 800502c:	6339      	str	r1, [r7, #48]	@ 0x30
 800502e:	4649      	mov	r1, r9
 8005030:	414b      	adcs	r3, r1
 8005032:	637b      	str	r3, [r7, #52]	@ 0x34
 8005034:	f04f 0200 	mov.w	r2, #0
 8005038:	f04f 0300 	mov.w	r3, #0
 800503c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8005040:	4659      	mov	r1, fp
 8005042:	00cb      	lsls	r3, r1, #3
 8005044:	4651      	mov	r1, sl
 8005046:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800504a:	4651      	mov	r1, sl
 800504c:	00ca      	lsls	r2, r1, #3
 800504e:	4610      	mov	r0, r2
 8005050:	4619      	mov	r1, r3
 8005052:	4603      	mov	r3, r0
 8005054:	4642      	mov	r2, r8
 8005056:	189b      	adds	r3, r3, r2
 8005058:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800505c:	464b      	mov	r3, r9
 800505e:	460a      	mov	r2, r1
 8005060:	eb42 0303 	adc.w	r3, r2, r3
 8005064:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005068:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800506c:	685b      	ldr	r3, [r3, #4]
 800506e:	2200      	movs	r2, #0
 8005070:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005074:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8005078:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 800507c:	460b      	mov	r3, r1
 800507e:	18db      	adds	r3, r3, r3
 8005080:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005082:	4613      	mov	r3, r2
 8005084:	eb42 0303 	adc.w	r3, r2, r3
 8005088:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800508a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800508e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8005092:	f7fb f8ed 	bl	8000270 <__aeabi_uldivmod>
 8005096:	4602      	mov	r2, r0
 8005098:	460b      	mov	r3, r1
 800509a:	4b0d      	ldr	r3, [pc, #52]	@ (80050d0 <UART_SetConfig+0x2d4>)
 800509c:	fba3 1302 	umull	r1, r3, r3, r2
 80050a0:	095b      	lsrs	r3, r3, #5
 80050a2:	2164      	movs	r1, #100	@ 0x64
 80050a4:	fb01 f303 	mul.w	r3, r1, r3
 80050a8:	1ad3      	subs	r3, r2, r3
 80050aa:	00db      	lsls	r3, r3, #3
 80050ac:	3332      	adds	r3, #50	@ 0x32
 80050ae:	4a08      	ldr	r2, [pc, #32]	@ (80050d0 <UART_SetConfig+0x2d4>)
 80050b0:	fba2 2303 	umull	r2, r3, r2, r3
 80050b4:	095b      	lsrs	r3, r3, #5
 80050b6:	f003 0207 	and.w	r2, r3, #7
 80050ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	4422      	add	r2, r4
 80050c2:	609a      	str	r2, [r3, #8]
 80050c4:	e106      	b.n	80052d4 <UART_SetConfig+0x4d8>
 80050c6:	bf00      	nop
 80050c8:	40011000 	.word	0x40011000
 80050cc:	40011400 	.word	0x40011400
 80050d0:	51eb851f 	.word	0x51eb851f
 80050d4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80050d8:	2200      	movs	r2, #0
 80050da:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80050de:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80050e2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80050e6:	4642      	mov	r2, r8
 80050e8:	464b      	mov	r3, r9
 80050ea:	1891      	adds	r1, r2, r2
 80050ec:	6239      	str	r1, [r7, #32]
 80050ee:	415b      	adcs	r3, r3
 80050f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80050f2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80050f6:	4641      	mov	r1, r8
 80050f8:	1854      	adds	r4, r2, r1
 80050fa:	4649      	mov	r1, r9
 80050fc:	eb43 0501 	adc.w	r5, r3, r1
 8005100:	f04f 0200 	mov.w	r2, #0
 8005104:	f04f 0300 	mov.w	r3, #0
 8005108:	00eb      	lsls	r3, r5, #3
 800510a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800510e:	00e2      	lsls	r2, r4, #3
 8005110:	4614      	mov	r4, r2
 8005112:	461d      	mov	r5, r3
 8005114:	4643      	mov	r3, r8
 8005116:	18e3      	adds	r3, r4, r3
 8005118:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800511c:	464b      	mov	r3, r9
 800511e:	eb45 0303 	adc.w	r3, r5, r3
 8005122:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005126:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800512a:	685b      	ldr	r3, [r3, #4]
 800512c:	2200      	movs	r2, #0
 800512e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005132:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005136:	f04f 0200 	mov.w	r2, #0
 800513a:	f04f 0300 	mov.w	r3, #0
 800513e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8005142:	4629      	mov	r1, r5
 8005144:	008b      	lsls	r3, r1, #2
 8005146:	4621      	mov	r1, r4
 8005148:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800514c:	4621      	mov	r1, r4
 800514e:	008a      	lsls	r2, r1, #2
 8005150:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8005154:	f7fb f88c 	bl	8000270 <__aeabi_uldivmod>
 8005158:	4602      	mov	r2, r0
 800515a:	460b      	mov	r3, r1
 800515c:	4b60      	ldr	r3, [pc, #384]	@ (80052e0 <UART_SetConfig+0x4e4>)
 800515e:	fba3 2302 	umull	r2, r3, r3, r2
 8005162:	095b      	lsrs	r3, r3, #5
 8005164:	011c      	lsls	r4, r3, #4
 8005166:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800516a:	2200      	movs	r2, #0
 800516c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005170:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005174:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8005178:	4642      	mov	r2, r8
 800517a:	464b      	mov	r3, r9
 800517c:	1891      	adds	r1, r2, r2
 800517e:	61b9      	str	r1, [r7, #24]
 8005180:	415b      	adcs	r3, r3
 8005182:	61fb      	str	r3, [r7, #28]
 8005184:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005188:	4641      	mov	r1, r8
 800518a:	1851      	adds	r1, r2, r1
 800518c:	6139      	str	r1, [r7, #16]
 800518e:	4649      	mov	r1, r9
 8005190:	414b      	adcs	r3, r1
 8005192:	617b      	str	r3, [r7, #20]
 8005194:	f04f 0200 	mov.w	r2, #0
 8005198:	f04f 0300 	mov.w	r3, #0
 800519c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80051a0:	4659      	mov	r1, fp
 80051a2:	00cb      	lsls	r3, r1, #3
 80051a4:	4651      	mov	r1, sl
 80051a6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80051aa:	4651      	mov	r1, sl
 80051ac:	00ca      	lsls	r2, r1, #3
 80051ae:	4610      	mov	r0, r2
 80051b0:	4619      	mov	r1, r3
 80051b2:	4603      	mov	r3, r0
 80051b4:	4642      	mov	r2, r8
 80051b6:	189b      	adds	r3, r3, r2
 80051b8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80051bc:	464b      	mov	r3, r9
 80051be:	460a      	mov	r2, r1
 80051c0:	eb42 0303 	adc.w	r3, r2, r3
 80051c4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80051c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80051cc:	685b      	ldr	r3, [r3, #4]
 80051ce:	2200      	movs	r2, #0
 80051d0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80051d2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80051d4:	f04f 0200 	mov.w	r2, #0
 80051d8:	f04f 0300 	mov.w	r3, #0
 80051dc:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80051e0:	4649      	mov	r1, r9
 80051e2:	008b      	lsls	r3, r1, #2
 80051e4:	4641      	mov	r1, r8
 80051e6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80051ea:	4641      	mov	r1, r8
 80051ec:	008a      	lsls	r2, r1, #2
 80051ee:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80051f2:	f7fb f83d 	bl	8000270 <__aeabi_uldivmod>
 80051f6:	4602      	mov	r2, r0
 80051f8:	460b      	mov	r3, r1
 80051fa:	4611      	mov	r1, r2
 80051fc:	4b38      	ldr	r3, [pc, #224]	@ (80052e0 <UART_SetConfig+0x4e4>)
 80051fe:	fba3 2301 	umull	r2, r3, r3, r1
 8005202:	095b      	lsrs	r3, r3, #5
 8005204:	2264      	movs	r2, #100	@ 0x64
 8005206:	fb02 f303 	mul.w	r3, r2, r3
 800520a:	1acb      	subs	r3, r1, r3
 800520c:	011b      	lsls	r3, r3, #4
 800520e:	3332      	adds	r3, #50	@ 0x32
 8005210:	4a33      	ldr	r2, [pc, #204]	@ (80052e0 <UART_SetConfig+0x4e4>)
 8005212:	fba2 2303 	umull	r2, r3, r2, r3
 8005216:	095b      	lsrs	r3, r3, #5
 8005218:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800521c:	441c      	add	r4, r3
 800521e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005222:	2200      	movs	r2, #0
 8005224:	673b      	str	r3, [r7, #112]	@ 0x70
 8005226:	677a      	str	r2, [r7, #116]	@ 0x74
 8005228:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 800522c:	4642      	mov	r2, r8
 800522e:	464b      	mov	r3, r9
 8005230:	1891      	adds	r1, r2, r2
 8005232:	60b9      	str	r1, [r7, #8]
 8005234:	415b      	adcs	r3, r3
 8005236:	60fb      	str	r3, [r7, #12]
 8005238:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800523c:	4641      	mov	r1, r8
 800523e:	1851      	adds	r1, r2, r1
 8005240:	6039      	str	r1, [r7, #0]
 8005242:	4649      	mov	r1, r9
 8005244:	414b      	adcs	r3, r1
 8005246:	607b      	str	r3, [r7, #4]
 8005248:	f04f 0200 	mov.w	r2, #0
 800524c:	f04f 0300 	mov.w	r3, #0
 8005250:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005254:	4659      	mov	r1, fp
 8005256:	00cb      	lsls	r3, r1, #3
 8005258:	4651      	mov	r1, sl
 800525a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800525e:	4651      	mov	r1, sl
 8005260:	00ca      	lsls	r2, r1, #3
 8005262:	4610      	mov	r0, r2
 8005264:	4619      	mov	r1, r3
 8005266:	4603      	mov	r3, r0
 8005268:	4642      	mov	r2, r8
 800526a:	189b      	adds	r3, r3, r2
 800526c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800526e:	464b      	mov	r3, r9
 8005270:	460a      	mov	r2, r1
 8005272:	eb42 0303 	adc.w	r3, r2, r3
 8005276:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8005278:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800527c:	685b      	ldr	r3, [r3, #4]
 800527e:	2200      	movs	r2, #0
 8005280:	663b      	str	r3, [r7, #96]	@ 0x60
 8005282:	667a      	str	r2, [r7, #100]	@ 0x64
 8005284:	f04f 0200 	mov.w	r2, #0
 8005288:	f04f 0300 	mov.w	r3, #0
 800528c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8005290:	4649      	mov	r1, r9
 8005292:	008b      	lsls	r3, r1, #2
 8005294:	4641      	mov	r1, r8
 8005296:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800529a:	4641      	mov	r1, r8
 800529c:	008a      	lsls	r2, r1, #2
 800529e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80052a2:	f7fa ffe5 	bl	8000270 <__aeabi_uldivmod>
 80052a6:	4602      	mov	r2, r0
 80052a8:	460b      	mov	r3, r1
 80052aa:	4b0d      	ldr	r3, [pc, #52]	@ (80052e0 <UART_SetConfig+0x4e4>)
 80052ac:	fba3 1302 	umull	r1, r3, r3, r2
 80052b0:	095b      	lsrs	r3, r3, #5
 80052b2:	2164      	movs	r1, #100	@ 0x64
 80052b4:	fb01 f303 	mul.w	r3, r1, r3
 80052b8:	1ad3      	subs	r3, r2, r3
 80052ba:	011b      	lsls	r3, r3, #4
 80052bc:	3332      	adds	r3, #50	@ 0x32
 80052be:	4a08      	ldr	r2, [pc, #32]	@ (80052e0 <UART_SetConfig+0x4e4>)
 80052c0:	fba2 2303 	umull	r2, r3, r2, r3
 80052c4:	095b      	lsrs	r3, r3, #5
 80052c6:	f003 020f 	and.w	r2, r3, #15
 80052ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	4422      	add	r2, r4
 80052d2:	609a      	str	r2, [r3, #8]
 80052d4:	bf00      	nop
 80052d6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80052da:	46bd      	mov	sp, r7
 80052dc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80052e0:	51eb851f 	.word	0x51eb851f

080052e4 <siprintf>:
 80052e4:	b40e      	push	{r1, r2, r3}
 80052e6:	b510      	push	{r4, lr}
 80052e8:	b09d      	sub	sp, #116	@ 0x74
 80052ea:	ab1f      	add	r3, sp, #124	@ 0x7c
 80052ec:	9002      	str	r0, [sp, #8]
 80052ee:	9006      	str	r0, [sp, #24]
 80052f0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80052f4:	480a      	ldr	r0, [pc, #40]	@ (8005320 <siprintf+0x3c>)
 80052f6:	9107      	str	r1, [sp, #28]
 80052f8:	9104      	str	r1, [sp, #16]
 80052fa:	490a      	ldr	r1, [pc, #40]	@ (8005324 <siprintf+0x40>)
 80052fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8005300:	9105      	str	r1, [sp, #20]
 8005302:	2400      	movs	r4, #0
 8005304:	a902      	add	r1, sp, #8
 8005306:	6800      	ldr	r0, [r0, #0]
 8005308:	9301      	str	r3, [sp, #4]
 800530a:	941b      	str	r4, [sp, #108]	@ 0x6c
 800530c:	f000 f9a4 	bl	8005658 <_svfiprintf_r>
 8005310:	9b02      	ldr	r3, [sp, #8]
 8005312:	701c      	strb	r4, [r3, #0]
 8005314:	b01d      	add	sp, #116	@ 0x74
 8005316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800531a:	b003      	add	sp, #12
 800531c:	4770      	bx	lr
 800531e:	bf00      	nop
 8005320:	20000014 	.word	0x20000014
 8005324:	ffff0208 	.word	0xffff0208

08005328 <memcmp>:
 8005328:	b510      	push	{r4, lr}
 800532a:	3901      	subs	r1, #1
 800532c:	4402      	add	r2, r0
 800532e:	4290      	cmp	r0, r2
 8005330:	d101      	bne.n	8005336 <memcmp+0xe>
 8005332:	2000      	movs	r0, #0
 8005334:	e005      	b.n	8005342 <memcmp+0x1a>
 8005336:	7803      	ldrb	r3, [r0, #0]
 8005338:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800533c:	42a3      	cmp	r3, r4
 800533e:	d001      	beq.n	8005344 <memcmp+0x1c>
 8005340:	1b18      	subs	r0, r3, r4
 8005342:	bd10      	pop	{r4, pc}
 8005344:	3001      	adds	r0, #1
 8005346:	e7f2      	b.n	800532e <memcmp+0x6>

08005348 <memset>:
 8005348:	4402      	add	r2, r0
 800534a:	4603      	mov	r3, r0
 800534c:	4293      	cmp	r3, r2
 800534e:	d100      	bne.n	8005352 <memset+0xa>
 8005350:	4770      	bx	lr
 8005352:	f803 1b01 	strb.w	r1, [r3], #1
 8005356:	e7f9      	b.n	800534c <memset+0x4>

08005358 <__errno>:
 8005358:	4b01      	ldr	r3, [pc, #4]	@ (8005360 <__errno+0x8>)
 800535a:	6818      	ldr	r0, [r3, #0]
 800535c:	4770      	bx	lr
 800535e:	bf00      	nop
 8005360:	20000014 	.word	0x20000014

08005364 <__libc_init_array>:
 8005364:	b570      	push	{r4, r5, r6, lr}
 8005366:	4d0d      	ldr	r5, [pc, #52]	@ (800539c <__libc_init_array+0x38>)
 8005368:	4c0d      	ldr	r4, [pc, #52]	@ (80053a0 <__libc_init_array+0x3c>)
 800536a:	1b64      	subs	r4, r4, r5
 800536c:	10a4      	asrs	r4, r4, #2
 800536e:	2600      	movs	r6, #0
 8005370:	42a6      	cmp	r6, r4
 8005372:	d109      	bne.n	8005388 <__libc_init_array+0x24>
 8005374:	4d0b      	ldr	r5, [pc, #44]	@ (80053a4 <__libc_init_array+0x40>)
 8005376:	4c0c      	ldr	r4, [pc, #48]	@ (80053a8 <__libc_init_array+0x44>)
 8005378:	f000 fc64 	bl	8005c44 <_init>
 800537c:	1b64      	subs	r4, r4, r5
 800537e:	10a4      	asrs	r4, r4, #2
 8005380:	2600      	movs	r6, #0
 8005382:	42a6      	cmp	r6, r4
 8005384:	d105      	bne.n	8005392 <__libc_init_array+0x2e>
 8005386:	bd70      	pop	{r4, r5, r6, pc}
 8005388:	f855 3b04 	ldr.w	r3, [r5], #4
 800538c:	4798      	blx	r3
 800538e:	3601      	adds	r6, #1
 8005390:	e7ee      	b.n	8005370 <__libc_init_array+0xc>
 8005392:	f855 3b04 	ldr.w	r3, [r5], #4
 8005396:	4798      	blx	r3
 8005398:	3601      	adds	r6, #1
 800539a:	e7f2      	b.n	8005382 <__libc_init_array+0x1e>
 800539c:	08005cd8 	.word	0x08005cd8
 80053a0:	08005cd8 	.word	0x08005cd8
 80053a4:	08005cd8 	.word	0x08005cd8
 80053a8:	08005cdc 	.word	0x08005cdc

080053ac <__retarget_lock_acquire_recursive>:
 80053ac:	4770      	bx	lr

080053ae <__retarget_lock_release_recursive>:
 80053ae:	4770      	bx	lr

080053b0 <_free_r>:
 80053b0:	b538      	push	{r3, r4, r5, lr}
 80053b2:	4605      	mov	r5, r0
 80053b4:	2900      	cmp	r1, #0
 80053b6:	d041      	beq.n	800543c <_free_r+0x8c>
 80053b8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80053bc:	1f0c      	subs	r4, r1, #4
 80053be:	2b00      	cmp	r3, #0
 80053c0:	bfb8      	it	lt
 80053c2:	18e4      	addlt	r4, r4, r3
 80053c4:	f000 f8e0 	bl	8005588 <__malloc_lock>
 80053c8:	4a1d      	ldr	r2, [pc, #116]	@ (8005440 <_free_r+0x90>)
 80053ca:	6813      	ldr	r3, [r2, #0]
 80053cc:	b933      	cbnz	r3, 80053dc <_free_r+0x2c>
 80053ce:	6063      	str	r3, [r4, #4]
 80053d0:	6014      	str	r4, [r2, #0]
 80053d2:	4628      	mov	r0, r5
 80053d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80053d8:	f000 b8dc 	b.w	8005594 <__malloc_unlock>
 80053dc:	42a3      	cmp	r3, r4
 80053de:	d908      	bls.n	80053f2 <_free_r+0x42>
 80053e0:	6820      	ldr	r0, [r4, #0]
 80053e2:	1821      	adds	r1, r4, r0
 80053e4:	428b      	cmp	r3, r1
 80053e6:	bf01      	itttt	eq
 80053e8:	6819      	ldreq	r1, [r3, #0]
 80053ea:	685b      	ldreq	r3, [r3, #4]
 80053ec:	1809      	addeq	r1, r1, r0
 80053ee:	6021      	streq	r1, [r4, #0]
 80053f0:	e7ed      	b.n	80053ce <_free_r+0x1e>
 80053f2:	461a      	mov	r2, r3
 80053f4:	685b      	ldr	r3, [r3, #4]
 80053f6:	b10b      	cbz	r3, 80053fc <_free_r+0x4c>
 80053f8:	42a3      	cmp	r3, r4
 80053fa:	d9fa      	bls.n	80053f2 <_free_r+0x42>
 80053fc:	6811      	ldr	r1, [r2, #0]
 80053fe:	1850      	adds	r0, r2, r1
 8005400:	42a0      	cmp	r0, r4
 8005402:	d10b      	bne.n	800541c <_free_r+0x6c>
 8005404:	6820      	ldr	r0, [r4, #0]
 8005406:	4401      	add	r1, r0
 8005408:	1850      	adds	r0, r2, r1
 800540a:	4283      	cmp	r3, r0
 800540c:	6011      	str	r1, [r2, #0]
 800540e:	d1e0      	bne.n	80053d2 <_free_r+0x22>
 8005410:	6818      	ldr	r0, [r3, #0]
 8005412:	685b      	ldr	r3, [r3, #4]
 8005414:	6053      	str	r3, [r2, #4]
 8005416:	4408      	add	r0, r1
 8005418:	6010      	str	r0, [r2, #0]
 800541a:	e7da      	b.n	80053d2 <_free_r+0x22>
 800541c:	d902      	bls.n	8005424 <_free_r+0x74>
 800541e:	230c      	movs	r3, #12
 8005420:	602b      	str	r3, [r5, #0]
 8005422:	e7d6      	b.n	80053d2 <_free_r+0x22>
 8005424:	6820      	ldr	r0, [r4, #0]
 8005426:	1821      	adds	r1, r4, r0
 8005428:	428b      	cmp	r3, r1
 800542a:	bf04      	itt	eq
 800542c:	6819      	ldreq	r1, [r3, #0]
 800542e:	685b      	ldreq	r3, [r3, #4]
 8005430:	6063      	str	r3, [r4, #4]
 8005432:	bf04      	itt	eq
 8005434:	1809      	addeq	r1, r1, r0
 8005436:	6021      	streq	r1, [r4, #0]
 8005438:	6054      	str	r4, [r2, #4]
 800543a:	e7ca      	b.n	80053d2 <_free_r+0x22>
 800543c:	bd38      	pop	{r3, r4, r5, pc}
 800543e:	bf00      	nop
 8005440:	2000137c 	.word	0x2000137c

08005444 <sbrk_aligned>:
 8005444:	b570      	push	{r4, r5, r6, lr}
 8005446:	4e0f      	ldr	r6, [pc, #60]	@ (8005484 <sbrk_aligned+0x40>)
 8005448:	460c      	mov	r4, r1
 800544a:	6831      	ldr	r1, [r6, #0]
 800544c:	4605      	mov	r5, r0
 800544e:	b911      	cbnz	r1, 8005456 <sbrk_aligned+0x12>
 8005450:	f000 fba4 	bl	8005b9c <_sbrk_r>
 8005454:	6030      	str	r0, [r6, #0]
 8005456:	4621      	mov	r1, r4
 8005458:	4628      	mov	r0, r5
 800545a:	f000 fb9f 	bl	8005b9c <_sbrk_r>
 800545e:	1c43      	adds	r3, r0, #1
 8005460:	d103      	bne.n	800546a <sbrk_aligned+0x26>
 8005462:	f04f 34ff 	mov.w	r4, #4294967295
 8005466:	4620      	mov	r0, r4
 8005468:	bd70      	pop	{r4, r5, r6, pc}
 800546a:	1cc4      	adds	r4, r0, #3
 800546c:	f024 0403 	bic.w	r4, r4, #3
 8005470:	42a0      	cmp	r0, r4
 8005472:	d0f8      	beq.n	8005466 <sbrk_aligned+0x22>
 8005474:	1a21      	subs	r1, r4, r0
 8005476:	4628      	mov	r0, r5
 8005478:	f000 fb90 	bl	8005b9c <_sbrk_r>
 800547c:	3001      	adds	r0, #1
 800547e:	d1f2      	bne.n	8005466 <sbrk_aligned+0x22>
 8005480:	e7ef      	b.n	8005462 <sbrk_aligned+0x1e>
 8005482:	bf00      	nop
 8005484:	20001378 	.word	0x20001378

08005488 <_malloc_r>:
 8005488:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800548c:	1ccd      	adds	r5, r1, #3
 800548e:	f025 0503 	bic.w	r5, r5, #3
 8005492:	3508      	adds	r5, #8
 8005494:	2d0c      	cmp	r5, #12
 8005496:	bf38      	it	cc
 8005498:	250c      	movcc	r5, #12
 800549a:	2d00      	cmp	r5, #0
 800549c:	4606      	mov	r6, r0
 800549e:	db01      	blt.n	80054a4 <_malloc_r+0x1c>
 80054a0:	42a9      	cmp	r1, r5
 80054a2:	d904      	bls.n	80054ae <_malloc_r+0x26>
 80054a4:	230c      	movs	r3, #12
 80054a6:	6033      	str	r3, [r6, #0]
 80054a8:	2000      	movs	r0, #0
 80054aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80054ae:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005584 <_malloc_r+0xfc>
 80054b2:	f000 f869 	bl	8005588 <__malloc_lock>
 80054b6:	f8d8 3000 	ldr.w	r3, [r8]
 80054ba:	461c      	mov	r4, r3
 80054bc:	bb44      	cbnz	r4, 8005510 <_malloc_r+0x88>
 80054be:	4629      	mov	r1, r5
 80054c0:	4630      	mov	r0, r6
 80054c2:	f7ff ffbf 	bl	8005444 <sbrk_aligned>
 80054c6:	1c43      	adds	r3, r0, #1
 80054c8:	4604      	mov	r4, r0
 80054ca:	d158      	bne.n	800557e <_malloc_r+0xf6>
 80054cc:	f8d8 4000 	ldr.w	r4, [r8]
 80054d0:	4627      	mov	r7, r4
 80054d2:	2f00      	cmp	r7, #0
 80054d4:	d143      	bne.n	800555e <_malloc_r+0xd6>
 80054d6:	2c00      	cmp	r4, #0
 80054d8:	d04b      	beq.n	8005572 <_malloc_r+0xea>
 80054da:	6823      	ldr	r3, [r4, #0]
 80054dc:	4639      	mov	r1, r7
 80054de:	4630      	mov	r0, r6
 80054e0:	eb04 0903 	add.w	r9, r4, r3
 80054e4:	f000 fb5a 	bl	8005b9c <_sbrk_r>
 80054e8:	4581      	cmp	r9, r0
 80054ea:	d142      	bne.n	8005572 <_malloc_r+0xea>
 80054ec:	6821      	ldr	r1, [r4, #0]
 80054ee:	1a6d      	subs	r5, r5, r1
 80054f0:	4629      	mov	r1, r5
 80054f2:	4630      	mov	r0, r6
 80054f4:	f7ff ffa6 	bl	8005444 <sbrk_aligned>
 80054f8:	3001      	adds	r0, #1
 80054fa:	d03a      	beq.n	8005572 <_malloc_r+0xea>
 80054fc:	6823      	ldr	r3, [r4, #0]
 80054fe:	442b      	add	r3, r5
 8005500:	6023      	str	r3, [r4, #0]
 8005502:	f8d8 3000 	ldr.w	r3, [r8]
 8005506:	685a      	ldr	r2, [r3, #4]
 8005508:	bb62      	cbnz	r2, 8005564 <_malloc_r+0xdc>
 800550a:	f8c8 7000 	str.w	r7, [r8]
 800550e:	e00f      	b.n	8005530 <_malloc_r+0xa8>
 8005510:	6822      	ldr	r2, [r4, #0]
 8005512:	1b52      	subs	r2, r2, r5
 8005514:	d420      	bmi.n	8005558 <_malloc_r+0xd0>
 8005516:	2a0b      	cmp	r2, #11
 8005518:	d917      	bls.n	800554a <_malloc_r+0xc2>
 800551a:	1961      	adds	r1, r4, r5
 800551c:	42a3      	cmp	r3, r4
 800551e:	6025      	str	r5, [r4, #0]
 8005520:	bf18      	it	ne
 8005522:	6059      	strne	r1, [r3, #4]
 8005524:	6863      	ldr	r3, [r4, #4]
 8005526:	bf08      	it	eq
 8005528:	f8c8 1000 	streq.w	r1, [r8]
 800552c:	5162      	str	r2, [r4, r5]
 800552e:	604b      	str	r3, [r1, #4]
 8005530:	4630      	mov	r0, r6
 8005532:	f000 f82f 	bl	8005594 <__malloc_unlock>
 8005536:	f104 000b 	add.w	r0, r4, #11
 800553a:	1d23      	adds	r3, r4, #4
 800553c:	f020 0007 	bic.w	r0, r0, #7
 8005540:	1ac2      	subs	r2, r0, r3
 8005542:	bf1c      	itt	ne
 8005544:	1a1b      	subne	r3, r3, r0
 8005546:	50a3      	strne	r3, [r4, r2]
 8005548:	e7af      	b.n	80054aa <_malloc_r+0x22>
 800554a:	6862      	ldr	r2, [r4, #4]
 800554c:	42a3      	cmp	r3, r4
 800554e:	bf0c      	ite	eq
 8005550:	f8c8 2000 	streq.w	r2, [r8]
 8005554:	605a      	strne	r2, [r3, #4]
 8005556:	e7eb      	b.n	8005530 <_malloc_r+0xa8>
 8005558:	4623      	mov	r3, r4
 800555a:	6864      	ldr	r4, [r4, #4]
 800555c:	e7ae      	b.n	80054bc <_malloc_r+0x34>
 800555e:	463c      	mov	r4, r7
 8005560:	687f      	ldr	r7, [r7, #4]
 8005562:	e7b6      	b.n	80054d2 <_malloc_r+0x4a>
 8005564:	461a      	mov	r2, r3
 8005566:	685b      	ldr	r3, [r3, #4]
 8005568:	42a3      	cmp	r3, r4
 800556a:	d1fb      	bne.n	8005564 <_malloc_r+0xdc>
 800556c:	2300      	movs	r3, #0
 800556e:	6053      	str	r3, [r2, #4]
 8005570:	e7de      	b.n	8005530 <_malloc_r+0xa8>
 8005572:	230c      	movs	r3, #12
 8005574:	6033      	str	r3, [r6, #0]
 8005576:	4630      	mov	r0, r6
 8005578:	f000 f80c 	bl	8005594 <__malloc_unlock>
 800557c:	e794      	b.n	80054a8 <_malloc_r+0x20>
 800557e:	6005      	str	r5, [r0, #0]
 8005580:	e7d6      	b.n	8005530 <_malloc_r+0xa8>
 8005582:	bf00      	nop
 8005584:	2000137c 	.word	0x2000137c

08005588 <__malloc_lock>:
 8005588:	4801      	ldr	r0, [pc, #4]	@ (8005590 <__malloc_lock+0x8>)
 800558a:	f7ff bf0f 	b.w	80053ac <__retarget_lock_acquire_recursive>
 800558e:	bf00      	nop
 8005590:	20001374 	.word	0x20001374

08005594 <__malloc_unlock>:
 8005594:	4801      	ldr	r0, [pc, #4]	@ (800559c <__malloc_unlock+0x8>)
 8005596:	f7ff bf0a 	b.w	80053ae <__retarget_lock_release_recursive>
 800559a:	bf00      	nop
 800559c:	20001374 	.word	0x20001374

080055a0 <__ssputs_r>:
 80055a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055a4:	688e      	ldr	r6, [r1, #8]
 80055a6:	461f      	mov	r7, r3
 80055a8:	42be      	cmp	r6, r7
 80055aa:	680b      	ldr	r3, [r1, #0]
 80055ac:	4682      	mov	sl, r0
 80055ae:	460c      	mov	r4, r1
 80055b0:	4690      	mov	r8, r2
 80055b2:	d82d      	bhi.n	8005610 <__ssputs_r+0x70>
 80055b4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80055b8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80055bc:	d026      	beq.n	800560c <__ssputs_r+0x6c>
 80055be:	6965      	ldr	r5, [r4, #20]
 80055c0:	6909      	ldr	r1, [r1, #16]
 80055c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80055c6:	eba3 0901 	sub.w	r9, r3, r1
 80055ca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80055ce:	1c7b      	adds	r3, r7, #1
 80055d0:	444b      	add	r3, r9
 80055d2:	106d      	asrs	r5, r5, #1
 80055d4:	429d      	cmp	r5, r3
 80055d6:	bf38      	it	cc
 80055d8:	461d      	movcc	r5, r3
 80055da:	0553      	lsls	r3, r2, #21
 80055dc:	d527      	bpl.n	800562e <__ssputs_r+0x8e>
 80055de:	4629      	mov	r1, r5
 80055e0:	f7ff ff52 	bl	8005488 <_malloc_r>
 80055e4:	4606      	mov	r6, r0
 80055e6:	b360      	cbz	r0, 8005642 <__ssputs_r+0xa2>
 80055e8:	6921      	ldr	r1, [r4, #16]
 80055ea:	464a      	mov	r2, r9
 80055ec:	f000 fae6 	bl	8005bbc <memcpy>
 80055f0:	89a3      	ldrh	r3, [r4, #12]
 80055f2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80055f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80055fa:	81a3      	strh	r3, [r4, #12]
 80055fc:	6126      	str	r6, [r4, #16]
 80055fe:	6165      	str	r5, [r4, #20]
 8005600:	444e      	add	r6, r9
 8005602:	eba5 0509 	sub.w	r5, r5, r9
 8005606:	6026      	str	r6, [r4, #0]
 8005608:	60a5      	str	r5, [r4, #8]
 800560a:	463e      	mov	r6, r7
 800560c:	42be      	cmp	r6, r7
 800560e:	d900      	bls.n	8005612 <__ssputs_r+0x72>
 8005610:	463e      	mov	r6, r7
 8005612:	6820      	ldr	r0, [r4, #0]
 8005614:	4632      	mov	r2, r6
 8005616:	4641      	mov	r1, r8
 8005618:	f000 faa6 	bl	8005b68 <memmove>
 800561c:	68a3      	ldr	r3, [r4, #8]
 800561e:	1b9b      	subs	r3, r3, r6
 8005620:	60a3      	str	r3, [r4, #8]
 8005622:	6823      	ldr	r3, [r4, #0]
 8005624:	4433      	add	r3, r6
 8005626:	6023      	str	r3, [r4, #0]
 8005628:	2000      	movs	r0, #0
 800562a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800562e:	462a      	mov	r2, r5
 8005630:	f000 fad2 	bl	8005bd8 <_realloc_r>
 8005634:	4606      	mov	r6, r0
 8005636:	2800      	cmp	r0, #0
 8005638:	d1e0      	bne.n	80055fc <__ssputs_r+0x5c>
 800563a:	6921      	ldr	r1, [r4, #16]
 800563c:	4650      	mov	r0, sl
 800563e:	f7ff feb7 	bl	80053b0 <_free_r>
 8005642:	230c      	movs	r3, #12
 8005644:	f8ca 3000 	str.w	r3, [sl]
 8005648:	89a3      	ldrh	r3, [r4, #12]
 800564a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800564e:	81a3      	strh	r3, [r4, #12]
 8005650:	f04f 30ff 	mov.w	r0, #4294967295
 8005654:	e7e9      	b.n	800562a <__ssputs_r+0x8a>
	...

08005658 <_svfiprintf_r>:
 8005658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800565c:	4698      	mov	r8, r3
 800565e:	898b      	ldrh	r3, [r1, #12]
 8005660:	061b      	lsls	r3, r3, #24
 8005662:	b09d      	sub	sp, #116	@ 0x74
 8005664:	4607      	mov	r7, r0
 8005666:	460d      	mov	r5, r1
 8005668:	4614      	mov	r4, r2
 800566a:	d510      	bpl.n	800568e <_svfiprintf_r+0x36>
 800566c:	690b      	ldr	r3, [r1, #16]
 800566e:	b973      	cbnz	r3, 800568e <_svfiprintf_r+0x36>
 8005670:	2140      	movs	r1, #64	@ 0x40
 8005672:	f7ff ff09 	bl	8005488 <_malloc_r>
 8005676:	6028      	str	r0, [r5, #0]
 8005678:	6128      	str	r0, [r5, #16]
 800567a:	b930      	cbnz	r0, 800568a <_svfiprintf_r+0x32>
 800567c:	230c      	movs	r3, #12
 800567e:	603b      	str	r3, [r7, #0]
 8005680:	f04f 30ff 	mov.w	r0, #4294967295
 8005684:	b01d      	add	sp, #116	@ 0x74
 8005686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800568a:	2340      	movs	r3, #64	@ 0x40
 800568c:	616b      	str	r3, [r5, #20]
 800568e:	2300      	movs	r3, #0
 8005690:	9309      	str	r3, [sp, #36]	@ 0x24
 8005692:	2320      	movs	r3, #32
 8005694:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005698:	f8cd 800c 	str.w	r8, [sp, #12]
 800569c:	2330      	movs	r3, #48	@ 0x30
 800569e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800583c <_svfiprintf_r+0x1e4>
 80056a2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80056a6:	f04f 0901 	mov.w	r9, #1
 80056aa:	4623      	mov	r3, r4
 80056ac:	469a      	mov	sl, r3
 80056ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 80056b2:	b10a      	cbz	r2, 80056b8 <_svfiprintf_r+0x60>
 80056b4:	2a25      	cmp	r2, #37	@ 0x25
 80056b6:	d1f9      	bne.n	80056ac <_svfiprintf_r+0x54>
 80056b8:	ebba 0b04 	subs.w	fp, sl, r4
 80056bc:	d00b      	beq.n	80056d6 <_svfiprintf_r+0x7e>
 80056be:	465b      	mov	r3, fp
 80056c0:	4622      	mov	r2, r4
 80056c2:	4629      	mov	r1, r5
 80056c4:	4638      	mov	r0, r7
 80056c6:	f7ff ff6b 	bl	80055a0 <__ssputs_r>
 80056ca:	3001      	adds	r0, #1
 80056cc:	f000 80a7 	beq.w	800581e <_svfiprintf_r+0x1c6>
 80056d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80056d2:	445a      	add	r2, fp
 80056d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80056d6:	f89a 3000 	ldrb.w	r3, [sl]
 80056da:	2b00      	cmp	r3, #0
 80056dc:	f000 809f 	beq.w	800581e <_svfiprintf_r+0x1c6>
 80056e0:	2300      	movs	r3, #0
 80056e2:	f04f 32ff 	mov.w	r2, #4294967295
 80056e6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80056ea:	f10a 0a01 	add.w	sl, sl, #1
 80056ee:	9304      	str	r3, [sp, #16]
 80056f0:	9307      	str	r3, [sp, #28]
 80056f2:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80056f6:	931a      	str	r3, [sp, #104]	@ 0x68
 80056f8:	4654      	mov	r4, sl
 80056fa:	2205      	movs	r2, #5
 80056fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005700:	484e      	ldr	r0, [pc, #312]	@ (800583c <_svfiprintf_r+0x1e4>)
 8005702:	f7fa fd65 	bl	80001d0 <memchr>
 8005706:	9a04      	ldr	r2, [sp, #16]
 8005708:	b9d8      	cbnz	r0, 8005742 <_svfiprintf_r+0xea>
 800570a:	06d0      	lsls	r0, r2, #27
 800570c:	bf44      	itt	mi
 800570e:	2320      	movmi	r3, #32
 8005710:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005714:	0711      	lsls	r1, r2, #28
 8005716:	bf44      	itt	mi
 8005718:	232b      	movmi	r3, #43	@ 0x2b
 800571a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800571e:	f89a 3000 	ldrb.w	r3, [sl]
 8005722:	2b2a      	cmp	r3, #42	@ 0x2a
 8005724:	d015      	beq.n	8005752 <_svfiprintf_r+0xfa>
 8005726:	9a07      	ldr	r2, [sp, #28]
 8005728:	4654      	mov	r4, sl
 800572a:	2000      	movs	r0, #0
 800572c:	f04f 0c0a 	mov.w	ip, #10
 8005730:	4621      	mov	r1, r4
 8005732:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005736:	3b30      	subs	r3, #48	@ 0x30
 8005738:	2b09      	cmp	r3, #9
 800573a:	d94b      	bls.n	80057d4 <_svfiprintf_r+0x17c>
 800573c:	b1b0      	cbz	r0, 800576c <_svfiprintf_r+0x114>
 800573e:	9207      	str	r2, [sp, #28]
 8005740:	e014      	b.n	800576c <_svfiprintf_r+0x114>
 8005742:	eba0 0308 	sub.w	r3, r0, r8
 8005746:	fa09 f303 	lsl.w	r3, r9, r3
 800574a:	4313      	orrs	r3, r2
 800574c:	9304      	str	r3, [sp, #16]
 800574e:	46a2      	mov	sl, r4
 8005750:	e7d2      	b.n	80056f8 <_svfiprintf_r+0xa0>
 8005752:	9b03      	ldr	r3, [sp, #12]
 8005754:	1d19      	adds	r1, r3, #4
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	9103      	str	r1, [sp, #12]
 800575a:	2b00      	cmp	r3, #0
 800575c:	bfbb      	ittet	lt
 800575e:	425b      	neglt	r3, r3
 8005760:	f042 0202 	orrlt.w	r2, r2, #2
 8005764:	9307      	strge	r3, [sp, #28]
 8005766:	9307      	strlt	r3, [sp, #28]
 8005768:	bfb8      	it	lt
 800576a:	9204      	strlt	r2, [sp, #16]
 800576c:	7823      	ldrb	r3, [r4, #0]
 800576e:	2b2e      	cmp	r3, #46	@ 0x2e
 8005770:	d10a      	bne.n	8005788 <_svfiprintf_r+0x130>
 8005772:	7863      	ldrb	r3, [r4, #1]
 8005774:	2b2a      	cmp	r3, #42	@ 0x2a
 8005776:	d132      	bne.n	80057de <_svfiprintf_r+0x186>
 8005778:	9b03      	ldr	r3, [sp, #12]
 800577a:	1d1a      	adds	r2, r3, #4
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	9203      	str	r2, [sp, #12]
 8005780:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005784:	3402      	adds	r4, #2
 8005786:	9305      	str	r3, [sp, #20]
 8005788:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800584c <_svfiprintf_r+0x1f4>
 800578c:	7821      	ldrb	r1, [r4, #0]
 800578e:	2203      	movs	r2, #3
 8005790:	4650      	mov	r0, sl
 8005792:	f7fa fd1d 	bl	80001d0 <memchr>
 8005796:	b138      	cbz	r0, 80057a8 <_svfiprintf_r+0x150>
 8005798:	9b04      	ldr	r3, [sp, #16]
 800579a:	eba0 000a 	sub.w	r0, r0, sl
 800579e:	2240      	movs	r2, #64	@ 0x40
 80057a0:	4082      	lsls	r2, r0
 80057a2:	4313      	orrs	r3, r2
 80057a4:	3401      	adds	r4, #1
 80057a6:	9304      	str	r3, [sp, #16]
 80057a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80057ac:	4824      	ldr	r0, [pc, #144]	@ (8005840 <_svfiprintf_r+0x1e8>)
 80057ae:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80057b2:	2206      	movs	r2, #6
 80057b4:	f7fa fd0c 	bl	80001d0 <memchr>
 80057b8:	2800      	cmp	r0, #0
 80057ba:	d036      	beq.n	800582a <_svfiprintf_r+0x1d2>
 80057bc:	4b21      	ldr	r3, [pc, #132]	@ (8005844 <_svfiprintf_r+0x1ec>)
 80057be:	bb1b      	cbnz	r3, 8005808 <_svfiprintf_r+0x1b0>
 80057c0:	9b03      	ldr	r3, [sp, #12]
 80057c2:	3307      	adds	r3, #7
 80057c4:	f023 0307 	bic.w	r3, r3, #7
 80057c8:	3308      	adds	r3, #8
 80057ca:	9303      	str	r3, [sp, #12]
 80057cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80057ce:	4433      	add	r3, r6
 80057d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80057d2:	e76a      	b.n	80056aa <_svfiprintf_r+0x52>
 80057d4:	fb0c 3202 	mla	r2, ip, r2, r3
 80057d8:	460c      	mov	r4, r1
 80057da:	2001      	movs	r0, #1
 80057dc:	e7a8      	b.n	8005730 <_svfiprintf_r+0xd8>
 80057de:	2300      	movs	r3, #0
 80057e0:	3401      	adds	r4, #1
 80057e2:	9305      	str	r3, [sp, #20]
 80057e4:	4619      	mov	r1, r3
 80057e6:	f04f 0c0a 	mov.w	ip, #10
 80057ea:	4620      	mov	r0, r4
 80057ec:	f810 2b01 	ldrb.w	r2, [r0], #1
 80057f0:	3a30      	subs	r2, #48	@ 0x30
 80057f2:	2a09      	cmp	r2, #9
 80057f4:	d903      	bls.n	80057fe <_svfiprintf_r+0x1a6>
 80057f6:	2b00      	cmp	r3, #0
 80057f8:	d0c6      	beq.n	8005788 <_svfiprintf_r+0x130>
 80057fa:	9105      	str	r1, [sp, #20]
 80057fc:	e7c4      	b.n	8005788 <_svfiprintf_r+0x130>
 80057fe:	fb0c 2101 	mla	r1, ip, r1, r2
 8005802:	4604      	mov	r4, r0
 8005804:	2301      	movs	r3, #1
 8005806:	e7f0      	b.n	80057ea <_svfiprintf_r+0x192>
 8005808:	ab03      	add	r3, sp, #12
 800580a:	9300      	str	r3, [sp, #0]
 800580c:	462a      	mov	r2, r5
 800580e:	4b0e      	ldr	r3, [pc, #56]	@ (8005848 <_svfiprintf_r+0x1f0>)
 8005810:	a904      	add	r1, sp, #16
 8005812:	4638      	mov	r0, r7
 8005814:	f3af 8000 	nop.w
 8005818:	1c42      	adds	r2, r0, #1
 800581a:	4606      	mov	r6, r0
 800581c:	d1d6      	bne.n	80057cc <_svfiprintf_r+0x174>
 800581e:	89ab      	ldrh	r3, [r5, #12]
 8005820:	065b      	lsls	r3, r3, #25
 8005822:	f53f af2d 	bmi.w	8005680 <_svfiprintf_r+0x28>
 8005826:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005828:	e72c      	b.n	8005684 <_svfiprintf_r+0x2c>
 800582a:	ab03      	add	r3, sp, #12
 800582c:	9300      	str	r3, [sp, #0]
 800582e:	462a      	mov	r2, r5
 8005830:	4b05      	ldr	r3, [pc, #20]	@ (8005848 <_svfiprintf_r+0x1f0>)
 8005832:	a904      	add	r1, sp, #16
 8005834:	4638      	mov	r0, r7
 8005836:	f000 f879 	bl	800592c <_printf_i>
 800583a:	e7ed      	b.n	8005818 <_svfiprintf_r+0x1c0>
 800583c:	08005c9c 	.word	0x08005c9c
 8005840:	08005ca6 	.word	0x08005ca6
 8005844:	00000000 	.word	0x00000000
 8005848:	080055a1 	.word	0x080055a1
 800584c:	08005ca2 	.word	0x08005ca2

08005850 <_printf_common>:
 8005850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005854:	4616      	mov	r6, r2
 8005856:	4698      	mov	r8, r3
 8005858:	688a      	ldr	r2, [r1, #8]
 800585a:	690b      	ldr	r3, [r1, #16]
 800585c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005860:	4293      	cmp	r3, r2
 8005862:	bfb8      	it	lt
 8005864:	4613      	movlt	r3, r2
 8005866:	6033      	str	r3, [r6, #0]
 8005868:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800586c:	4607      	mov	r7, r0
 800586e:	460c      	mov	r4, r1
 8005870:	b10a      	cbz	r2, 8005876 <_printf_common+0x26>
 8005872:	3301      	adds	r3, #1
 8005874:	6033      	str	r3, [r6, #0]
 8005876:	6823      	ldr	r3, [r4, #0]
 8005878:	0699      	lsls	r1, r3, #26
 800587a:	bf42      	ittt	mi
 800587c:	6833      	ldrmi	r3, [r6, #0]
 800587e:	3302      	addmi	r3, #2
 8005880:	6033      	strmi	r3, [r6, #0]
 8005882:	6825      	ldr	r5, [r4, #0]
 8005884:	f015 0506 	ands.w	r5, r5, #6
 8005888:	d106      	bne.n	8005898 <_printf_common+0x48>
 800588a:	f104 0a19 	add.w	sl, r4, #25
 800588e:	68e3      	ldr	r3, [r4, #12]
 8005890:	6832      	ldr	r2, [r6, #0]
 8005892:	1a9b      	subs	r3, r3, r2
 8005894:	42ab      	cmp	r3, r5
 8005896:	dc26      	bgt.n	80058e6 <_printf_common+0x96>
 8005898:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800589c:	6822      	ldr	r2, [r4, #0]
 800589e:	3b00      	subs	r3, #0
 80058a0:	bf18      	it	ne
 80058a2:	2301      	movne	r3, #1
 80058a4:	0692      	lsls	r2, r2, #26
 80058a6:	d42b      	bmi.n	8005900 <_printf_common+0xb0>
 80058a8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80058ac:	4641      	mov	r1, r8
 80058ae:	4638      	mov	r0, r7
 80058b0:	47c8      	blx	r9
 80058b2:	3001      	adds	r0, #1
 80058b4:	d01e      	beq.n	80058f4 <_printf_common+0xa4>
 80058b6:	6823      	ldr	r3, [r4, #0]
 80058b8:	6922      	ldr	r2, [r4, #16]
 80058ba:	f003 0306 	and.w	r3, r3, #6
 80058be:	2b04      	cmp	r3, #4
 80058c0:	bf02      	ittt	eq
 80058c2:	68e5      	ldreq	r5, [r4, #12]
 80058c4:	6833      	ldreq	r3, [r6, #0]
 80058c6:	1aed      	subeq	r5, r5, r3
 80058c8:	68a3      	ldr	r3, [r4, #8]
 80058ca:	bf0c      	ite	eq
 80058cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80058d0:	2500      	movne	r5, #0
 80058d2:	4293      	cmp	r3, r2
 80058d4:	bfc4      	itt	gt
 80058d6:	1a9b      	subgt	r3, r3, r2
 80058d8:	18ed      	addgt	r5, r5, r3
 80058da:	2600      	movs	r6, #0
 80058dc:	341a      	adds	r4, #26
 80058de:	42b5      	cmp	r5, r6
 80058e0:	d11a      	bne.n	8005918 <_printf_common+0xc8>
 80058e2:	2000      	movs	r0, #0
 80058e4:	e008      	b.n	80058f8 <_printf_common+0xa8>
 80058e6:	2301      	movs	r3, #1
 80058e8:	4652      	mov	r2, sl
 80058ea:	4641      	mov	r1, r8
 80058ec:	4638      	mov	r0, r7
 80058ee:	47c8      	blx	r9
 80058f0:	3001      	adds	r0, #1
 80058f2:	d103      	bne.n	80058fc <_printf_common+0xac>
 80058f4:	f04f 30ff 	mov.w	r0, #4294967295
 80058f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80058fc:	3501      	adds	r5, #1
 80058fe:	e7c6      	b.n	800588e <_printf_common+0x3e>
 8005900:	18e1      	adds	r1, r4, r3
 8005902:	1c5a      	adds	r2, r3, #1
 8005904:	2030      	movs	r0, #48	@ 0x30
 8005906:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800590a:	4422      	add	r2, r4
 800590c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005910:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005914:	3302      	adds	r3, #2
 8005916:	e7c7      	b.n	80058a8 <_printf_common+0x58>
 8005918:	2301      	movs	r3, #1
 800591a:	4622      	mov	r2, r4
 800591c:	4641      	mov	r1, r8
 800591e:	4638      	mov	r0, r7
 8005920:	47c8      	blx	r9
 8005922:	3001      	adds	r0, #1
 8005924:	d0e6      	beq.n	80058f4 <_printf_common+0xa4>
 8005926:	3601      	adds	r6, #1
 8005928:	e7d9      	b.n	80058de <_printf_common+0x8e>
	...

0800592c <_printf_i>:
 800592c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005930:	7e0f      	ldrb	r7, [r1, #24]
 8005932:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005934:	2f78      	cmp	r7, #120	@ 0x78
 8005936:	4691      	mov	r9, r2
 8005938:	4680      	mov	r8, r0
 800593a:	460c      	mov	r4, r1
 800593c:	469a      	mov	sl, r3
 800593e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005942:	d807      	bhi.n	8005954 <_printf_i+0x28>
 8005944:	2f62      	cmp	r7, #98	@ 0x62
 8005946:	d80a      	bhi.n	800595e <_printf_i+0x32>
 8005948:	2f00      	cmp	r7, #0
 800594a:	f000 80d1 	beq.w	8005af0 <_printf_i+0x1c4>
 800594e:	2f58      	cmp	r7, #88	@ 0x58
 8005950:	f000 80b8 	beq.w	8005ac4 <_printf_i+0x198>
 8005954:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005958:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800595c:	e03a      	b.n	80059d4 <_printf_i+0xa8>
 800595e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005962:	2b15      	cmp	r3, #21
 8005964:	d8f6      	bhi.n	8005954 <_printf_i+0x28>
 8005966:	a101      	add	r1, pc, #4	@ (adr r1, 800596c <_printf_i+0x40>)
 8005968:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800596c:	080059c5 	.word	0x080059c5
 8005970:	080059d9 	.word	0x080059d9
 8005974:	08005955 	.word	0x08005955
 8005978:	08005955 	.word	0x08005955
 800597c:	08005955 	.word	0x08005955
 8005980:	08005955 	.word	0x08005955
 8005984:	080059d9 	.word	0x080059d9
 8005988:	08005955 	.word	0x08005955
 800598c:	08005955 	.word	0x08005955
 8005990:	08005955 	.word	0x08005955
 8005994:	08005955 	.word	0x08005955
 8005998:	08005ad7 	.word	0x08005ad7
 800599c:	08005a03 	.word	0x08005a03
 80059a0:	08005a91 	.word	0x08005a91
 80059a4:	08005955 	.word	0x08005955
 80059a8:	08005955 	.word	0x08005955
 80059ac:	08005af9 	.word	0x08005af9
 80059b0:	08005955 	.word	0x08005955
 80059b4:	08005a03 	.word	0x08005a03
 80059b8:	08005955 	.word	0x08005955
 80059bc:	08005955 	.word	0x08005955
 80059c0:	08005a99 	.word	0x08005a99
 80059c4:	6833      	ldr	r3, [r6, #0]
 80059c6:	1d1a      	adds	r2, r3, #4
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	6032      	str	r2, [r6, #0]
 80059cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80059d0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80059d4:	2301      	movs	r3, #1
 80059d6:	e09c      	b.n	8005b12 <_printf_i+0x1e6>
 80059d8:	6833      	ldr	r3, [r6, #0]
 80059da:	6820      	ldr	r0, [r4, #0]
 80059dc:	1d19      	adds	r1, r3, #4
 80059de:	6031      	str	r1, [r6, #0]
 80059e0:	0606      	lsls	r6, r0, #24
 80059e2:	d501      	bpl.n	80059e8 <_printf_i+0xbc>
 80059e4:	681d      	ldr	r5, [r3, #0]
 80059e6:	e003      	b.n	80059f0 <_printf_i+0xc4>
 80059e8:	0645      	lsls	r5, r0, #25
 80059ea:	d5fb      	bpl.n	80059e4 <_printf_i+0xb8>
 80059ec:	f9b3 5000 	ldrsh.w	r5, [r3]
 80059f0:	2d00      	cmp	r5, #0
 80059f2:	da03      	bge.n	80059fc <_printf_i+0xd0>
 80059f4:	232d      	movs	r3, #45	@ 0x2d
 80059f6:	426d      	negs	r5, r5
 80059f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80059fc:	4858      	ldr	r0, [pc, #352]	@ (8005b60 <_printf_i+0x234>)
 80059fe:	230a      	movs	r3, #10
 8005a00:	e011      	b.n	8005a26 <_printf_i+0xfa>
 8005a02:	6821      	ldr	r1, [r4, #0]
 8005a04:	6833      	ldr	r3, [r6, #0]
 8005a06:	0608      	lsls	r0, r1, #24
 8005a08:	f853 5b04 	ldr.w	r5, [r3], #4
 8005a0c:	d402      	bmi.n	8005a14 <_printf_i+0xe8>
 8005a0e:	0649      	lsls	r1, r1, #25
 8005a10:	bf48      	it	mi
 8005a12:	b2ad      	uxthmi	r5, r5
 8005a14:	2f6f      	cmp	r7, #111	@ 0x6f
 8005a16:	4852      	ldr	r0, [pc, #328]	@ (8005b60 <_printf_i+0x234>)
 8005a18:	6033      	str	r3, [r6, #0]
 8005a1a:	bf14      	ite	ne
 8005a1c:	230a      	movne	r3, #10
 8005a1e:	2308      	moveq	r3, #8
 8005a20:	2100      	movs	r1, #0
 8005a22:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005a26:	6866      	ldr	r6, [r4, #4]
 8005a28:	60a6      	str	r6, [r4, #8]
 8005a2a:	2e00      	cmp	r6, #0
 8005a2c:	db05      	blt.n	8005a3a <_printf_i+0x10e>
 8005a2e:	6821      	ldr	r1, [r4, #0]
 8005a30:	432e      	orrs	r6, r5
 8005a32:	f021 0104 	bic.w	r1, r1, #4
 8005a36:	6021      	str	r1, [r4, #0]
 8005a38:	d04b      	beq.n	8005ad2 <_printf_i+0x1a6>
 8005a3a:	4616      	mov	r6, r2
 8005a3c:	fbb5 f1f3 	udiv	r1, r5, r3
 8005a40:	fb03 5711 	mls	r7, r3, r1, r5
 8005a44:	5dc7      	ldrb	r7, [r0, r7]
 8005a46:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005a4a:	462f      	mov	r7, r5
 8005a4c:	42bb      	cmp	r3, r7
 8005a4e:	460d      	mov	r5, r1
 8005a50:	d9f4      	bls.n	8005a3c <_printf_i+0x110>
 8005a52:	2b08      	cmp	r3, #8
 8005a54:	d10b      	bne.n	8005a6e <_printf_i+0x142>
 8005a56:	6823      	ldr	r3, [r4, #0]
 8005a58:	07df      	lsls	r7, r3, #31
 8005a5a:	d508      	bpl.n	8005a6e <_printf_i+0x142>
 8005a5c:	6923      	ldr	r3, [r4, #16]
 8005a5e:	6861      	ldr	r1, [r4, #4]
 8005a60:	4299      	cmp	r1, r3
 8005a62:	bfde      	ittt	le
 8005a64:	2330      	movle	r3, #48	@ 0x30
 8005a66:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005a6a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005a6e:	1b92      	subs	r2, r2, r6
 8005a70:	6122      	str	r2, [r4, #16]
 8005a72:	f8cd a000 	str.w	sl, [sp]
 8005a76:	464b      	mov	r3, r9
 8005a78:	aa03      	add	r2, sp, #12
 8005a7a:	4621      	mov	r1, r4
 8005a7c:	4640      	mov	r0, r8
 8005a7e:	f7ff fee7 	bl	8005850 <_printf_common>
 8005a82:	3001      	adds	r0, #1
 8005a84:	d14a      	bne.n	8005b1c <_printf_i+0x1f0>
 8005a86:	f04f 30ff 	mov.w	r0, #4294967295
 8005a8a:	b004      	add	sp, #16
 8005a8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a90:	6823      	ldr	r3, [r4, #0]
 8005a92:	f043 0320 	orr.w	r3, r3, #32
 8005a96:	6023      	str	r3, [r4, #0]
 8005a98:	4832      	ldr	r0, [pc, #200]	@ (8005b64 <_printf_i+0x238>)
 8005a9a:	2778      	movs	r7, #120	@ 0x78
 8005a9c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005aa0:	6823      	ldr	r3, [r4, #0]
 8005aa2:	6831      	ldr	r1, [r6, #0]
 8005aa4:	061f      	lsls	r7, r3, #24
 8005aa6:	f851 5b04 	ldr.w	r5, [r1], #4
 8005aaa:	d402      	bmi.n	8005ab2 <_printf_i+0x186>
 8005aac:	065f      	lsls	r7, r3, #25
 8005aae:	bf48      	it	mi
 8005ab0:	b2ad      	uxthmi	r5, r5
 8005ab2:	6031      	str	r1, [r6, #0]
 8005ab4:	07d9      	lsls	r1, r3, #31
 8005ab6:	bf44      	itt	mi
 8005ab8:	f043 0320 	orrmi.w	r3, r3, #32
 8005abc:	6023      	strmi	r3, [r4, #0]
 8005abe:	b11d      	cbz	r5, 8005ac8 <_printf_i+0x19c>
 8005ac0:	2310      	movs	r3, #16
 8005ac2:	e7ad      	b.n	8005a20 <_printf_i+0xf4>
 8005ac4:	4826      	ldr	r0, [pc, #152]	@ (8005b60 <_printf_i+0x234>)
 8005ac6:	e7e9      	b.n	8005a9c <_printf_i+0x170>
 8005ac8:	6823      	ldr	r3, [r4, #0]
 8005aca:	f023 0320 	bic.w	r3, r3, #32
 8005ace:	6023      	str	r3, [r4, #0]
 8005ad0:	e7f6      	b.n	8005ac0 <_printf_i+0x194>
 8005ad2:	4616      	mov	r6, r2
 8005ad4:	e7bd      	b.n	8005a52 <_printf_i+0x126>
 8005ad6:	6833      	ldr	r3, [r6, #0]
 8005ad8:	6825      	ldr	r5, [r4, #0]
 8005ada:	6961      	ldr	r1, [r4, #20]
 8005adc:	1d18      	adds	r0, r3, #4
 8005ade:	6030      	str	r0, [r6, #0]
 8005ae0:	062e      	lsls	r6, r5, #24
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	d501      	bpl.n	8005aea <_printf_i+0x1be>
 8005ae6:	6019      	str	r1, [r3, #0]
 8005ae8:	e002      	b.n	8005af0 <_printf_i+0x1c4>
 8005aea:	0668      	lsls	r0, r5, #25
 8005aec:	d5fb      	bpl.n	8005ae6 <_printf_i+0x1ba>
 8005aee:	8019      	strh	r1, [r3, #0]
 8005af0:	2300      	movs	r3, #0
 8005af2:	6123      	str	r3, [r4, #16]
 8005af4:	4616      	mov	r6, r2
 8005af6:	e7bc      	b.n	8005a72 <_printf_i+0x146>
 8005af8:	6833      	ldr	r3, [r6, #0]
 8005afa:	1d1a      	adds	r2, r3, #4
 8005afc:	6032      	str	r2, [r6, #0]
 8005afe:	681e      	ldr	r6, [r3, #0]
 8005b00:	6862      	ldr	r2, [r4, #4]
 8005b02:	2100      	movs	r1, #0
 8005b04:	4630      	mov	r0, r6
 8005b06:	f7fa fb63 	bl	80001d0 <memchr>
 8005b0a:	b108      	cbz	r0, 8005b10 <_printf_i+0x1e4>
 8005b0c:	1b80      	subs	r0, r0, r6
 8005b0e:	6060      	str	r0, [r4, #4]
 8005b10:	6863      	ldr	r3, [r4, #4]
 8005b12:	6123      	str	r3, [r4, #16]
 8005b14:	2300      	movs	r3, #0
 8005b16:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005b1a:	e7aa      	b.n	8005a72 <_printf_i+0x146>
 8005b1c:	6923      	ldr	r3, [r4, #16]
 8005b1e:	4632      	mov	r2, r6
 8005b20:	4649      	mov	r1, r9
 8005b22:	4640      	mov	r0, r8
 8005b24:	47d0      	blx	sl
 8005b26:	3001      	adds	r0, #1
 8005b28:	d0ad      	beq.n	8005a86 <_printf_i+0x15a>
 8005b2a:	6823      	ldr	r3, [r4, #0]
 8005b2c:	079b      	lsls	r3, r3, #30
 8005b2e:	d413      	bmi.n	8005b58 <_printf_i+0x22c>
 8005b30:	68e0      	ldr	r0, [r4, #12]
 8005b32:	9b03      	ldr	r3, [sp, #12]
 8005b34:	4298      	cmp	r0, r3
 8005b36:	bfb8      	it	lt
 8005b38:	4618      	movlt	r0, r3
 8005b3a:	e7a6      	b.n	8005a8a <_printf_i+0x15e>
 8005b3c:	2301      	movs	r3, #1
 8005b3e:	4632      	mov	r2, r6
 8005b40:	4649      	mov	r1, r9
 8005b42:	4640      	mov	r0, r8
 8005b44:	47d0      	blx	sl
 8005b46:	3001      	adds	r0, #1
 8005b48:	d09d      	beq.n	8005a86 <_printf_i+0x15a>
 8005b4a:	3501      	adds	r5, #1
 8005b4c:	68e3      	ldr	r3, [r4, #12]
 8005b4e:	9903      	ldr	r1, [sp, #12]
 8005b50:	1a5b      	subs	r3, r3, r1
 8005b52:	42ab      	cmp	r3, r5
 8005b54:	dcf2      	bgt.n	8005b3c <_printf_i+0x210>
 8005b56:	e7eb      	b.n	8005b30 <_printf_i+0x204>
 8005b58:	2500      	movs	r5, #0
 8005b5a:	f104 0619 	add.w	r6, r4, #25
 8005b5e:	e7f5      	b.n	8005b4c <_printf_i+0x220>
 8005b60:	08005cad 	.word	0x08005cad
 8005b64:	08005cbe 	.word	0x08005cbe

08005b68 <memmove>:
 8005b68:	4288      	cmp	r0, r1
 8005b6a:	b510      	push	{r4, lr}
 8005b6c:	eb01 0402 	add.w	r4, r1, r2
 8005b70:	d902      	bls.n	8005b78 <memmove+0x10>
 8005b72:	4284      	cmp	r4, r0
 8005b74:	4623      	mov	r3, r4
 8005b76:	d807      	bhi.n	8005b88 <memmove+0x20>
 8005b78:	1e43      	subs	r3, r0, #1
 8005b7a:	42a1      	cmp	r1, r4
 8005b7c:	d008      	beq.n	8005b90 <memmove+0x28>
 8005b7e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005b82:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005b86:	e7f8      	b.n	8005b7a <memmove+0x12>
 8005b88:	4402      	add	r2, r0
 8005b8a:	4601      	mov	r1, r0
 8005b8c:	428a      	cmp	r2, r1
 8005b8e:	d100      	bne.n	8005b92 <memmove+0x2a>
 8005b90:	bd10      	pop	{r4, pc}
 8005b92:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005b96:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005b9a:	e7f7      	b.n	8005b8c <memmove+0x24>

08005b9c <_sbrk_r>:
 8005b9c:	b538      	push	{r3, r4, r5, lr}
 8005b9e:	4d06      	ldr	r5, [pc, #24]	@ (8005bb8 <_sbrk_r+0x1c>)
 8005ba0:	2300      	movs	r3, #0
 8005ba2:	4604      	mov	r4, r0
 8005ba4:	4608      	mov	r0, r1
 8005ba6:	602b      	str	r3, [r5, #0]
 8005ba8:	f7fb ffe4 	bl	8001b74 <_sbrk>
 8005bac:	1c43      	adds	r3, r0, #1
 8005bae:	d102      	bne.n	8005bb6 <_sbrk_r+0x1a>
 8005bb0:	682b      	ldr	r3, [r5, #0]
 8005bb2:	b103      	cbz	r3, 8005bb6 <_sbrk_r+0x1a>
 8005bb4:	6023      	str	r3, [r4, #0]
 8005bb6:	bd38      	pop	{r3, r4, r5, pc}
 8005bb8:	20001370 	.word	0x20001370

08005bbc <memcpy>:
 8005bbc:	440a      	add	r2, r1
 8005bbe:	4291      	cmp	r1, r2
 8005bc0:	f100 33ff 	add.w	r3, r0, #4294967295
 8005bc4:	d100      	bne.n	8005bc8 <memcpy+0xc>
 8005bc6:	4770      	bx	lr
 8005bc8:	b510      	push	{r4, lr}
 8005bca:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005bce:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005bd2:	4291      	cmp	r1, r2
 8005bd4:	d1f9      	bne.n	8005bca <memcpy+0xe>
 8005bd6:	bd10      	pop	{r4, pc}

08005bd8 <_realloc_r>:
 8005bd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005bdc:	4607      	mov	r7, r0
 8005bde:	4614      	mov	r4, r2
 8005be0:	460d      	mov	r5, r1
 8005be2:	b921      	cbnz	r1, 8005bee <_realloc_r+0x16>
 8005be4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005be8:	4611      	mov	r1, r2
 8005bea:	f7ff bc4d 	b.w	8005488 <_malloc_r>
 8005bee:	b92a      	cbnz	r2, 8005bfc <_realloc_r+0x24>
 8005bf0:	f7ff fbde 	bl	80053b0 <_free_r>
 8005bf4:	4625      	mov	r5, r4
 8005bf6:	4628      	mov	r0, r5
 8005bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005bfc:	f000 f81a 	bl	8005c34 <_malloc_usable_size_r>
 8005c00:	4284      	cmp	r4, r0
 8005c02:	4606      	mov	r6, r0
 8005c04:	d802      	bhi.n	8005c0c <_realloc_r+0x34>
 8005c06:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005c0a:	d8f4      	bhi.n	8005bf6 <_realloc_r+0x1e>
 8005c0c:	4621      	mov	r1, r4
 8005c0e:	4638      	mov	r0, r7
 8005c10:	f7ff fc3a 	bl	8005488 <_malloc_r>
 8005c14:	4680      	mov	r8, r0
 8005c16:	b908      	cbnz	r0, 8005c1c <_realloc_r+0x44>
 8005c18:	4645      	mov	r5, r8
 8005c1a:	e7ec      	b.n	8005bf6 <_realloc_r+0x1e>
 8005c1c:	42b4      	cmp	r4, r6
 8005c1e:	4622      	mov	r2, r4
 8005c20:	4629      	mov	r1, r5
 8005c22:	bf28      	it	cs
 8005c24:	4632      	movcs	r2, r6
 8005c26:	f7ff ffc9 	bl	8005bbc <memcpy>
 8005c2a:	4629      	mov	r1, r5
 8005c2c:	4638      	mov	r0, r7
 8005c2e:	f7ff fbbf 	bl	80053b0 <_free_r>
 8005c32:	e7f1      	b.n	8005c18 <_realloc_r+0x40>

08005c34 <_malloc_usable_size_r>:
 8005c34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005c38:	1f18      	subs	r0, r3, #4
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	bfbc      	itt	lt
 8005c3e:	580b      	ldrlt	r3, [r1, r0]
 8005c40:	18c0      	addlt	r0, r0, r3
 8005c42:	4770      	bx	lr

08005c44 <_init>:
 8005c44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c46:	bf00      	nop
 8005c48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005c4a:	bc08      	pop	{r3}
 8005c4c:	469e      	mov	lr, r3
 8005c4e:	4770      	bx	lr

08005c50 <_fini>:
 8005c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c52:	bf00      	nop
 8005c54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005c56:	bc08      	pop	{r3}
 8005c58:	469e      	mov	lr, r3
 8005c5a:	4770      	bx	lr
